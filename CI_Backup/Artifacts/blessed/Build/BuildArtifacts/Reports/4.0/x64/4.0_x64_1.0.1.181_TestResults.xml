<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="D:\JENKINS\jobs\ermeX_Blessed\workspace\FrameworkVersion\4.0\Platform\x64\blessed\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x64\Release\ermeX.Tests.Bus.Listening.dll" total="381" errors="0" failures="0" not-run="36" inconclusive="7" ignored="36" skipped="0" invalid="0" date="2013-01-20" time="23:20:20">
  <environment nunit-version="2.5.6.10205" clr-version="2.0.50727.5466" os-version="Microsoft Windows NT 6.1.7601 Service Pack 1" platform="Win32NT" cwd="D:\JENKINS\jobs\ermeX_Blessed\workspace\FrameworkVersion\4.0\Platform\x64\blessed\Build\ScriptsBuild" machine-name="MIGUEL-PC" user="SYSTEM" user-domain="WORKGROUP" />
  <culture-info current-culture="es-ES" current-uiculture="es-ES" />
  <test-suite type="Test Project" name="" executed="True" result="Success" success="True" time="1613.293" asserts="0">
    <results>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeX_Blessed\workspace\FrameworkVersion\4.0\Platform\x64\blessed\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x64\Release\ermeX.Tests.Bus.Listening.dll" executed="True" result="Success" success="True" time="11.222" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="11.199" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="11.188" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Bus" executed="True" result="Success" success="True" time="11.180" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Listening" executed="True" result="Success" success="True" time="11.172" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Handlers" executed="True" result="Success" success="True" time="11.161" asserts="0">
                            <results>
                              <test-suite type="Namespace" name="InternalMessageHandling" executed="True" result="Success" success="True" time="11.154" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="ReceptionMessageHandlerTester" executed="True" result="Success" success="True" time="9.662" asserts="0">
                                    <results>
                                      <test-suite type="ParameterizedTest" name="Can_Handle_Message" executed="True" result="Success" success="True" time="9.379" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.ReceptionMessageHandlerTester.Can_Handle_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="9.367" asserts="4" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="Enqueues_NonDistributedMessages_OnStartUp" executed="True" result="Success" success="True" time="0.021" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.ReceptionMessageHandlerTester.Enqueues_NonDistributedMessages_OnStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="0.020" asserts="2" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite type="Namespace" name="WorkflowHandlers" executed="True" result="Success" success="True" time="1.487" asserts="0">
                                    <results>
                                      <test-suite type="TestFixture" name="QueueDispatcherManagerTester" executed="True" result="Success" success="True" time="1.136" asserts="0">
                                        <results>
                                          <test-suite type="ParameterizedTest" name="Can_DeliverMany_Messages_OrderedByGeneration" executed="True" result="Success" success="True" time="0.986" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Can_DeliverMany_Messages_OrderedByGeneration(SqliteInMemory)" executed="True" result="Success" success="True" time="0.985" asserts="52" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Can_DeliverRespecting_Latency" executed="False" result="Ignored">
                                            <reason>
                                              <message><![CDATA[This class will be upgraded ASAP. Its not worth to test more with the current resources]]></message>
                                            </reason>
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Can_DeliverRespecting_Latency(SqliteInMemory)" executed="False" result="Ignored">
                                                <reason>
                                                  <message><![CDATA[This class will be upgraded ASAP. Its not worth to test more with the current resources]]></message>
                                                </reason>
                                              </test-case>
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Can_Dispatch_Messages" executed="True" result="Success" success="True" time="0.070" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Can_Dispatch_Messages(SqliteInMemory)" executed="True" result="Success" success="True" time="0.038" asserts="4" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Removes_Dispatched_Messages" executed="False" result="Ignored">
                                            <reason>
                                              <message><![CDATA[Its covered implicitly in other test cases]]></message>
                                            </reason>
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Removes_Dispatched_Messages(SqliteInMemory)" executed="False" result="Ignored">
                                                <reason>
                                                  <message><![CDATA[Its covered implicitly in other test cases]]></message>
                                                </reason>
                                              </test-case>
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Retries_Failed_Messages" executed="True" result="Success" success="True" time="0.050" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Retries_Failed_Messages(SqliteInMemory)" executed="True" result="Success" success="True" time="0.050" asserts="5" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="When_Disposed_Removes_ScheduledJobs" executed="False" result="Ignored">
                                            <reason>
                                              <message><![CDATA[This class will be upgraded ASAP. Its not worth to test more with the current resources]]></message>
                                            </reason>
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.When_Disposed_Removes_ScheduledJobs(SqliteInMemory)" executed="False" result="Ignored">
                                                <reason>
                                                  <message><![CDATA[This class will be upgraded ASAP. Its not worth to test more with the current resources]]></message>
                                                </reason>
                                              </test-case>
                                            </results>
                                          </test-suite>
                                        </results>
                                      </test-suite>
                                      <test-suite type="TestFixture" name="ReceptionMessageDistributorTester" executed="True" result="Success" success="True" time="0.340" asserts="0">
                                        <results>
                                          <test-suite type="ParameterizedTest" name="Can_Distribute_Messages" executed="True" result="Success" success="True" time="0.179" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.Can_Distribute_Messages(SqliteInMemory)" executed="True" result="Success" success="True" time="0.179" asserts="5" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Enqueues_NonDeliveredMessages_OnStartUp" executed="True" result="Success" success="True" time="0.032" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.Enqueues_NonDeliveredMessages_OnStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="0.032" asserts="5" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Removes_Source_Message_Once_Distributed" executed="False" result="Ignored">
                                            <reason>
                                              <message><![CDATA[Tehre are assertions in the other tests to probe this]]></message>
                                            </reason>
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.Removes_Source_Message_Once_Distributed(SqliteInMemory)" executed="False" result="Ignored">
                                                <reason>
                                                  <message><![CDATA[Tehre are assertions in the other tests to probe this]]></message>
                                                </reason>
                                              </test-case>
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="When_Subscribed_ToBase_Type_Will_DistributeIt_Correctly" executed="True" result="Success" success="True" time="0.051" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.When_Subscribed_ToBase_Type_Will_DistributeIt_Correctly(SqliteInMemory)" executed="True" result="Success" success="True" time="0.050" asserts="5" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="When_Subscribed_ToConcrete_Type_Will_DistributeIt_Correctly" executed="True" result="Success" success="True" time="0.050" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.When_Subscribed_ToConcrete_Type_Will_DistributeIt_Correctly(SqliteInMemory)" executed="True" result="Success" success="True" time="0.050" asserts="5" />
                                            </results>
                                          </test-suite>
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeX_Blessed\workspace\FrameworkVersion\4.0\Platform\x64\blessed\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x64\Release\ermeX.Tests.Bus.Publishing.dll" executed="True" result="Success" success="True" time="43.734" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="43.709" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="43.701" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Bus" executed="True" result="Success" success="True" time="43.693" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Publishing" executed="True" result="Success" success="True" time="43.685" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Dispatching" executed="True" result="Success" success="True" time="43.680" asserts="0">
                            <results>
                              <test-suite type="Namespace" name="Messages" executed="True" result="Success" success="True" time="43.675" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="MessageCollectorTester" executed="True" result="Success" success="True" time="8.750" asserts="0">
                                    <results>
                                      <test-suite type="ParameterizedTest" name="CanDispatchMessage" executed="True" result="Success" success="True" time="8.119" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageCollectorTester.CanDispatchMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="8.111" asserts="5" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="ComponentStopsOnDisposal" executed="True" result="Success" success="True" time="0.015" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageCollectorTester.ComponentStopsOnDisposal(SqliteInMemory)" executed="True" result="Success" success="True" time="0.014" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="RemovesExpiredItems" executed="True" result="Success" success="True" time="0.336" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageCollectorTester.RemovesExpiredItems(SqliteInMemory)" executed="True" result="Success" success="True" time="0.335" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="SendsExistingItemsOnStart" executed="True" result="Success" success="True" time="0.024" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageCollectorTester.SendsExistingItemsOnStart(SqliteInMemory)" executed="True" result="Success" success="True" time="0.023" asserts="3" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="MessageDistributorTester" executed="True" result="Success" success="True" time="12.488" asserts="0">
                                    <results>
                                      <test-suite type="ParameterizedTest" name="CanDispatch_NotSentMessage" executed="True" result="Success" success="True" time="0.591" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageDistributorTester.CanDispatch_NotSentMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="0.590" asserts="12" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="DontDispatchSentMessage" executed="True" result="Success" success="True" time="11.879" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageDistributorTester.DontDispatchSentMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="11.878" asserts="4" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="MessageSubscriberDispatcherTester" executed="True" result="Success" success="True" time="22.432" asserts="0">
                                    <results>
                                      <test-suite type="ParameterizedTest" name="AfterSend_Items_MarksThemAsSent" executed="True" result="Success" success="True" time="0.259" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.AfterSend_Items_MarksThemAsSent(SqliteInMemory)" executed="True" result="Success" success="True" time="0.258" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="DontSend_Expired_Items" executed="True" result="Success" success="True" time="5.019" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.DontSend_Expired_Items(SqliteInMemory)" executed="True" result="Success" success="True" time="5.018" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="RestoresPending_MessagesFrom_PreviousSessions_OnStartUp" executed="True" result="Success" success="True" time="0.076" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.RestoresPending_MessagesFrom_PreviousSessions_OnStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="0.053" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="SendsEnqueued_Items" executed="True" result="Success" success="True" time="0.020" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.SendsEnqueued_Items(SqliteInMemory)" executed="True" result="Success" success="True" time="0.019" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="WhenSend_Fails_Increases_Tries_And_ReEnqueuesItem" executed="True" result="Success" success="True" time="17.032" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.WhenSend_Fails_Increases_Tries_And_ReEnqueuesItem(SqliteInMemory)" executed="True" result="Success" success="True" time="17.031" asserts="3" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeX_Blessed\workspace\FrameworkVersion\4.0\Platform\x64\blessed\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x64\Release\ermeX.Tests.Common.dll" executed="False" result="NotRunnable">
        <reason>
          <message><![CDATA[Has no TestFixtures]]></message>
        </reason>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeX_Blessed\workspace\FrameworkVersion\4.0\Platform\x64\blessed\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x64\Release\ermeX.Tests.DAL.Integration.dll" executed="True" result="Success" success="True" time="505.718" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="505.639" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="505.570" asserts="0">
                <results>
                  <test-suite type="Namespace" name="DAL" executed="True" result="Success" success="True" time="505.508" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Integration" executed="True" result="Success" success="True" time="505.440" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="DataSources" executed="True" result="Success" success="True" time="505.429" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="AppComponentDataSourceTester" executed="True" result="Success" success="True" time="85.574" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="21.269" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="16.102" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="3.124" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="2.031" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="5.977" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.998" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.172" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.805" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="7.875" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="3.103" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.530" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="2.239" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetByComponentId" executed="True" result="Success" success="True" time="5.793" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetByComponentId(SqlServer2008)" executed="True" result="Success" success="True" time="1.974" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetByComponentId(Sqlite)" executed="True" result="Success" success="True" time="1.883" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetByComponentId(SqliteInMemory)" executed="True" result="Success" success="True" time="1.932" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="5.234" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="2.244" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="1.592" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.395" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateExchanger" executed="True" result="Success" success="True" time="6.712" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateExchanger(SqlServer2008)" executed="True" result="Success" success="True" time="1.977" asserts="5" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateExchanger(Sqlite)" executed="True" result="Success" success="True" time="2.731" asserts="5" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateExchanger(SqliteInMemory)" executed="True" result="Success" success="True" time="2.000" asserts="5" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="4.754" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.373" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="1.964" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.414" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Doesnt_Update_When_Version_Is_Older_Than_Current" executed="True" result="Success" success="True" time="5.841" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqlServer2008)" executed="True" result="Success" success="True" time="1.821" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(Sqlite)" executed="True" result="Success" success="True" time="2.525" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqliteInMemory)" executed="True" result="Success" success="True" time="1.491" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="6.081" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="2.013" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.014" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="2.051" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="5.452" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="2.160" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="1.843" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.447" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="6.344" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.821" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.859" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.661" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ChunkedServiceRequestMessageDataSourceTester" executed="True" result="Success" success="True" time="54.416" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="8.781" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="3.864" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.884" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="2.028" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="5.397" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.512" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.051" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.831" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="5.689" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.953" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="1.980" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.752" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="5.417" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.566" asserts="7" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="1.933" asserts="7" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.916" asserts="7" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="5.627" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="2.012" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.101" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.512" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="6.688" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="2.333" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.255" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="2.098" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="5.781" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="1.786" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.316" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.675" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="6.106" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.920" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.624" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.559" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ConnectivityDetailsDataSourceTester" executed="True" result="Success" success="True" time="66.808" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="9.417" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="4.251" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="3.198" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.962" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="6.077" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.864" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.543" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.667" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="6.164" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="2.086" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.565" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.509" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="7.050" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="2.479" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="2.376" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="2.192" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="6.359" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="2.641" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.021" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.695" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Doesnt_Update_When_Version_Is_Older_Than_Current" executed="True" result="Success" success="True" time="6.929" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqlServer2008)" executed="True" result="Success" success="True" time="1.906" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(Sqlite)" executed="True" result="Success" success="True" time="3.271" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqliteInMemory)" executed="True" result="Success" success="True" time="1.748" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="5.985" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.605" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.027" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="2.351" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="6.957" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="2.219" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.259" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="2.476" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="6.961" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="2.160" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.911" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.886" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="IncomingMessageDataSourceTester" executed="True" result="Success" success="True" time="59.124" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="9.436" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="5.020" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.884" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.526" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="6.356" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.762" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.549" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="2.041" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="6.786" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="2.118" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.566" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="2.098" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="5.423" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.416" asserts="8" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="2.362" asserts="8" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.641" asserts="8" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="6.521" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="2.177" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.557" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.785" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="6.561" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="2.168" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.317" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="2.072" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="5.855" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="1.940" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.220" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.690" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="6.953" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.867" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="3.225" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.859" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="IncomingMessageSuscriptionsSourceTester" executed="True" result="Success" success="True" time="60.979" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="9.450" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="4.022" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="3.530" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.889" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="7.036" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="2.016" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.752" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="2.266" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="7.874" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="2.520" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.918" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="2.431" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="6.263" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.448" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="2.979" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.834" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="6.204" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.989" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.243" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.970" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="6.779" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="2.417" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.807" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.551" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="6.144" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="1.812" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.726" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.604" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="6.298" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.953" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.712" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.630" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="OutgoingMessageDataSourceTester" executed="True" result="Success" success="True" time="57.207" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="8.405" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="3.880" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.959" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.563" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="6.441" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.768" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.609" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="2.061" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="6.268" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.826" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.760" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.678" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="5.541" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.641" asserts="7" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="1.761" asserts="7" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="2.137" asserts="7" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="6.198" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.967" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.145" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="2.081" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="6.229" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.688" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.474" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="2.063" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="6.127" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="2.153" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.410" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.561" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="6.942" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="2.438" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.368" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="2.134" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="OutgoingMessageSuscriptionsSourceTester" executed="True" result="Success" success="True" time="66.484" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="9.510" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="4.465" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="3.065" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.971" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="6.401" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="2.098" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.537" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.763" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="5.863" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.663" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.335" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.863" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="6.136" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="2.198" asserts="5" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="2.262" asserts="5" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.673" asserts="5" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="5.845" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.964" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.171" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.707" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Doesnt_Update_When_Version_Is_Older_Than_Current" executed="True" result="Success" success="True" time="6.454" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqlServer2008)" executed="True" result="Success" success="True" time="2.243" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(Sqlite)" executed="True" result="Success" success="True" time="2.625" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqliteInMemory)" executed="True" result="Success" success="True" time="1.584" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="6.981" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.856" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="3.066" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="2.056" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="7.070" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="2.404" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.763" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.895" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="6.618" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="2.487" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.507" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.621" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ServiceDetailsSourceTester" executed="True" result="Success" success="True" time="54.773" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="8.807" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="4.413" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.635" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.755" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="6.031" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.550" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.620" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.859" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="5.716" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="2.036" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.011" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.665" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="6.738" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="2.345" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="2.026" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="2.363" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetByOperationId" executed="True" result="Success" success="True" time="4.429" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetByOperationId(SqlServer2008)" executed="True" result="Success" success="True" time="2.171" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetByOperationId(Sqlite)" executed="True" result="Success" success="True" time="1.189" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetByOperationId(SqliteInMemory)" executed="True" result="Success" success="True" time="1.066" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CantInsertRepeatedOperations" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[Decide if this test is still useful as it needs to be modified]]></message>
                                    </reason>
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CantInsertRepeatedOperations(SqlServer2008)" executed="False" result="Ignored">
                                        <reason>
                                          <message><![CDATA[Decide if this test is still useful as it needs to be modified]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CantInsertRepeatedOperations(Sqlite)" executed="False" result="Ignored">
                                        <reason>
                                          <message><![CDATA[Decide if this test is still useful as it needs to be modified]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CantInsertRepeatedOperations(SqliteInMemory)" executed="False" result="Ignored">
                                        <reason>
                                          <message><![CDATA[Decide if this test is still useful as it needs to be modified]]></message>
                                        </reason>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="5.675" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.577" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="1.714" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="2.381" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Doesnt_Update_When_Version_Is_Older_Than_Current" executed="True" result="Success" success="True" time="4.321" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqlServer2008)" executed="True" result="Success" success="True" time="2.237" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(Sqlite)" executed="True" result="Success" success="True" time="1.188" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqliteInMemory)" executed="True" result="Success" success="True" time="0.893" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="3.252" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="0.916" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="1.383" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="0.950" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="3.314" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="1.068" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="1.391" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="0.852" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="4.256" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.829" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="1.418" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.006" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeX_Blessed\workspace\FrameworkVersion\4.0\Platform\x64\blessed\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x64\Release\ermeX.Tests.dll" executed="True" result="Success" success="True" time="951.409" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="951.330" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="951.308" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Acceptance" executed="True" result="Success" success="True" time="761.435" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="HandshakeTester" executed="True" result="Success" success="True" time="62.299" asserts="0">
                        <results>
                          <test-suite type="ParameterizedTest" name="SeveralComponents_Using_SameFriend_CanStart_AtSameTime" executed="True" result="Success" success="True" time="62.139" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.HandshakeTester.SeveralComponents_Using_SameFriend_CanStart_AtSameTime(SqliteInMemory)" executed="True" result="Success" success="True" time="62.128" asserts="852" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="MessagingAcceptanceTester" executed="True" result="Success" success="True" time="484.506" asserts="0">
                        <results>
                          <test-suite type="ParameterizedTest" name="CanSubscribeBeforeStartUp" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.CanSubscribeBeforeStartUp(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Components_CanPublish_Any_Message" executed="True" result="Success" success="True" time="9.534" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.Components_CanPublish_Any_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="9.533" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="FiveComponentsCanReceiveMessagesAfterBeingOffLine" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.FiveComponentsCanReceiveMessagesAfterBeingOffLine(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="MessagesAreDeliveredFIFO" executed="True" result="Success" success="True" time="28.379" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.MessagesAreDeliveredFIFO(SqliteInMemory)" executed="True" result="Success" success="True" time="28.379" asserts="11" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="MessagesAreDeliveredFIFO_SeveralComponents" executed="True" result="Success" success="True" time="42.692" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.MessagesAreDeliveredFIFO_SeveralComponents(SqliteInMemory)" executed="True" result="Success" success="True" time="42.692" asserts="27" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="OneComponentCanSubscribeToItsOwnMessages" executed="True" result="Success" success="True" time="12.328" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.OneComponentCanSubscribeToItsOwnMessages(SqliteInMemory)" executed="True" result="Success" success="True" time="12.327" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SendMessageAndReception" executed="True" result="Success" success="True" time="27.865" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SendMessageAndReception(SqliteInMemory)" executed="True" result="Success" success="True" time="27.864" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Several_Components_SuscriptorsOnlyReceives_Its_Own_Suscriptions" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.Several_Components_SuscriptorsOnlyReceives_Its_Own_Suscriptions(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SeveralComponentsCanExchangeMessages" executed="True" result="Success" success="True" time="42.448" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SeveralComponentsCanExchangeMessages(SqliteInMemory)" executed="True" result="Success" success="True" time="42.447" asserts="9" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SeveralReceiversSendMessageAndReception" executed="True" result="Success" success="True" time="74.038" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SeveralReceiversSendMessageAndReception(SqliteInMemory)" executed="True" result="Success" success="True" time="74.038" asserts="17" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SuscriptorCanReceiveMessagesAfterBeing_Disconnected" executed="True" result="Success" success="True" time="41.050" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SuscriptorCanReceiveMessagesAfterBeing_Disconnected(SqliteInMemory)" executed="True" result="Success" success="True" time="41.050" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SuscriptorCanReceiveMessagesAfterBeing_Disconnected_And_Add_Subscriptions" executed="True" result="Success" success="True" time="70.719" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SuscriptorCanReceiveMessagesAfterBeing_Disconnected_And_Add_Subscriptions(SqliteInMemory)" executed="True" result="Success" success="True" time="70.712" asserts="9" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SuscriptorCanReceiveMessagesAfterBeingOffline" executed="True" result="Success" success="True" time="28.356" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SuscriptorCanReceiveMessagesAfterBeingOffline(SqliteInMemory)" executed="True" result="Success" success="True" time="28.356" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoComponentsCanExchangeMessages" executed="True" result="Success" success="True" time="28.793" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.TwoComponentsCanExchangeMessages(SqliteInMemory)" executed="True" result="Success" success="True" time="28.792" asserts="9" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoComponentsCanReceiveMessagesAfterBeingOffLine" executed="True" result="Success" success="True" time="49.277" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.TwoComponentsCanReceiveMessagesAfterBeingOffLine(SqliteInMemory)" executed="True" result="Success" success="True" time="49.277" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoSuscriptions_Of_The_SameHandler_Are_HandledBy_TheSame_ObjectHandler" executed="True" result="Success" success="True" time="28.971" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.TwoSuscriptions_Of_The_SameHandler_Are_HandledBy_TheSame_ObjectHandler(SqliteInMemory)" executed="True" result="Success" success="True" time="28.968" asserts="5" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ServicesAcceptanceTester" executed="True" result="Success" success="True" time="214.615" asserts="0">
                        <results>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_ArrayParamsMethod_Returns" executed="True" result="Success" success="True" time="9.718" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_ArrayParamsMethod_Returns(SqliteInMemory)" executed="True" result="Success" success="True" time="9.717" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_EmptyMethod" executed="True" result="Success" success="True" time="0.685" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_EmptyMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.685" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_EmptyMethod_ReturnValue" executed="True" result="Success" success="True" time="0.870" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_EmptyMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="0.869" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_OneParamMethod" executed="True" result="Success" success="True" time="0.699" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_OneParamMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.697" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_OneParamMethod_ReturnValue" executed="True" result="Success" success="True" time="0.884" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_OneParamMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="0.884" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_ReturnsArray" executed="True" result="Success" success="True" time="0.825" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_ReturnsArray(SqliteInMemory)" executed="True" result="Success" success="True" time="0.823" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_SeveralParamsMethod" executed="True" result="Success" success="True" time="0.754" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_SeveralParamsMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.754" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_SeveralParamsMethod_ReturnValue" executed="True" result="Success" success="True" time="0.853" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_SeveralParamsMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="0.852" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_ArrayParamsMethod_Returns" executed="True" result="Success" success="True" time="13.362" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_ArrayParamsMethod_Returns(SqliteInMemory)" executed="True" result="Success" success="True" time="13.361" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_EmptyMethod" executed="True" result="Success" success="True" time="12.828" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_EmptyMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="12.827" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_EmptyMethod_ReturnValue" executed="True" result="Success" success="True" time="12.821" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_EmptyMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="12.821" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_OneParamMethod" executed="True" result="Success" success="True" time="13.114" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_OneParamMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="13.113" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_OneParamMethod_ReturnValue" executed="True" result="Success" success="True" time="14.194" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_OneParamMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="14.193" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_ReturnsArray" executed="True" result="Success" success="True" time="14.201" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_ReturnsArray(SqliteInMemory)" executed="True" result="Success" success="True" time="14.200" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_SeveralParamsMethod" executed="True" result="Success" success="True" time="13.720" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_SeveralParamsMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="13.720" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_SeveralParamsMethod_ReturnValue" executed="True" result="Success" success="True" time="13.578" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_SeveralParamsMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="13.578" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Components_CanPublish_Several_Services" executed="True" result="Success" success="True" time="24.436" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.Components_CanPublish_Several_Services(SqliteInMemory)" executed="True" result="Success" success="True" time="24.436" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SeveralComponents_Can_Serve_Same_Service_NoReturnValues" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[FIX]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.SeveralComponents_Can_Serve_Same_Service_NoReturnValues(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[FIX]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoComponents_CannotRegister_TheSameService_IfReturnValues" executed="True" result="Success" success="True" time="18.650" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.TwoComponents_CannotRegister_TheSameService_IfReturnValues(SqliteInMemory)" executed="True" result="Success" success="True" time="18.649" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoComponents_CanRegister_TheSameService_If_Dont_ReturnValues" executed="True" result="Success" success="True" time="30.841" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.TwoComponents_CanRegister_TheSameService_If_Dont_ReturnValues(SqliteInMemory)" executed="True" result="Success" success="True" time="30.841" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="When_CannotInvoke_ThrowsException" executed="True" result="Success" success="True" time="16.797" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.When_CannotInvoke_ThrowsException(SqliteInMemory)" executed="True" result="Success" success="True" time="16.797" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="When_Service_NotDefined_Returns_Null" executed="True" result="Success" success="True" time="0.712" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.When_Service_NotDefined_Returns_Null(SqliteInMemory)" executed="True" result="Success" success="True" time="0.711" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Common" executed="True" result="Success" success="True" time="94.133" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Serialization" executed="True" result="Success" success="True" time="94.128" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="JsonSerializerTests" executed="True" result="Success" success="True" time="3.648" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Common.Serialization.JsonSerializerTests.CanSerializeAndDeserialize_ClassWithInnerClass_Json" executed="True" result="Success" success="True" time="0.046" asserts="2" />
                              <test-case name="ermeX.Tests.Common.Serialization.JsonSerializerTests.CanSerializeAndDeserialize_Json" executed="True" result="Success" success="True" time="3.601" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="ObjectSerializerTests" executed="True" result="Success" success="True" time="81.909" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Common.Serialization.ObjectSerializerTests.CanSerializeAndDeserialize_ByteArray" executed="True" result="Success" success="True" time="0.136" asserts="1" />
                              <test-case name="ermeX.Tests.Common.Serialization.ObjectSerializerTests.CanSerializeAndDeserialize_ToFile" executed="True" result="Success" success="True" time="0.979" asserts="1" />
                              <test-case name="ermeX.Tests.Common.Serialization.ObjectSerializerTests.FromMarcGravell_Serialize_Deserialize_1M" executed="True" result="Success" success="True" time="80.792" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="TestApplicationSerializableMessages" executed="True" result="Success" success="True" time="8.561" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_BizMessage_and_Modify_TheProtobufContract" executed="True" result="Success" success="True" time="0.185" asserts="0" />
                              <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ChunckedServiceRequest_ToFile" executed="True" result="Success" success="True" time="0.105" asserts="1" />
                              <test-suite type="ParameterizedTest" name="CanSerializeAndDeserialize_LayerMessage_ToFile" executed="True" result="Success" success="True" time="2.245" asserts="0">
                                <results>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_LayerMessage_ToFile(Biz)" executed="True" result="Success" success="True" time="0.281" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_LayerMessage_ToFile(Bus)" executed="True" result="Success" success="True" time="1.054" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_LayerMessage_ToFile(Transport)" executed="True" result="Success" success="True" time="0.906" asserts="2" />
                                </results>
                              </test-suite>
                              <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_ToFile" executed="True" result="Success" success="True" time="0.699" asserts="2" />
                              <test-suite type="ParameterizedTest" name="CanSerializeAndDeserialize_ServiceRequest_WithCollection" executed="True" result="Success" success="True" time="5.047" asserts="0">
                                <results>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(1)" executed="True" result="Success" success="True" time="0.078" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(2)" executed="True" result="Success" success="True" time="0.085" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(40)" executed="True" result="Success" success="True" time="1.102" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(100)" executed="True" result="Success" success="True" time="1.169" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(200)" executed="True" result="Success" success="True" time="2.511" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(500)" executed="True" result="Inconclusive" success="False" time="0.086" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(1000)" executed="True" result="Inconclusive" success="False" time="0.001" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(5000)" executed="True" result="Inconclusive" success="False" time="0.001" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(10000)" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(50000)" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(500000)" executed="True" result="Inconclusive" success="False" time="0.001" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceResult_ToFile" executed="True" result="Success" success="True" time="0.255" asserts="3" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Dialogs" executed="True" result="Success" success="True" time="18.166" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="HandshakingTester" executed="True" result="Success" success="True" time="18.128" asserts="0">
                        <results>
                          <test-case name="ermeX.Tests.Dialogs.HandshakingTester.Caller_Waits_MyComponents_Message_response_With_TimeOut" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.HandshakingTester.Component_Wont_Handle_Events_Raised_Before_StartUp_Is_Finished" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-suite type="ParameterizedTest" name="Sends_JoinRequestMessage_OnStartUp" executed="True" result="Success" success="True" time="4.252" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.Sends_JoinRequestMessage_OnStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="4.252" asserts="5" />
                            </results>
                          </test-suite>
                          <test-case name="ermeX.Tests.Dialogs.HandshakingTester.When_Joined_Updates_Local_Message_Definitions" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.HandshakingTester.When_Joined_Updates_Local_NonSystem_Service_Definitions" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-suite type="ParameterizedTest" name="WhenReceived_JoinRequestMessage_Sends_MyComponentsMessage_To_The_Caller" executed="True" result="Success" success="True" time="1.999" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.WhenReceived_JoinRequestMessage_Sends_MyComponentsMessage_To_The_Caller(SqliteInMemory)" executed="True" result="Success" success="True" time="1.999" asserts="10" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="WhenRequest_JoinRequestMessage_Does_Not_SendJoinRequestMesage_Twice_To_SameComponent" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.WhenRequest_JoinRequestMessage_Does_Not_SendJoinRequestMesage_Twice_To_SameComponent(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="WhenRequest_JoinRequestMessage_SendsJoinRequestMesage_To_ReceivedComponents" executed="True" result="Success" success="True" time="7.585" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.WhenRequest_JoinRequestMessage_SendsJoinRequestMesage_To_ReceivedComponents(SqliteInMemory)" executed="True" result="Success" success="True" time="7.584" asserts="18" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="WhenRequest_JoinRequestMessage_UpdatesRequesterComponents" executed="True" result="Success" success="True" time="4.248" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.WhenRequest_JoinRequestMessage_UpdatesRequesterComponents(SqliteInMemory)" executed="True" result="Success" success="True" time="4.248" asserts="6" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="MessageSuscriptionsDialogTester" executed="True" result="Inconclusive" success="False" time="0.008" asserts="0">
                        <results>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.Doesnt_Suscribe_To_Its_Own_System_Messages" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.Sends_UpdateSuscription_When_A_LocalSuscriptionHasChanged" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.Sends_UpdateSuscription_When_A_LocalSuscriptionIsCreated" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.When_Received_MySubscriptions_UpdatesRemovesOrAddLocalDefinitions_And_Updates_Subscribed_MessagesInOutgoingQueues" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.When_Received_UpdateSuscription_UpdatesLocalDefinition" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="MyComponentsDialogTester" executed="False" result="Ignored">
                        <reason>
                          <message><![CDATA[It might not be necessary]]></message>
                        </reason>
                        <results>
                          <test-case name="ermeX.Tests.Dialogs.MyComponentsDialogTester.When_Received_MyComponents_Updates_LocalDefinitions" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[It might not be necessary]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MyComponentsDialogTester.When_Requested_MyComponents_SendsResponse_With_All_Components" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[It might not be necessary]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="PublishedServiceDialogTester" executed="True" result="Inconclusive" success="False" time="0.005" asserts="0">
                        <results>
                          <test-case name="ermeX.Tests.Dialogs.PublishedServiceDialogTester.Sends_UpdateService_When_A_LocalServicePublished_HasChanged" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.PublishedServiceDialogTester.Sends_UpdateService_When_A_LocalServicePublished_IsCreated" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.PublishedServiceDialogTester.When_Received_MyServices_UpdatesRemovesOrAddLocalDefinitions_And_UpdatesMessagesInOutgoingQueues" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.PublishedServiceDialogTester.When_Received_UpdateService_UpdatesLocalDefinition" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Services" executed="True" result="Success" success="True" time="33.480" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Builtin" executed="True" result="Success" success="True" time="33.287" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="SuperSockets" executed="True" result="Success" success="True" time="33.283" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="SuperSocketClientTester" executed="True" result="Success" success="True" time="6.364" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="Can_Send_Chunked_Message" description="Tests to send a big file" executed="True" result="Success" success="True" time="1.828" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Chunked_Message(5)" executed="True" result="Success" success="True" time="1.827" asserts="7" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Can_Send_Huge_Not_Chunked_Message" description="Tests to send a big file" executed="True" result="Success" success="True" time="2.383" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Huge_Not_Chunked_Message(1)" executed="True" result="Success" success="True" time="0.335" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Huge_Not_Chunked_Message(5)" executed="True" result="Success" success="True" time="0.734" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Huge_Not_Chunked_Message(10)" executed="True" result="Success" success="True" time="1.307" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Huge_Not_Chunked_Message(15)" executed="True" result="Inconclusive" success="False" time="0.002" asserts="0">
                                        <reason>
                                          <message><![CDATA[TODO]]></message>
                                        </reason>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanSendMessageWithLongResponse" executed="True" result="Success" success="True" time="0.811" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.CanSendMessageWithLongResponse(10)" executed="True" result="Success" success="True" time="0.284" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.CanSendMessageWithLongResponse(50)" executed="True" result="Success" success="True" time="0.293" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.CanSendMessageWithLongResponse(100)" executed="True" result="Success" success="True" time="0.230" asserts="7" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="ClientChoosesMostSuitableIpForSendingMessage" executed="True" result="Success" success="True" time="0.486" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ClientChoosesMostSuitableIpForSendingMessage(True)" executed="True" result="Success" success="True" time="0.223" asserts="6" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ClientChoosesMostSuitableIpForSendingMessage(False)" executed="True" result="Success" success="True" time="0.261" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.CanSendMessage" executed="True" result="Success" success="True" time="0.253" asserts="7" />
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.CanSendMessageToLocalMachine" executed="True" result="Success" success="True" time="0.339" asserts="7" />
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.CantSendToWrongIp" executed="True" result="Success" success="True" time="0.232" asserts="1" />
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.Client_Reports_When_Server_Failed_Handling" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.Client_Reports_When_Server_Handle_Success" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.Client_Reports_WhenServerCannotBeReached" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.Client_Reports_WhenTimeout" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="SuperSocketServerTester" executed="True" result="Success" success="True" time="26.912" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanReceiveChunkedMessage" executed="True" result="Success" success="True" time="0.410" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.CanReceiveChunkedMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="0.409" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanReceiveMessage" executed="True" result="Success" success="True" time="0.296" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.CanReceiveMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="0.295" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanReceiveMessageCollection" executed="True" result="Success" success="True" time="0.364" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.CanReceiveMessageCollection(SqliteInMemory)" executed="True" result="Success" success="True" time="0.363" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanReceiveSeveralMessages" executed="True" result="Success" success="True" time="3.868" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.CanReceiveSeveralMessages(SqliteInMemory)" executed="True" result="Success" success="True" time="3.868" asserts="1179" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenService_DoesntExistsInDb_ReturnsError" executed="True" result="Success" success="True" time="21.104" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.WhenService_DoesntExistsInDb_ReturnsError(SqliteInMemory,True)" executed="True" result="Success" success="True" time="10.572" asserts="2" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.WhenService_DoesntExistsInDb_ReturnsError(SqliteInMemory,False)" executed="True" result="Success" success="True" time="10.532" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenService_Is_RegisteredCallsHandler_Obj" executed="True" result="Success" success="True" time="0.844" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.WhenService_Is_RegisteredCallsHandler_Obj(SqliteInMemory,True)" executed="True" result="Success" success="True" time="0.429" asserts="5" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.WhenService_Is_RegisteredCallsHandler_Obj(SqliteInMemory,False)" executed="True" result="Success" success="True" time="0.414" asserts="5" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Sending" executed="True" result="Success" success="True" time="0.146" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Client" executed="True" result="Success" success="True" time="0.143" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="ServiceProxyTester" executed="True" result="Success" success="True" time="0.142" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanInvokeSend" executed="True" result="Success" success="True" time="0.027" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.CanInvokeSend(SqliteInMemory)" executed="True" result="Success" success="True" time="0.026" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenAllEndPointsFailed__ServiceResultError" executed="True" result="Success" success="True" time="0.024" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenAllEndPointsFailed__ServiceResultError(SqliteInMemory)" executed="True" result="Success" success="True" time="0.023" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenAllEndPointsFailed_CanBeReInvoked" executed="True" result="Success" success="True" time="0.008" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenAllEndPointsFailed_CanBeReInvoked(SqliteInMemory)" executed="True" result="Success" success="True" time="0.007" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenEndpointFailedTry_WithAllTheRestOfEndpoints" executed="True" result="Success" success="True" time="0.008" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenEndpointFailedTry_WithAllTheRestOfEndpoints(SqliteInMemory)" executed="True" result="Success" success="True" time="0.008" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenEndpointRaisesExceptionTry_WithAllTheRestOfEndpoints" executed="True" result="Success" success="True" time="0.008" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenEndpointRaisesExceptionTry_WithAllTheRestOfEndpoints(SqliteInMemory)" executed="True" result="Success" success="True" time="0.008" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenThereAreNotEndpointsItReturns_ServiceResultError" executed="True" result="Success" success="True" time="0.007" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenThereAreNotEndpointsItReturns_ServiceResultError(SqliteInMemory)" executed="True" result="Success" success="True" time="0.007" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="VersionUpgrade" executed="True" result="Success" success="True" time="7.188" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="VersionUpgradeHelperTests" executed="True" result="Success" success="True" time="7.187" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_RunUpgrades" executed="True" result="Success" success="True" time="4.733" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.Can_RunUpgrades(SqlServer2008)" executed="True" result="Success" success="True" time="1.327" asserts="1" />
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.Can_RunUpgrades(Sqlite)" executed="True" result="Success" success="True" time="2.487" asserts="1" />
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.Can_RunUpgrades(SqliteInMemory)" executed="True" result="Success" success="True" time="0.915" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="RunUpgrades_On_StartUp" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.RunUpgrades_On_StartUp(SqlServer2008)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.RunUpgrades_On_StartUp(Sqlite)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.RunUpgrades_On_StartUp(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="WorldGateTests" executed="True" result="Success" success="True" time="36.770" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="DiscoveringMessagesTests" executed="True" result="Success" success="True" time="5.516" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_Late_Subscribe_To_Messages_When_Handler_In_Other_Assemblies" executed="True" result="Success" success="True" time="1.085" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Late_Subscribe_To_Messages_When_Handler_In_Other_Assemblies(SqliteInMemory)" executed="True" result="Success" success="True" time="1.085" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Subscribe_To_Messages_In_Assembly" executed="True" result="Success" success="True" time="0.972" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Subscribe_To_Messages_In_Assembly(SqliteInMemory)" executed="True" result="Success" success="True" time="0.971" asserts="7" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Subscribe_To_Messages_In_Assembly_When_HandlerHasNonHandlerInterfaces" executed="True" result="Success" success="True" time="1.007" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Subscribe_To_Messages_In_Assembly_When_HandlerHasNonHandlerInterfaces(SqliteInMemory)" executed="True" result="Success" success="True" time="1.006" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Subscribe_To_Messages_In_Assembly_When_HandlerHasSeveralInterfaces" executed="True" result="Success" success="True" time="1.207" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Subscribe_To_Messages_In_Assembly_When_HandlerHasSeveralInterfaces(SqliteInMemory)" executed="True" result="Success" success="True" time="1.206" asserts="6" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Subscribe_To_Messages_In_Assembly_WithoutExcludingTypes" executed="True" result="Success" success="True" time="1.203" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Subscribe_To_Messages_In_Assembly_WithoutExcludingTypes(SqliteInMemory)" executed="True" result="Success" success="True" time="1.203" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="DiscoveringServicesTests" executed="True" result="Success" success="True" time="2.109" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_Late_Register_Services_In_Other_Assemblies" executed="True" result="Success" success="True" time="1.124" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringServicesTests.Can_Late_Register_Services_In_Other_Assemblies(SqliteInMemory)" executed="True" result="Success" success="True" time="1.124" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Services_In_Assemblies" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringServicesTests.Can_Register_Services_In_Assemblies(SqlServer2008)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Services_In_Assembly" executed="True" result="Success" success="True" time="0.965" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringServicesTests.Can_Register_Services_In_Assembly(SqliteInMemory)" executed="True" result="Success" success="True" time="0.964" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Doesnt_Register_Services_In_Other_Assemblies" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringServicesTests.Doesnt_Register_Services_In_Other_Assemblies(SqlServer2008)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RegisteringMessagesTests" executed="True" result="Success" success="True" time="6.007" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_Register_Message_Suscription_To_Object" executed="True" result="Success" success="True" time="1.220" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_Register_Message_Suscription_To_Object(SqliteInMemory)" executed="True" result="Success" success="True" time="1.219" asserts="8" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Message_Suscription_To_SeveralTypes" executed="True" result="Success" success="True" time="1.123" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_Register_Message_Suscription_To_SeveralTypes(SqliteInMemory)" executed="True" result="Success" success="True" time="1.123" asserts="17" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Message_Suscription_To_Type" executed="True" result="Success" success="True" time="1.193" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_Register_Message_Suscription_To_Type(SqliteInMemory)" executed="True" result="Success" success="True" time="1.192" asserts="8" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Several_Message_Suscriptions_To_SameType" executed="True" result="Success" success="True" time="0.963" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_Register_Several_Message_Suscriptions_To_SameType(SqliteInMemory)" executed="True" result="Success" success="True" time="0.962" asserts="21" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_RegisterSuscription" executed="True" result="Success" success="True" time="0.760" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_RegisterSuscription(SqliteInMemory)" executed="True" result="Success" success="True" time="0.759" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Cant_Register_Message_Suscription_To_WrongType" executed="True" result="Success" success="True" time="0.725" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Cant_Register_Message_Suscription_To_WrongType(SqliteInMemory)" executed="True" result="Success" success="True" time="0.724" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RegisteringServicesTests" executed="True" result="Success" success="True" time="4.635" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_Register_Biz_Service_When_Published_ByAnother_Component_and_Dont_ReturnValues" executed="True" result="Success" success="True" time="0.785" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Can_Register_Biz_Service_When_Published_ByAnother_Component_and_Dont_ReturnValues(SqliteInMemory)" executed="True" result="Success" success="True" time="0.785" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Service" executed="True" result="Success" success="True" time="0.835" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Can_Register_Service(SqliteInMemory)" executed="True" result="Success" success="True" time="0.834" asserts="31" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_System_Service_When_Published_ByAnother_Component" executed="True" result="Success" success="True" time="0.746" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Can_Register_System_Service_When_Published_ByAnother_Component(SqliteInMemory)" executed="True" result="Success" success="True" time="0.745" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Update_Service_Registration_When_Published_ByLocal_Component" executed="True" result="Success" success="True" time="1.443" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Can_Update_Service_Registration_When_Published_ByLocal_Component(SqliteInMemory)" executed="True" result="Success" success="True" time="1.443" asserts="62" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Cant_Register_Biz_Service_When_Published_ByAnother_Component_and_ReturnValues" executed="True" result="Success" success="True" time="0.805" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Cant_Register_Biz_Service_When_Published_ByAnother_Component_and_ReturnValues(SqliteInMemory)" executed="True" result="Success" success="True" time="0.804" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="SystemDialogInfrastructureTests" executed="True" result="Success" success="True" time="0.742" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="RegistersSystemSuscriptionsStartUp" executed="True" result="Success" success="True" time="0.731" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.SystemDialogInfrastructureTests.RegistersSystemSuscriptionsStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="0.730" asserts="9" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="UsingMessagesClientTests" executed="True" result="Success" success="True" time="10.680" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="BaseTypeHandler_And_ConcreteHandlerType_Receives_Inherited_Message" executed="True" result="Success" success="True" time="4.059" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.BaseTypeHandler_And_ConcreteHandlerType_Receives_Inherited_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="4.058" asserts="6" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="BaseTypeHandler_Receives_Inherited_Message" executed="True" result="Success" success="True" time="1.741" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.BaseTypeHandler_Receives_Inherited_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="1.741" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Receive_PublishedMessage" executed="True" result="Success" success="True" time="1.414" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.Can_Receive_PublishedMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="1.413" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Receive_Several_Messages" executed="True" result="Success" success="True" time="1.787" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.Can_Receive_Several_Messages(SqliteInMemory)" executed="True" result="Success" success="True" time="1.786" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="InterfaceTypeHandler_And_ConcreteHandlerType_Receives_Inherited_Message" executed="True" result="Success" success="True" time="1.667" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.InterfaceTypeHandler_And_ConcreteHandlerType_Receives_Inherited_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="1.667" asserts="6" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="UsingServicesClientTests" executed="True" result="Success" success="True" time="7.056" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_GetServiceProxy" executed="True" result="Success" success="True" time="0.791" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_GetServiceProxy(SqliteInMemory)" executed="True" result="Success" success="True" time="0.790" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_CustomValueType_ParameterMethod" executed="True" result="Success" success="True" time="0.844" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_CustomValueType_ParameterMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.844" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_EnumType_ParameterMethod" executed="True" result="Success" success="True" time="0.818" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_EnumType_ParameterMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.818" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_OneParameterMethod" executed="True" result="Success" success="True" time="0.770" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_OneParameterMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.770" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_ReturnMethodOneParam" executed="True" result="Success" success="True" time="0.696" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_ReturnMethodOneParam(SqliteInMemory)" executed="True" result="Success" success="True" time="0.695" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_Several_ValueTypes_ParametersMethod" executed="True" result="Success" success="True" time="0.780" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_Several_ValueTypes_ParametersMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.779" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_SeveralParametersMethod" executed="True" result="Success" success="True" time="0.782" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_SeveralParametersMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.782" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxyEmptyMethod" executed="True" result="Success" success="True" time="0.791" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxyEmptyMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.790" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxyReturnMethod" executed="True" result="Success" success="True" time="0.761" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxyReturnMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.760" asserts="3" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeX_Blessed\workspace\FrameworkVersion\4.0\Platform\x64\blessed\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x64\Release\ermeX.Tests.NonMerged.dll" executed="True" result="Success" success="True" time="0.261" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="0.246" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="0.243" asserts="0">
                <results>
                  <test-suite type="Namespace" name="NonMerged" executed="True" result="Success" success="True" time="0.240" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="ResolveUnmergedTests" executed="True" result="Success" success="True" time="0.238" asserts="0">
                        <results>
                          <test-suite type="ParameterizedTest" name="CanResolveAssembly" executed="True" result="Success" success="True" time="0.151" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.NonMerged.ResolveUnmergedTests.CanResolveAssembly(&quot;Ninject&quot;)" executed="True" result="Success" success="True" time="0.052" asserts="1" />
                              <test-case name="ermeX.Tests.NonMerged.ResolveUnmergedTests.CanResolveAssembly(&quot;System.Data.SQLite&quot;)" executed="True" result="Success" success="True" time="0.086" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeX_Blessed\workspace\FrameworkVersion\4.0\Platform\x64\blessed\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x64\Release\ermeX.Tests.SupportTypes.dll" executed="False" result="NotRunnable">
        <reason>
          <message><![CDATA[Has no TestFixtures]]></message>
        </reason>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeX_Blessed\workspace\FrameworkVersion\4.0\Platform\x64\blessed\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x64\Release\ermeX.Tests.Threading.dll" executed="True" result="Success" success="True" time="98.043" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="98.020" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="98.012" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Threading" executed="True" result="Success" success="True" time="98.007" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Queues" executed="True" result="Success" success="True" time="23.624" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="TestProducerParallelConsumerPriorityQueue" executed="True" result="Success" success="True" time="8.027" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerParallelConsumerPriorityQueue.SortsByPriority" executed="True" result="Success" success="True" time="5.934" asserts="5" />
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerParallelConsumerPriorityQueue.TestProducerConsumerQueueBase.CanEnqueueDequeue" executed="True" result="Success" success="True" time="2.045" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="TestProducerParallelConsumerQueue" executed="True" result="Success" success="True" time="8.052" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerParallelConsumerQueue.Create_Threads_on_Demand" executed="True" result="Success" success="True" time="6.051" asserts="4" />
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerParallelConsumerQueue.TestProducerConsumerQueueBase.CanEnqueueDequeue" executed="True" result="Success" success="True" time="2.000" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="TestProducerSequentialConsumerQueue" executed="True" result="Success" success="True" time="7.533" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerSequentialConsumerQueue.Dont_Create_Threads_on_Demand" executed="True" result="Success" success="True" time="5.273" asserts="4" />
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerSequentialConsumerQueue.TestProducerConsumerQueueBase.CanEnqueueDequeue" executed="True" result="Success" success="True" time="2.000" asserts="2" />
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerSequentialConsumerQueue.When_Handling_Fails_Item_Is_Pushed_Back_To_Queue" executed="True" result="Success" success="True" time="0.257" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Scheduler" executed="True" result="Success" success="True" time="74.367" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="JobSchedulerTests" executed="True" result="Success" success="True" time="74.365" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_Dispose_When_ScheduledJobs_Pending" executed="True" result="Success" success="True" time="5.017" asserts="1" />
                              <test-suite type="ParameterizedTest" name="Can_ScheduleJob" executed="True" result="Success" success="True" time="35.069" asserts="0">
                                <results>
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(1)" executed="True" result="Success" success="True" time="1.013" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(2)" executed="True" result="Success" success="True" time="2.011" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(3)" executed="True" result="Success" success="True" time="3.010" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(4)" executed="True" result="Success" success="True" time="4.008" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(5)" executed="True" result="Success" success="True" time="5.008" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(20)" executed="True" result="Success" success="True" time="20.006" asserts="3" />
                                </results>
                              </test-suite>
                              <test-suite type="ParameterizedTest" name="Can_UnScheduleJob" executed="True" result="Success" success="True" time="24.014" asserts="0">
                                <results>
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_UnScheduleJob(1)" executed="True" result="Success" success="True" time="6.008" asserts="2" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_UnScheduleJob(3)" executed="True" result="Success" success="True" time="6.000" asserts="2" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_UnScheduleJob(5)" executed="True" result="Success" success="True" time="6.000" asserts="2" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_UnScheduleJob(15)" executed="True" result="Success" success="True" time="6.000" asserts="2" />
                                </results>
                              </test-suite>
                              <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.CanInvoke_Past_Actions" executed="True" result="Success" success="True" time="0.002" asserts="2" />
                              <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.When_Dispose_Invoked_Non_Running_Actions_Are_Never_Started" executed="True" result="Success" success="True" time="5.252" asserts="1" />
                              <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.When_Dispose_Invoked_Waits_Running_ActionsToFinish" executed="True" result="Success" success="True" time="5.003" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>