<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x86\v1.0\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x86\Release\ermeX.Tests.Bus.Listening.dll" total="381" errors="0" failures="0" not-run="36" inconclusive="7" ignored="36" skipped="0" invalid="0" date="2013-01-20" time="21:06:02">
  <environment nunit-version="2.5.6.10205" clr-version="2.0.50727.5466" os-version="Microsoft Windows NT 6.1.7601 Service Pack 1" platform="Win32NT" cwd="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x86\v1.0\Build\ScriptsBuild" machine-name="MIGUEL-PC" user="SYSTEM" user-domain="WORKGROUP" />
  <culture-info current-culture="es-ES" current-uiculture="es-ES" />
  <test-suite type="Test Project" name="" executed="True" result="Success" success="True" time="1204.152" asserts="0">
    <results>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x86\v1.0\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x86\Release\ermeX.Tests.Bus.Listening.dll" executed="True" result="Success" success="True" time="5.671" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="5.659" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="5.650" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Bus" executed="True" result="Success" success="True" time="5.641" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Listening" executed="True" result="Success" success="True" time="5.633" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Handlers" executed="True" result="Success" success="True" time="5.625" asserts="0">
                            <results>
                              <test-suite type="Namespace" name="InternalMessageHandling" executed="True" result="Success" success="True" time="5.616" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="ReceptionMessageHandlerTester" executed="True" result="Success" success="True" time="4.507" asserts="0">
                                    <results>
                                      <test-suite type="ParameterizedTest" name="Can_Handle_Message" executed="True" result="Success" success="True" time="4.273" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.ReceptionMessageHandlerTester.Can_Handle_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="4.267" asserts="4" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="Enqueues_NonDistributedMessages_OnStartUp" executed="True" result="Success" success="True" time="0.014" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.ReceptionMessageHandlerTester.Enqueues_NonDistributedMessages_OnStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="0.013" asserts="2" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite type="Namespace" name="WorkflowHandlers" executed="True" result="Success" success="True" time="1.104" asserts="0">
                                    <results>
                                      <test-suite type="TestFixture" name="QueueDispatcherManagerTester" executed="True" result="Success" success="True" time="0.869" asserts="0">
                                        <results>
                                          <test-suite type="ParameterizedTest" name="Can_DeliverMany_Messages_OrderedByGeneration" executed="True" result="Success" success="True" time="0.698" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Can_DeliverMany_Messages_OrderedByGeneration(SqliteInMemory)" executed="True" result="Success" success="True" time="0.697" asserts="52" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Can_DeliverRespecting_Latency" executed="False" result="Ignored">
                                            <reason>
                                              <message><![CDATA[This class will be upgraded ASAP. Its not worth to test more with the current resources]]></message>
                                            </reason>
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Can_DeliverRespecting_Latency(SqliteInMemory)" executed="False" result="Ignored">
                                                <reason>
                                                  <message><![CDATA[This class will be upgraded ASAP. Its not worth to test more with the current resources]]></message>
                                                </reason>
                                              </test-case>
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Can_Dispatch_Messages" executed="True" result="Success" success="True" time="0.027" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Can_Dispatch_Messages(SqliteInMemory)" executed="True" result="Success" success="True" time="0.027" asserts="4" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Removes_Dispatched_Messages" executed="False" result="Ignored">
                                            <reason>
                                              <message><![CDATA[Its covered implicitly in other test cases]]></message>
                                            </reason>
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Removes_Dispatched_Messages(SqliteInMemory)" executed="False" result="Ignored">
                                                <reason>
                                                  <message><![CDATA[Its covered implicitly in other test cases]]></message>
                                                </reason>
                                              </test-case>
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Retries_Failed_Messages" executed="True" result="Success" success="True" time="0.117" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Retries_Failed_Messages(SqliteInMemory)" executed="True" result="Success" success="True" time="0.116" asserts="5" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="When_Disposed_Removes_ScheduledJobs" executed="False" result="Ignored">
                                            <reason>
                                              <message><![CDATA[This class will be upgraded ASAP. Its not worth to test more with the current resources]]></message>
                                            </reason>
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.When_Disposed_Removes_ScheduledJobs(SqliteInMemory)" executed="False" result="Ignored">
                                                <reason>
                                                  <message><![CDATA[This class will be upgraded ASAP. Its not worth to test more with the current resources]]></message>
                                                </reason>
                                              </test-case>
                                            </results>
                                          </test-suite>
                                        </results>
                                      </test-suite>
                                      <test-suite type="TestFixture" name="ReceptionMessageDistributorTester" executed="True" result="Success" success="True" time="0.230" asserts="0">
                                        <results>
                                          <test-suite type="ParameterizedTest" name="Can_Distribute_Messages" executed="True" result="Success" success="True" time="0.125" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.Can_Distribute_Messages(SqliteInMemory)" executed="True" result="Success" success="True" time="0.124" asserts="5" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Enqueues_NonDeliveredMessages_OnStartUp" executed="True" result="Success" success="True" time="0.021" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.Enqueues_NonDeliveredMessages_OnStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="0.019" asserts="5" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Removes_Source_Message_Once_Distributed" executed="False" result="Ignored">
                                            <reason>
                                              <message><![CDATA[Tehre are assertions in the other tests to probe this]]></message>
                                            </reason>
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.Removes_Source_Message_Once_Distributed(SqliteInMemory)" executed="False" result="Ignored">
                                                <reason>
                                                  <message><![CDATA[Tehre are assertions in the other tests to probe this]]></message>
                                                </reason>
                                              </test-case>
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="When_Subscribed_ToBase_Type_Will_DistributeIt_Correctly" executed="True" result="Success" success="True" time="0.039" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.When_Subscribed_ToBase_Type_Will_DistributeIt_Correctly(SqliteInMemory)" executed="True" result="Success" success="True" time="0.038" asserts="5" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="When_Subscribed_ToConcrete_Type_Will_DistributeIt_Correctly" executed="True" result="Success" success="True" time="0.025" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.When_Subscribed_ToConcrete_Type_Will_DistributeIt_Correctly(SqliteInMemory)" executed="True" result="Success" success="True" time="0.024" asserts="5" />
                                            </results>
                                          </test-suite>
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x86\v1.0\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x86\Release\ermeX.Tests.Bus.Publishing.dll" executed="True" result="Success" success="True" time="39.418" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="39.406" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="39.399" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Bus" executed="True" result="Success" success="True" time="39.389" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Publishing" executed="True" result="Success" success="True" time="39.383" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Dispatching" executed="True" result="Success" success="True" time="39.376" asserts="0">
                            <results>
                              <test-suite type="Namespace" name="Messages" executed="True" result="Success" success="True" time="39.373" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="MessageCollectorTester" executed="True" result="Success" success="True" time="4.699" asserts="0">
                                    <results>
                                      <test-suite type="ParameterizedTest" name="CanDispatchMessage" executed="True" result="Success" success="True" time="4.179" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageCollectorTester.CanDispatchMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="4.176" asserts="5" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="ComponentStopsOnDisposal" executed="True" result="Success" success="True" time="0.010" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageCollectorTester.ComponentStopsOnDisposal(SqliteInMemory)" executed="True" result="Success" success="True" time="0.009" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="RemovesExpiredItems" executed="True" result="Success" success="True" time="0.298" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageCollectorTester.RemovesExpiredItems(SqliteInMemory)" executed="True" result="Success" success="True" time="0.298" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="SendsExistingItemsOnStart" executed="True" result="Success" success="True" time="0.015" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageCollectorTester.SendsExistingItemsOnStart(SqliteInMemory)" executed="True" result="Success" success="True" time="0.014" asserts="3" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="MessageDistributorTester" executed="True" result="Success" success="True" time="12.397" asserts="0">
                                    <results>
                                      <test-suite type="ParameterizedTest" name="CanDispatch_NotSentMessage" executed="True" result="Success" success="True" time="0.323" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageDistributorTester.CanDispatch_NotSentMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="0.323" asserts="12" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="DontDispatchSentMessage" executed="True" result="Success" success="True" time="12.057" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageDistributorTester.DontDispatchSentMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="12.056" asserts="4" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="MessageSubscriberDispatcherTester" executed="True" result="Success" success="True" time="22.270" asserts="0">
                                    <results>
                                      <test-suite type="ParameterizedTest" name="AfterSend_Items_MarksThemAsSent" executed="True" result="Success" success="True" time="0.164" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.AfterSend_Items_MarksThemAsSent(SqliteInMemory)" executed="True" result="Success" success="True" time="0.163" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="DontSend_Expired_Items" executed="True" result="Success" success="True" time="5.013" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.DontSend_Expired_Items(SqliteInMemory)" executed="True" result="Success" success="True" time="5.012" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="RestoresPending_MessagesFrom_PreviousSessions_OnStartUp" executed="True" result="Success" success="True" time="0.036" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.RestoresPending_MessagesFrom_PreviousSessions_OnStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="0.035" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="SendsEnqueued_Items" executed="True" result="Success" success="True" time="0.014" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.SendsEnqueued_Items(SqliteInMemory)" executed="True" result="Success" success="True" time="0.014" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="WhenSend_Fails_Increases_Tries_And_ReEnqueuesItem" executed="True" result="Success" success="True" time="17.018" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.WhenSend_Fails_Increases_Tries_And_ReEnqueuesItem(SqliteInMemory)" executed="True" result="Success" success="True" time="17.017" asserts="3" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x86\v1.0\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x86\Release\ermeX.Tests.Common.dll" executed="False" result="NotRunnable">
        <reason>
          <message><![CDATA[Has no TestFixtures]]></message>
        </reason>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x86\v1.0\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x86\Release\ermeX.Tests.DAL.Integration.dll" executed="True" result="Success" success="True" time="467.613" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="467.549" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="467.483" asserts="0">
                <results>
                  <test-suite type="Namespace" name="DAL" executed="True" result="Success" success="True" time="467.421" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Integration" executed="True" result="Success" success="True" time="467.356" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="DataSources" executed="True" result="Success" success="True" time="467.345" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="AppComponentDataSourceTester" executed="True" result="Success" success="True" time="68.306" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="8.004" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="5.678" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="1.510" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="0.809" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="4.246" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.335" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.079" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="0.830" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="3.992" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.529" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="1.114" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.345" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetByComponentId" executed="True" result="Success" success="True" time="5.274" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetByComponentId(SqlServer2008)" executed="True" result="Success" success="True" time="1.973" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetByComponentId(Sqlite)" executed="True" result="Success" success="True" time="1.666" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetByComponentId(SqliteInMemory)" executed="True" result="Success" success="True" time="1.627" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="6.706" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="2.929" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="2.357" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.416" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateExchanger" executed="True" result="Success" success="True" time="5.011" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateExchanger(SqlServer2008)" executed="True" result="Success" success="True" time="0.877" asserts="5" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateExchanger(Sqlite)" executed="True" result="Success" success="True" time="1.948" asserts="5" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateExchanger(SqliteInMemory)" executed="True" result="Success" success="True" time="2.182" asserts="5" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="6.463" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="2.507" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="1.957" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.996" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Doesnt_Update_When_Version_Is_Older_Than_Current" executed="True" result="Success" success="True" time="6.276" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqlServer2008)" executed="True" result="Success" success="True" time="1.869" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(Sqlite)" executed="True" result="Success" success="True" time="2.302" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqliteInMemory)" executed="True" result="Success" success="True" time="2.102" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="5.728" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="2.093" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="1.846" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.786" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="6.153" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="1.895" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.732" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.522" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="5.939" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.765" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="1.843" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="2.329" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ChunkedServiceRequestMessageDataSourceTester" executed="True" result="Success" success="True" time="50.590" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="7.640" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="3.288" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.991" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.359" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="5.378" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.521" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.279" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.576" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="5.390" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.913" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="1.954" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.521" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="5.002" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.752" asserts="7" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="1.763" asserts="7" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.484" asserts="7" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="5.868" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.917" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.195" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.753" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="5.279" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.535" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="1.965" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.776" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="5.537" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="2.124" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="1.825" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.585" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="5.961" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.782" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.347" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.830" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ConnectivityDetailsDataSourceTester" executed="True" result="Success" success="True" time="58.104" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="8.602" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="4.480" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.680" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.438" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="5.393" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.810" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="1.907" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.674" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="5.858" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.557" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.711" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.577" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="4.682" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.280" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="1.944" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.456" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="6.224" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="2.036" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.699" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.487" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Doesnt_Update_When_Version_Is_Older_Than_Current" executed="True" result="Success" success="True" time="5.622" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqlServer2008)" executed="True" result="Success" success="True" time="1.726" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(Sqlite)" executed="True" result="Success" success="True" time="1.952" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqliteInMemory)" executed="True" result="Success" success="True" time="1.940" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="5.400" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.687" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.307" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.403" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="5.732" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="1.808" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.261" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.660" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="5.775" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.665" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.483" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.624" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="IncomingMessageDataSourceTester" executed="True" result="Success" success="True" time="51.481" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="7.170" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="3.202" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.495" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.470" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="6.088" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.951" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.168" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.966" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="6.314" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.886" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.578" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.847" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="4.821" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.219" asserts="8" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="1.858" asserts="8" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.739" asserts="8" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="5.936" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.687" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.605" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.639" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="5.587" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.726" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="1.943" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.915" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="5.113" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="1.324" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.092" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.694" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="6.045" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.629" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.865" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.549" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="IncomingMessageSuscriptionsSourceTester" executed="True" result="Success" success="True" time="54.747" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="7.976" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="3.948" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.607" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.419" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="6.418" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.677" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.353" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="2.385" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="5.565" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.701" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.211" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.651" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="5.685" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.497" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="2.400" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.783" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="5.504" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.532" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.278" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.691" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="5.457" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.725" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.303" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.427" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="6.392" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="1.770" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.442" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="2.176" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="6.750" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="2.232" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.540" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.976" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="OutgoingMessageDataSourceTester" executed="True" result="Success" success="True" time="56.810" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="7.150" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="3.173" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.026" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.948" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="5.567" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="2.074" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.229" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.258" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="5.987" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.604" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.661" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.720" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="5.620" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.754" asserts="7" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="2.090" asserts="7" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.773" asserts="7" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="6.908" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="2.055" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="3.065" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.785" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="6.260" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.803" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.285" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="2.170" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="6.717" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="2.278" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="3.010" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.427" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="7.545" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="2.149" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="3.422" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.971" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="OutgoingMessageSuscriptionsSourceTester" executed="True" result="Success" success="True" time="61.889" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="8.696" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="4.327" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.676" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.688" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="6.549" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="2.067" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.636" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.844" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="6.050" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.811" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.472" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.764" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="5.319" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.479" asserts="5" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="2.247" asserts="5" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.590" asserts="5" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="5.809" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.565" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.550" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.691" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Doesnt_Update_When_Version_Is_Older_Than_Current" executed="True" result="Success" success="True" time="6.333" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqlServer2008)" executed="True" result="Success" success="True" time="1.937" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(Sqlite)" executed="True" result="Success" success="True" time="2.807" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqliteInMemory)" executed="True" result="Success" success="True" time="1.585" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="6.070" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="2.071" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.137" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.858" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="6.378" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="1.901" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.170" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="2.304" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="6.262" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="2.014" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.299" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.945" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ServiceDetailsSourceTester" executed="True" result="Success" success="True" time="65.357" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="8.014" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="3.069" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="3.102" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.839" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="6.121" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="2.266" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="1.880" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.971" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="5.515" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.892" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="1.899" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.721" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="5.350" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="2.108" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="1.450" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.788" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetByOperationId" executed="True" result="Success" success="True" time="5.804" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetByOperationId(SqlServer2008)" executed="True" result="Success" success="True" time="2.035" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetByOperationId(Sqlite)" executed="True" result="Success" success="True" time="1.895" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetByOperationId(SqliteInMemory)" executed="True" result="Success" success="True" time="1.870" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CantInsertRepeatedOperations" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[Decide if this test is still useful as it needs to be modified]]></message>
                                    </reason>
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CantInsertRepeatedOperations(SqlServer2008)" executed="False" result="Ignored">
                                        <reason>
                                          <message><![CDATA[Decide if this test is still useful as it needs to be modified]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CantInsertRepeatedOperations(Sqlite)" executed="False" result="Ignored">
                                        <reason>
                                          <message><![CDATA[Decide if this test is still useful as it needs to be modified]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CantInsertRepeatedOperations(SqliteInMemory)" executed="False" result="Ignored">
                                        <reason>
                                          <message><![CDATA[Decide if this test is still useful as it needs to be modified]]></message>
                                        </reason>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="6.243" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.777" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.666" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.798" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Doesnt_Update_When_Version_Is_Older_Than_Current" executed="True" result="Success" success="True" time="5.479" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqlServer2008)" executed="True" result="Success" success="True" time="1.663" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(Sqlite)" executed="True" result="Success" success="True" time="1.846" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqliteInMemory)" executed="True" result="Success" success="True" time="1.968" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="6.130" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="2.349" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.139" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.639" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="5.805" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="1.809" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.290" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.704" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="5.421" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.954" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.049" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.416" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x86\v1.0\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x86\Release\ermeX.Tests.dll" executed="True" result="Success" success="True" time="585.452" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="585.358" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="585.339" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Acceptance" executed="True" result="Success" success="True" time="471.024" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="HandshakeTester" executed="True" result="Success" success="True" time="48.873" asserts="0">
                        <results>
                          <test-suite type="ParameterizedTest" name="SeveralComponents_Using_SameFriend_CanStart_AtSameTime" executed="True" result="Success" success="True" time="47.920" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.HandshakeTester.SeveralComponents_Using_SameFriend_CanStart_AtSameTime(SqliteInMemory)" executed="True" result="Success" success="True" time="47.917" asserts="852" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="MessagingAcceptanceTester" executed="True" result="Success" success="True" time="306.636" asserts="0">
                        <results>
                          <test-suite type="ParameterizedTest" name="CanSubscribeBeforeStartUp" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.CanSubscribeBeforeStartUp(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Components_CanPublish_Any_Message" executed="True" result="Success" success="True" time="5.032" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.Components_CanPublish_Any_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="5.029" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="FiveComponentsCanReceiveMessagesAfterBeingOffLine" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.FiveComponentsCanReceiveMessagesAfterBeingOffLine(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="MessagesAreDeliveredFIFO" executed="True" result="Success" success="True" time="17.641" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.MessagesAreDeliveredFIFO(SqliteInMemory)" executed="True" result="Success" success="True" time="17.641" asserts="11" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="MessagesAreDeliveredFIFO_SeveralComponents" executed="True" result="Success" success="True" time="26.543" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.MessagesAreDeliveredFIFO_SeveralComponents(SqliteInMemory)" executed="True" result="Success" success="True" time="26.542" asserts="27" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="OneComponentCanSubscribeToItsOwnMessages" executed="True" result="Success" success="True" time="7.681" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.OneComponentCanSubscribeToItsOwnMessages(SqliteInMemory)" executed="True" result="Success" success="True" time="7.681" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SendMessageAndReception" executed="True" result="Success" success="True" time="17.520" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SendMessageAndReception(SqliteInMemory)" executed="True" result="Success" success="True" time="17.519" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Several_Components_SuscriptorsOnlyReceives_Its_Own_Suscriptions" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.Several_Components_SuscriptorsOnlyReceives_Its_Own_Suscriptions(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SeveralComponentsCanExchangeMessages" executed="True" result="Success" success="True" time="26.205" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SeveralComponentsCanExchangeMessages(SqliteInMemory)" executed="True" result="Success" success="True" time="26.205" asserts="9" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SeveralReceiversSendMessageAndReception" executed="True" result="Success" success="True" time="47.186" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SeveralReceiversSendMessageAndReception(SqliteInMemory)" executed="True" result="Success" success="True" time="47.185" asserts="17" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SuscriptorCanReceiveMessagesAfterBeing_Disconnected" executed="True" result="Success" success="True" time="18.598" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SuscriptorCanReceiveMessagesAfterBeing_Disconnected(SqliteInMemory)" executed="True" result="Success" success="True" time="18.598" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SuscriptorCanReceiveMessagesAfterBeing_Disconnected_And_Add_Subscriptions" executed="True" result="Success" success="True" time="53.606" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SuscriptorCanReceiveMessagesAfterBeing_Disconnected_And_Add_Subscriptions(SqliteInMemory)" executed="True" result="Success" success="True" time="53.605" asserts="9" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SuscriptorCanReceiveMessagesAfterBeingOffline" executed="True" result="Success" success="True" time="17.453" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SuscriptorCanReceiveMessagesAfterBeingOffline(SqliteInMemory)" executed="True" result="Success" success="True" time="17.452" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoComponentsCanExchangeMessages" executed="True" result="Success" success="True" time="17.649" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.TwoComponentsCanExchangeMessages(SqliteInMemory)" executed="True" result="Success" success="True" time="17.648" asserts="9" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoComponentsCanReceiveMessagesAfterBeingOffLine" executed="True" result="Success" success="True" time="33.828" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.TwoComponentsCanReceiveMessagesAfterBeingOffLine(SqliteInMemory)" executed="True" result="Success" success="True" time="33.828" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoSuscriptions_Of_The_SameHandler_Are_HandledBy_TheSame_ObjectHandler" executed="True" result="Success" success="True" time="17.641" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.TwoSuscriptions_Of_The_SameHandler_Are_HandledBy_TheSame_ObjectHandler(SqliteInMemory)" executed="True" result="Success" success="True" time="17.641" asserts="5" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ServicesAcceptanceTester" executed="True" result="Success" success="True" time="115.505" asserts="0">
                        <results>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_ArrayParamsMethod_Returns" executed="True" result="Success" success="True" time="4.555" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_ArrayParamsMethod_Returns(SqliteInMemory)" executed="True" result="Success" success="True" time="4.554" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_EmptyMethod" executed="True" result="Success" success="True" time="0.714" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_EmptyMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.714" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_EmptyMethod_ReturnValue" executed="True" result="Success" success="True" time="0.601" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_EmptyMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="0.600" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_OneParamMethod" executed="True" result="Success" success="True" time="0.663" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_OneParamMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.663" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_OneParamMethod_ReturnValue" executed="True" result="Success" success="True" time="0.558" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_OneParamMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="0.557" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_ReturnsArray" executed="True" result="Success" success="True" time="0.620" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_ReturnsArray(SqliteInMemory)" executed="True" result="Success" success="True" time="0.619" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_SeveralParamsMethod" executed="True" result="Success" success="True" time="0.527" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_SeveralParamsMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.526" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_SeveralParamsMethod_ReturnValue" executed="True" result="Success" success="True" time="0.596" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_SeveralParamsMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="0.596" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_ArrayParamsMethod_Returns" executed="True" result="Success" success="True" time="8.211" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_ArrayParamsMethod_Returns(SqliteInMemory)" executed="True" result="Success" success="True" time="8.211" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_EmptyMethod" executed="True" result="Success" success="True" time="8.161" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_EmptyMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="8.161" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_EmptyMethod_ReturnValue" executed="True" result="Success" success="True" time="8.284" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_EmptyMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="8.284" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_OneParamMethod" executed="True" result="Success" success="True" time="8.368" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_OneParamMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="8.367" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_OneParamMethod_ReturnValue" executed="True" result="Success" success="True" time="8.028" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_OneParamMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="8.028" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_ReturnsArray" executed="True" result="Success" success="True" time="7.298" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_ReturnsArray(SqliteInMemory)" executed="True" result="Success" success="True" time="7.297" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_SeveralParamsMethod" executed="True" result="Success" success="True" time="7.349" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_SeveralParamsMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="7.349" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_SeveralParamsMethod_ReturnValue" executed="True" result="Success" success="True" time="7.270" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_SeveralParamsMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="7.270" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Components_CanPublish_Several_Services" executed="True" result="Success" success="True" time="18.098" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.Components_CanPublish_Several_Services(SqliteInMemory)" executed="True" result="Success" success="True" time="18.098" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SeveralComponents_Can_Serve_Same_Service_NoReturnValues" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[FIX]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.SeveralComponents_Can_Serve_Same_Service_NoReturnValues(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[FIX]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoComponents_CannotRegister_TheSameService_IfReturnValues" executed="True" result="Success" success="True" time="8.002" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.TwoComponents_CannotRegister_TheSameService_IfReturnValues(SqliteInMemory)" executed="True" result="Success" success="True" time="8.002" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoComponents_CanRegister_TheSameService_If_Dont_ReturnValues" executed="True" result="Success" success="True" time="7.780" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.TwoComponents_CanRegister_TheSameService_If_Dont_ReturnValues(SqliteInMemory)" executed="True" result="Success" success="True" time="7.780" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="When_CannotInvoke_ThrowsException" executed="True" result="Success" success="True" time="8.966" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.When_CannotInvoke_ThrowsException(SqliteInMemory)" executed="True" result="Success" success="True" time="8.966" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="When_Service_NotDefined_Returns_Null" executed="True" result="Success" success="True" time="0.784" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.When_Service_NotDefined_Returns_Null(SqliteInMemory)" executed="True" result="Success" success="True" time="0.784" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Common" executed="True" result="Success" success="True" time="25.254" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Serialization" executed="True" result="Success" success="True" time="25.249" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="JsonSerializerTests" executed="True" result="Success" success="True" time="4.425" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Common.Serialization.JsonSerializerTests.CanSerializeAndDeserialize_ClassWithInnerClass_Json" executed="True" result="Success" success="True" time="0.029" asserts="2" />
                              <test-case name="ermeX.Tests.Common.Serialization.JsonSerializerTests.CanSerializeAndDeserialize_Json" executed="True" result="Success" success="True" time="4.395" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="ObjectSerializerTests" executed="True" result="Success" success="True" time="16.947" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Common.Serialization.ObjectSerializerTests.CanSerializeAndDeserialize_ByteArray" executed="True" result="Success" success="True" time="0.125" asserts="1" />
                              <test-case name="ermeX.Tests.Common.Serialization.ObjectSerializerTests.CanSerializeAndDeserialize_ToFile" executed="True" result="Success" success="True" time="0.109" asserts="1" />
                              <test-case name="ermeX.Tests.Common.Serialization.ObjectSerializerTests.FromMarcGravell_Serialize_Deserialize_1M" executed="True" result="Success" success="True" time="16.710" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="TestApplicationSerializableMessages" executed="True" result="Success" success="True" time="3.869" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_BizMessage_and_Modify_TheProtobufContract" executed="True" result="Success" success="True" time="0.025" asserts="0" />
                              <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ChunckedServiceRequest_ToFile" executed="True" result="Success" success="True" time="0.023" asserts="1" />
                              <test-suite type="ParameterizedTest" name="CanSerializeAndDeserialize_LayerMessage_ToFile" executed="True" result="Success" success="True" time="0.707" asserts="0">
                                <results>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_LayerMessage_ToFile(Biz)" executed="True" result="Success" success="True" time="0.326" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_LayerMessage_ToFile(Bus)" executed="True" result="Success" success="True" time="0.185" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_LayerMessage_ToFile(Transport)" executed="True" result="Success" success="True" time="0.193" asserts="2" />
                                </results>
                              </test-suite>
                              <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_ToFile" executed="True" result="Success" success="True" time="0.274" asserts="2" />
                              <test-suite type="ParameterizedTest" name="CanSerializeAndDeserialize_ServiceRequest_WithCollection" executed="True" result="Success" success="True" time="2.565" asserts="0">
                                <results>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(1)" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(2)" executed="True" result="Success" success="True" time="0.007" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(40)" executed="True" result="Success" success="True" time="0.282" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(100)" executed="True" result="Success" success="True" time="0.717" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(200)" executed="True" result="Success" success="True" time="1.516" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(500)" executed="True" result="Inconclusive" success="False" time="0.007" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(1000)" executed="True" result="Inconclusive" success="False" time="0.001" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(5000)" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(10000)" executed="True" result="Inconclusive" success="False" time="0.001" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(50000)" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(500000)" executed="True" result="Inconclusive" success="False" time="0.007" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceResult_ToFile" executed="True" result="Success" success="True" time="0.260" asserts="3" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Dialogs" executed="True" result="Success" success="True" time="17.751" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="HandshakingTester" executed="True" result="Success" success="True" time="17.724" asserts="0">
                        <results>
                          <test-case name="ermeX.Tests.Dialogs.HandshakingTester.Caller_Waits_MyComponents_Message_response_With_TimeOut" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.HandshakingTester.Component_Wont_Handle_Events_Raised_Before_StartUp_Is_Finished" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-suite type="ParameterizedTest" name="Sends_JoinRequestMessage_OnStartUp" executed="True" result="Success" success="True" time="4.043" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.Sends_JoinRequestMessage_OnStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="4.043" asserts="5" />
                            </results>
                          </test-suite>
                          <test-case name="ermeX.Tests.Dialogs.HandshakingTester.When_Joined_Updates_Local_Message_Definitions" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.HandshakingTester.When_Joined_Updates_Local_NonSystem_Service_Definitions" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-suite type="ParameterizedTest" name="WhenReceived_JoinRequestMessage_Sends_MyComponentsMessage_To_The_Caller" executed="True" result="Success" success="True" time="1.923" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.WhenReceived_JoinRequestMessage_Sends_MyComponentsMessage_To_The_Caller(SqliteInMemory)" executed="True" result="Success" success="True" time="1.923" asserts="10" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="WhenRequest_JoinRequestMessage_Does_Not_SendJoinRequestMesage_Twice_To_SameComponent" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.WhenRequest_JoinRequestMessage_Does_Not_SendJoinRequestMesage_Twice_To_SameComponent(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="WhenRequest_JoinRequestMessage_SendsJoinRequestMesage_To_ReceivedComponents" executed="True" result="Success" success="True" time="7.652" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.WhenRequest_JoinRequestMessage_SendsJoinRequestMesage_To_ReceivedComponents(SqliteInMemory)" executed="True" result="Success" success="True" time="7.652" asserts="18" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="WhenRequest_JoinRequestMessage_UpdatesRequesterComponents" executed="True" result="Success" success="True" time="4.064" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.WhenRequest_JoinRequestMessage_UpdatesRequesterComponents(SqliteInMemory)" executed="True" result="Success" success="True" time="4.063" asserts="6" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="MessageSuscriptionsDialogTester" executed="True" result="Inconclusive" success="False" time="0.008" asserts="0">
                        <results>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.Doesnt_Suscribe_To_Its_Own_System_Messages" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.Sends_UpdateSuscription_When_A_LocalSuscriptionHasChanged" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.Sends_UpdateSuscription_When_A_LocalSuscriptionIsCreated" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.When_Received_MySubscriptions_UpdatesRemovesOrAddLocalDefinitions_And_Updates_Subscribed_MessagesInOutgoingQueues" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.When_Received_UpdateSuscription_UpdatesLocalDefinition" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="MyComponentsDialogTester" executed="False" result="Ignored">
                        <reason>
                          <message><![CDATA[It might not be necessary]]></message>
                        </reason>
                        <results>
                          <test-case name="ermeX.Tests.Dialogs.MyComponentsDialogTester.When_Received_MyComponents_Updates_LocalDefinitions" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[It might not be necessary]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MyComponentsDialogTester.When_Requested_MyComponents_SendsResponse_With_All_Components" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[It might not be necessary]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="PublishedServiceDialogTester" executed="True" result="Inconclusive" success="False" time="0.006" asserts="0">
                        <results>
                          <test-case name="ermeX.Tests.Dialogs.PublishedServiceDialogTester.Sends_UpdateService_When_A_LocalServicePublished_HasChanged" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.PublishedServiceDialogTester.Sends_UpdateService_When_A_LocalServicePublished_IsCreated" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.PublishedServiceDialogTester.When_Received_MyServices_UpdatesRemovesOrAddLocalDefinitions_And_UpdatesMessagesInOutgoingQueues" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.PublishedServiceDialogTester.When_Received_UpdateService_UpdatesLocalDefinition" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Services" executed="True" result="Success" success="True" time="35.081" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Builtin" executed="True" result="Success" success="True" time="34.964" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="SuperSockets" executed="True" result="Success" success="True" time="34.943" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="SuperSocketClientTester" executed="True" result="Success" success="True" time="7.664" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="Can_Send_Chunked_Message" description="Tests to send a big file" executed="True" result="Success" success="True" time="1.923" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Chunked_Message(5)" executed="True" result="Success" success="True" time="1.922" asserts="7" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Can_Send_Huge_Not_Chunked_Message" description="Tests to send a big file" executed="True" result="Success" success="True" time="2.755" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Huge_Not_Chunked_Message(1)" executed="True" result="Success" success="True" time="0.444" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Huge_Not_Chunked_Message(5)" executed="True" result="Success" success="True" time="0.822" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Huge_Not_Chunked_Message(10)" executed="True" result="Success" success="True" time="1.484" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Huge_Not_Chunked_Message(15)" executed="True" result="Inconclusive" success="False" time="0.001" asserts="0">
                                        <reason>
                                          <message><![CDATA[TODO]]></message>
                                        </reason>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanSendMessageWithLongResponse" executed="True" result="Success" success="True" time="0.984" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.CanSendMessageWithLongResponse(10)" executed="True" result="Success" success="True" time="0.310" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.CanSendMessageWithLongResponse(50)" executed="True" result="Success" success="True" time="0.359" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.CanSendMessageWithLongResponse(100)" executed="True" result="Success" success="True" time="0.311" asserts="7" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="ClientChoosesMostSuitableIpForSendingMessage" executed="True" result="Success" success="True" time="0.717" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ClientChoosesMostSuitableIpForSendingMessage(True)" executed="True" result="Success" success="True" time="0.344" asserts="6" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ClientChoosesMostSuitableIpForSendingMessage(False)" executed="True" result="Success" success="True" time="0.371" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.CanSendMessage" executed="True" result="Success" success="True" time="0.382" asserts="7" />
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.CanSendMessageToLocalMachine" executed="True" result="Success" success="True" time="0.395" asserts="7" />
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.CantSendToWrongIp" executed="True" result="Success" success="True" time="0.490" asserts="1" />
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.Client_Reports_When_Server_Failed_Handling" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.Client_Reports_When_Server_Handle_Success" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.Client_Reports_WhenServerCannotBeReached" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.Client_Reports_WhenTimeout" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="SuperSocketServerTester" executed="True" result="Success" success="True" time="27.271" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanReceiveChunkedMessage" executed="True" result="Success" success="True" time="0.405" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.CanReceiveChunkedMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="0.404" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanReceiveMessage" executed="True" result="Success" success="True" time="0.341" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.CanReceiveMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="0.341" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanReceiveMessageCollection" executed="True" result="Success" success="True" time="0.430" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.CanReceiveMessageCollection(SqliteInMemory)" executed="True" result="Success" success="True" time="0.430" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanReceiveSeveralMessages" executed="True" result="Success" success="True" time="2.836" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.CanReceiveSeveralMessages(SqliteInMemory)" executed="True" result="Success" success="True" time="2.836" asserts="1185" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenService_DoesntExistsInDb_ReturnsError" executed="True" result="Success" success="True" time="21.694" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.WhenService_DoesntExistsInDb_ReturnsError(SqliteInMemory,True)" executed="True" result="Success" success="True" time="10.849" asserts="2" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.WhenService_DoesntExistsInDb_ReturnsError(SqliteInMemory,False)" executed="True" result="Success" success="True" time="10.844" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenService_Is_RegisteredCallsHandler_Obj" executed="True" result="Success" success="True" time="1.542" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.WhenService_Is_RegisteredCallsHandler_Obj(SqliteInMemory,True)" executed="True" result="Success" success="True" time="0.762" asserts="5" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.WhenService_Is_RegisteredCallsHandler_Obj(SqliteInMemory,False)" executed="True" result="Success" success="True" time="0.778" asserts="5" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Sending" executed="True" result="Success" success="True" time="0.095" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Client" executed="True" result="Success" success="True" time="0.092" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="ServiceProxyTester" executed="True" result="Success" success="True" time="0.090" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanInvokeSend" executed="True" result="Success" success="True" time="0.020" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.CanInvokeSend(SqliteInMemory)" executed="True" result="Success" success="True" time="0.019" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenAllEndPointsFailed__ServiceResultError" executed="True" result="Success" success="True" time="0.006" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenAllEndPointsFailed__ServiceResultError(SqliteInMemory)" executed="True" result="Success" success="True" time="0.006" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenAllEndPointsFailed_CanBeReInvoked" executed="True" result="Success" success="True" time="0.023" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenAllEndPointsFailed_CanBeReInvoked(SqliteInMemory)" executed="True" result="Success" success="True" time="0.022" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenEndpointFailedTry_WithAllTheRestOfEndpoints" executed="True" result="Success" success="True" time="0.007" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenEndpointFailedTry_WithAllTheRestOfEndpoints(SqliteInMemory)" executed="True" result="Success" success="True" time="0.007" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenEndpointRaisesExceptionTry_WithAllTheRestOfEndpoints" executed="True" result="Success" success="True" time="0.006" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenEndpointRaisesExceptionTry_WithAllTheRestOfEndpoints(SqliteInMemory)" executed="True" result="Success" success="True" time="0.005" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenThereAreNotEndpointsItReturns_ServiceResultError" executed="True" result="Success" success="True" time="0.006" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenThereAreNotEndpointsItReturns_ServiceResultError(SqliteInMemory)" executed="True" result="Success" success="True" time="0.006" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="VersionUpgrade" executed="True" result="Success" success="True" time="6.037" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="VersionUpgradeHelperTests" executed="True" result="Success" success="True" time="6.036" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_RunUpgrades" executed="True" result="Success" success="True" time="3.758" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.Can_RunUpgrades(SqlServer2008)" executed="True" result="Success" success="True" time="0.913" asserts="1" />
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.Can_RunUpgrades(Sqlite)" executed="True" result="Success" success="True" time="2.131" asserts="1" />
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.Can_RunUpgrades(SqliteInMemory)" executed="True" result="Success" success="True" time="0.711" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="RunUpgrades_On_StartUp" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.RunUpgrades_On_StartUp(SqlServer2008)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.RunUpgrades_On_StartUp(Sqlite)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.RunUpgrades_On_StartUp(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="WorldGateTests" executed="True" result="Success" success="True" time="30.073" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="DiscoveringMessagesTests" executed="True" result="Success" success="True" time="3.265" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_Late_Subscribe_To_Messages_When_Handler_In_Other_Assemblies" executed="True" result="Success" success="True" time="0.618" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Late_Subscribe_To_Messages_When_Handler_In_Other_Assemblies(SqliteInMemory)" executed="True" result="Success" success="True" time="0.617" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Subscribe_To_Messages_In_Assembly" executed="True" result="Success" success="True" time="0.734" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Subscribe_To_Messages_In_Assembly(SqliteInMemory)" executed="True" result="Success" success="True" time="0.734" asserts="7" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Subscribe_To_Messages_In_Assembly_When_HandlerHasNonHandlerInterfaces" executed="True" result="Success" success="True" time="0.578" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Subscribe_To_Messages_In_Assembly_When_HandlerHasNonHandlerInterfaces(SqliteInMemory)" executed="True" result="Success" success="True" time="0.577" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Subscribe_To_Messages_In_Assembly_When_HandlerHasSeveralInterfaces" executed="True" result="Success" success="True" time="0.681" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Subscribe_To_Messages_In_Assembly_When_HandlerHasSeveralInterfaces(SqliteInMemory)" executed="True" result="Success" success="True" time="0.681" asserts="6" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Subscribe_To_Messages_In_Assembly_WithoutExcludingTypes" executed="True" result="Success" success="True" time="0.632" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Subscribe_To_Messages_In_Assembly_WithoutExcludingTypes(SqliteInMemory)" executed="True" result="Success" success="True" time="0.632" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="DiscoveringServicesTests" executed="True" result="Success" success="True" time="1.330" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_Late_Register_Services_In_Other_Assemblies" executed="True" result="Success" success="True" time="0.697" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringServicesTests.Can_Late_Register_Services_In_Other_Assemblies(SqliteInMemory)" executed="True" result="Success" success="True" time="0.695" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Services_In_Assemblies" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringServicesTests.Can_Register_Services_In_Assemblies(SqlServer2008)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Services_In_Assembly" executed="True" result="Success" success="True" time="0.599" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringServicesTests.Can_Register_Services_In_Assembly(SqliteInMemory)" executed="True" result="Success" success="True" time="0.599" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Doesnt_Register_Services_In_Other_Assemblies" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringServicesTests.Doesnt_Register_Services_In_Other_Assemblies(SqlServer2008)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RegisteringMessagesTests" executed="True" result="Success" success="True" time="3.878" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_Register_Message_Suscription_To_Object" executed="True" result="Success" success="True" time="0.610" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_Register_Message_Suscription_To_Object(SqliteInMemory)" executed="True" result="Success" success="True" time="0.610" asserts="8" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Message_Suscription_To_SeveralTypes" executed="True" result="Success" success="True" time="0.571" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_Register_Message_Suscription_To_SeveralTypes(SqliteInMemory)" executed="True" result="Success" success="True" time="0.554" asserts="17" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Message_Suscription_To_Type" executed="True" result="Success" success="True" time="0.721" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_Register_Message_Suscription_To_Type(SqliteInMemory)" executed="True" result="Success" success="True" time="0.720" asserts="8" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Several_Message_Suscriptions_To_SameType" executed="True" result="Success" success="True" time="0.710" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_Register_Several_Message_Suscriptions_To_SameType(SqliteInMemory)" executed="True" result="Success" success="True" time="0.709" asserts="21" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_RegisterSuscription" executed="True" result="Success" success="True" time="0.598" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_RegisterSuscription(SqliteInMemory)" executed="True" result="Success" success="True" time="0.597" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Cant_Register_Message_Suscription_To_WrongType" executed="True" result="Success" success="True" time="0.646" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Cant_Register_Message_Suscription_To_WrongType(SqliteInMemory)" executed="True" result="Success" success="True" time="0.646" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RegisteringServicesTests" executed="True" result="Success" success="True" time="4.059" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_Register_Biz_Service_When_Published_ByAnother_Component_and_Dont_ReturnValues" executed="True" result="Success" success="True" time="0.681" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Can_Register_Biz_Service_When_Published_ByAnother_Component_and_Dont_ReturnValues(SqliteInMemory)" executed="True" result="Success" success="True" time="0.681" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Service" executed="True" result="Success" success="True" time="0.658" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Can_Register_Service(SqliteInMemory)" executed="True" result="Success" success="True" time="0.658" asserts="31" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_System_Service_When_Published_ByAnother_Component" executed="True" result="Success" success="True" time="0.753" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Can_Register_System_Service_When_Published_ByAnother_Component(SqliteInMemory)" executed="True" result="Success" success="True" time="0.753" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Update_Service_Registration_When_Published_ByLocal_Component" executed="True" result="Success" success="True" time="1.345" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Can_Update_Service_Registration_When_Published_ByLocal_Component(SqliteInMemory)" executed="True" result="Success" success="True" time="1.345" asserts="62" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Cant_Register_Biz_Service_When_Published_ByAnother_Component_and_ReturnValues" executed="True" result="Success" success="True" time="0.601" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Cant_Register_Biz_Service_When_Published_ByAnother_Component_and_ReturnValues(SqliteInMemory)" executed="True" result="Success" success="True" time="0.600" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="SystemDialogInfrastructureTests" executed="True" result="Success" success="True" time="0.629" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="RegistersSystemSuscriptionsStartUp" executed="True" result="Success" success="True" time="0.615" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.SystemDialogInfrastructureTests.RegistersSystemSuscriptionsStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="0.615" asserts="9" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="UsingMessagesClientTests" executed="True" result="Success" success="True" time="9.930" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="BaseTypeHandler_And_ConcreteHandlerType_Receives_Inherited_Message" executed="True" result="Success" success="True" time="3.677" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.BaseTypeHandler_And_ConcreteHandlerType_Receives_Inherited_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="3.677" asserts="6" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="BaseTypeHandler_Receives_Inherited_Message" executed="True" result="Success" success="True" time="1.839" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.BaseTypeHandler_Receives_Inherited_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="1.838" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Receive_PublishedMessage" executed="True" result="Success" success="True" time="1.266" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.Can_Receive_PublishedMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="1.266" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Receive_Several_Messages" executed="True" result="Success" success="True" time="1.480" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.Can_Receive_Several_Messages(SqliteInMemory)" executed="True" result="Success" success="True" time="1.480" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="InterfaceTypeHandler_And_ConcreteHandlerType_Receives_Inherited_Message" executed="True" result="Success" success="True" time="1.656" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.InterfaceTypeHandler_And_ConcreteHandlerType_Receives_Inherited_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="1.655" asserts="6" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="UsingServicesClientTests" executed="True" result="Success" success="True" time="6.962" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_GetServiceProxy" executed="True" result="Success" success="True" time="0.649" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_GetServiceProxy(SqliteInMemory)" executed="True" result="Success" success="True" time="0.648" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_CustomValueType_ParameterMethod" executed="True" result="Success" success="True" time="0.587" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_CustomValueType_ParameterMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.587" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_EnumType_ParameterMethod" executed="True" result="Success" success="True" time="0.657" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_EnumType_ParameterMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.645" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_OneParameterMethod" executed="True" result="Success" success="True" time="0.811" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_OneParameterMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.810" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_ReturnMethodOneParam" executed="True" result="Success" success="True" time="0.754" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_ReturnMethodOneParam(SqliteInMemory)" executed="True" result="Success" success="True" time="0.754" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_Several_ValueTypes_ParametersMethod" executed="True" result="Success" success="True" time="1.021" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_Several_ValueTypes_ParametersMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="1.021" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_SeveralParametersMethod" executed="True" result="Success" success="True" time="0.870" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_SeveralParametersMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.869" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxyEmptyMethod" executed="True" result="Success" success="True" time="0.798" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxyEmptyMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.798" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxyReturnMethod" executed="True" result="Success" success="True" time="0.791" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxyReturnMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.790" asserts="3" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x86\v1.0\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x86\Release\ermeX.Tests.NonMerged.dll" executed="True" result="Success" success="True" time="0.130" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="0.125" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="0.122" asserts="0">
                <results>
                  <test-suite type="Namespace" name="NonMerged" executed="True" result="Success" success="True" time="0.121" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="ResolveUnmergedTests" executed="True" result="Success" success="True" time="0.118" asserts="0">
                        <results>
                          <test-suite type="ParameterizedTest" name="CanResolveAssembly" executed="True" result="Success" success="True" time="0.065" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.NonMerged.ResolveUnmergedTests.CanResolveAssembly(&quot;Ninject&quot;)" executed="True" result="Success" success="True" time="0.033" asserts="1" />
                              <test-case name="ermeX.Tests.NonMerged.ResolveUnmergedTests.CanResolveAssembly(&quot;System.Data.SQLite&quot;)" executed="True" result="Success" success="True" time="0.026" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x86\v1.0\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x86\Release\ermeX.Tests.SupportTypes.dll" executed="False" result="NotRunnable">
        <reason>
          <message><![CDATA[Has no TestFixtures]]></message>
        </reason>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x86\v1.0\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x86\Release\ermeX.Tests.Threading.dll" executed="True" result="Success" success="True" time="98.207" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="98.195" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="98.188" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Threading" executed="True" result="Success" success="True" time="98.184" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Queues" executed="True" result="Success" success="True" time="23.820" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="TestProducerParallelConsumerPriorityQueue" executed="True" result="Success" success="True" time="8.258" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerParallelConsumerPriorityQueue.SortsByPriority" executed="True" result="Success" success="True" time="6.239" asserts="5" />
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerParallelConsumerPriorityQueue.TestProducerConsumerQueueBase.CanEnqueueDequeue" executed="True" result="Success" success="True" time="2.010" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="TestProducerParallelConsumerQueue" executed="True" result="Success" success="True" time="8.037" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerParallelConsumerQueue.Create_Threads_on_Demand" executed="True" result="Success" success="True" time="6.034" asserts="4" />
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerParallelConsumerQueue.TestProducerConsumerQueueBase.CanEnqueueDequeue" executed="True" result="Success" success="True" time="2.001" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="TestProducerSequentialConsumerQueue" executed="True" result="Success" success="True" time="7.517" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerSequentialConsumerQueue.Dont_Create_Threads_on_Demand" executed="True" result="Success" success="True" time="5.259" asserts="4" />
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerSequentialConsumerQueue.TestProducerConsumerQueueBase.CanEnqueueDequeue" executed="True" result="Success" success="True" time="2.001" asserts="2" />
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerSequentialConsumerQueue.When_Handling_Fails_Item_Is_Pushed_Back_To_Queue" executed="True" result="Success" success="True" time="0.253" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Scheduler" executed="True" result="Success" success="True" time="74.353" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="JobSchedulerTests" executed="True" result="Success" success="True" time="74.351" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_Dispose_When_ScheduledJobs_Pending" executed="True" result="Success" success="True" time="5.010" asserts="1" />
                              <test-suite type="ParameterizedTest" name="Can_ScheduleJob" executed="True" result="Success" success="True" time="35.062" asserts="0">
                                <results>
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(1)" executed="True" result="Success" success="True" time="1.005" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(2)" executed="True" result="Success" success="True" time="2.014" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(3)" executed="True" result="Success" success="True" time="3.009" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(4)" executed="True" result="Success" success="True" time="4.011" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(5)" executed="True" result="Success" success="True" time="5.006" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(20)" executed="True" result="Success" success="True" time="20.006" asserts="3" />
                                </results>
                              </test-suite>
                              <test-suite type="ParameterizedTest" name="Can_UnScheduleJob" executed="True" result="Success" success="True" time="24.009" asserts="0">
                                <results>
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_UnScheduleJob(1)" executed="True" result="Success" success="True" time="6.005" asserts="2" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_UnScheduleJob(3)" executed="True" result="Success" success="True" time="6.000" asserts="2" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_UnScheduleJob(5)" executed="True" result="Success" success="True" time="6.000" asserts="2" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_UnScheduleJob(15)" executed="True" result="Success" success="True" time="6.000" asserts="2" />
                                </results>
                              </test-suite>
                              <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.CanInvoke_Past_Actions" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                              <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.When_Dispose_Invoked_Non_Running_Actions_Are_Never_Started" executed="True" result="Success" success="True" time="5.257" asserts="1" />
                              <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.When_Dispose_Invoked_Waits_Running_ActionsToFinish" executed="True" result="Success" success="True" time="5.002" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>