<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x64\v1.0\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x64\Release\ermeX.Tests.Bus.Listening.dll" total="381" errors="0" failures="0" not-run="36" inconclusive="7" ignored="36" skipped="0" invalid="0" date="2013-01-22" time="12:30:51">
  <environment nunit-version="2.5.6.10205" clr-version="2.0.50727.5466" os-version="Microsoft Windows NT 6.1.7601 Service Pack 1" platform="Win32NT" cwd="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x64\v1.0\Build\ScriptsBuild" machine-name="MIGUEL-PC" user="SYSTEM" user-domain="WORKGROUP" />
  <culture-info current-culture="es-ES" current-uiculture="es-ES" />
  <test-suite type="Test Project" name="" executed="True" result="Success" success="True" time="1614.215" asserts="0">
    <results>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x64\v1.0\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x64\Release\ermeX.Tests.Bus.Listening.dll" executed="True" result="Success" success="True" time="20.880" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="20.797" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="20.787" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Bus" executed="True" result="Success" success="True" time="20.779" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Listening" executed="True" result="Success" success="True" time="20.769" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Handlers" executed="True" result="Success" success="True" time="20.760" asserts="0">
                            <results>
                              <test-suite type="Namespace" name="InternalMessageHandling" executed="True" result="Success" success="True" time="20.751" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="ReceptionMessageHandlerTester" executed="True" result="Success" success="True" time="18.793" asserts="0">
                                    <results>
                                      <test-suite type="ParameterizedTest" name="Can_Handle_Message" executed="True" result="Success" success="True" time="17.718" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.ReceptionMessageHandlerTester.Can_Handle_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="17.709" asserts="4" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="Enqueues_NonDistributedMessages_OnStartUp" executed="True" result="Success" success="True" time="0.027" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.ReceptionMessageHandlerTester.Enqueues_NonDistributedMessages_OnStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="0.026" asserts="2" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite type="Namespace" name="WorkflowHandlers" executed="True" result="Success" success="True" time="1.948" asserts="0">
                                    <results>
                                      <test-suite type="TestFixture" name="QueueDispatcherManagerTester" executed="True" result="Success" success="True" time="1.568" asserts="0">
                                        <results>
                                          <test-suite type="ParameterizedTest" name="Can_DeliverMany_Messages_OrderedByGeneration" executed="True" result="Success" success="True" time="1.321" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Can_DeliverMany_Messages_OrderedByGeneration(SqliteInMemory)" executed="True" result="Success" success="True" time="1.320" asserts="52" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Can_DeliverRespecting_Latency" executed="False" result="Ignored">
                                            <reason>
                                              <message><![CDATA[This class will be upgraded ASAP. Its not worth to test more with the current resources]]></message>
                                            </reason>
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Can_DeliverRespecting_Latency(SqliteInMemory)" executed="False" result="Ignored">
                                                <reason>
                                                  <message><![CDATA[This class will be upgraded ASAP. Its not worth to test more with the current resources]]></message>
                                                </reason>
                                              </test-case>
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Can_Dispatch_Messages" executed="True" result="Success" success="True" time="0.039" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Can_Dispatch_Messages(SqliteInMemory)" executed="True" result="Success" success="True" time="0.038" asserts="4" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Removes_Dispatched_Messages" executed="False" result="Ignored">
                                            <reason>
                                              <message><![CDATA[Its covered implicitly in other test cases]]></message>
                                            </reason>
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Removes_Dispatched_Messages(SqliteInMemory)" executed="False" result="Ignored">
                                                <reason>
                                                  <message><![CDATA[Its covered implicitly in other test cases]]></message>
                                                </reason>
                                              </test-case>
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Retries_Failed_Messages" executed="True" result="Success" success="True" time="0.177" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Retries_Failed_Messages(SqliteInMemory)" executed="True" result="Success" success="True" time="0.177" asserts="5" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="When_Disposed_Removes_ScheduledJobs" executed="False" result="Ignored">
                                            <reason>
                                              <message><![CDATA[This class will be upgraded ASAP. Its not worth to test more with the current resources]]></message>
                                            </reason>
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.When_Disposed_Removes_ScheduledJobs(SqliteInMemory)" executed="False" result="Ignored">
                                                <reason>
                                                  <message><![CDATA[This class will be upgraded ASAP. Its not worth to test more with the current resources]]></message>
                                                </reason>
                                              </test-case>
                                            </results>
                                          </test-suite>
                                        </results>
                                      </test-suite>
                                      <test-suite type="TestFixture" name="ReceptionMessageDistributorTester" executed="True" result="Success" success="True" time="0.376" asserts="0">
                                        <results>
                                          <test-suite type="ParameterizedTest" name="Can_Distribute_Messages" executed="True" result="Success" success="True" time="0.230" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.Can_Distribute_Messages(SqliteInMemory)" executed="True" result="Success" success="True" time="0.230" asserts="5" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Enqueues_NonDeliveredMessages_OnStartUp" executed="True" result="Success" success="True" time="0.027" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.Enqueues_NonDeliveredMessages_OnStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="0.027" asserts="5" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Removes_Source_Message_Once_Distributed" executed="False" result="Ignored">
                                            <reason>
                                              <message><![CDATA[Tehre are assertions in the other tests to probe this]]></message>
                                            </reason>
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.Removes_Source_Message_Once_Distributed(SqliteInMemory)" executed="False" result="Ignored">
                                                <reason>
                                                  <message><![CDATA[Tehre are assertions in the other tests to probe this]]></message>
                                                </reason>
                                              </test-case>
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="When_Subscribed_ToBase_Type_Will_DistributeIt_Correctly" executed="True" result="Success" success="True" time="0.057" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.When_Subscribed_ToBase_Type_Will_DistributeIt_Correctly(SqliteInMemory)" executed="True" result="Success" success="True" time="0.057" asserts="5" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="When_Subscribed_ToConcrete_Type_Will_DistributeIt_Correctly" executed="True" result="Success" success="True" time="0.041" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.When_Subscribed_ToConcrete_Type_Will_DistributeIt_Correctly(SqliteInMemory)" executed="True" result="Success" success="True" time="0.041" asserts="5" />
                                            </results>
                                          </test-suite>
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x64\v1.0\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x64\Release\ermeX.Tests.Bus.Publishing.dll" executed="True" result="Success" success="True" time="44.951" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="44.930" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="44.922" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Bus" executed="True" result="Success" success="True" time="44.824" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Publishing" executed="True" result="Success" success="True" time="44.771" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Dispatching" executed="True" result="Success" success="True" time="44.764" asserts="0">
                            <results>
                              <test-suite type="Namespace" name="Messages" executed="True" result="Success" success="True" time="44.760" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="MessageCollectorTester" executed="True" result="Success" success="True" time="9.721" asserts="0">
                                    <results>
                                      <test-suite type="ParameterizedTest" name="CanDispatchMessage" executed="True" result="Success" success="True" time="8.937" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageCollectorTester.CanDispatchMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="8.927" asserts="5" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="ComponentStopsOnDisposal" executed="True" result="Success" success="True" time="0.015" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageCollectorTester.ComponentStopsOnDisposal(SqliteInMemory)" executed="True" result="Success" success="True" time="0.014" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="RemovesExpiredItems" executed="True" result="Success" success="True" time="0.385" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageCollectorTester.RemovesExpiredItems(SqliteInMemory)" executed="True" result="Success" success="True" time="0.384" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="SendsExistingItemsOnStart" executed="True" result="Success" success="True" time="0.021" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageCollectorTester.SendsExistingItemsOnStart(SqliteInMemory)" executed="True" result="Success" success="True" time="0.021" asserts="3" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="MessageDistributorTester" executed="True" result="Success" success="True" time="12.554" asserts="0">
                                    <results>
                                      <test-suite type="ParameterizedTest" name="CanDispatch_NotSentMessage" executed="True" result="Success" success="True" time="0.596" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageDistributorTester.CanDispatch_NotSentMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="0.594" asserts="12" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="DontDispatchSentMessage" executed="True" result="Success" success="True" time="11.929" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageDistributorTester.DontDispatchSentMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="11.928" asserts="4" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="MessageSubscriberDispatcherTester" executed="True" result="Success" success="True" time="22.478" asserts="0">
                                    <results>
                                      <test-suite type="ParameterizedTest" name="AfterSend_Items_MarksThemAsSent" executed="True" result="Success" success="True" time="0.317" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.AfterSend_Items_MarksThemAsSent(SqliteInMemory)" executed="True" result="Success" success="True" time="0.315" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="DontSend_Expired_Items" executed="True" result="Success" success="True" time="5.019" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.DontSend_Expired_Items(SqliteInMemory)" executed="True" result="Success" success="True" time="5.019" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="RestoresPending_MessagesFrom_PreviousSessions_OnStartUp" executed="True" result="Success" success="True" time="0.057" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.RestoresPending_MessagesFrom_PreviousSessions_OnStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="0.057" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="SendsEnqueued_Items" executed="True" result="Success" success="True" time="0.025" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.SendsEnqueued_Items(SqliteInMemory)" executed="True" result="Success" success="True" time="0.024" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="WhenSend_Fails_Increases_Tries_And_ReEnqueuesItem" executed="True" result="Success" success="True" time="17.030" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.WhenSend_Fails_Increases_Tries_And_ReEnqueuesItem(SqliteInMemory)" executed="True" result="Success" success="True" time="17.029" asserts="3" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x64\v1.0\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x64\Release\ermeX.Tests.Common.dll" executed="False" result="NotRunnable">
        <reason>
          <message><![CDATA[Has no TestFixtures]]></message>
        </reason>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x64\v1.0\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x64\Release\ermeX.Tests.DAL.Integration.dll" executed="True" result="Success" success="True" time="509.790" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="509.707" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="509.647" asserts="0">
                <results>
                  <test-suite type="Namespace" name="DAL" executed="True" result="Success" success="True" time="509.582" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Integration" executed="True" result="Success" success="True" time="509.519" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="DataSources" executed="True" result="Success" success="True" time="509.509" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="AppComponentDataSourceTester" executed="True" result="Success" success="True" time="90.302" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="23.216" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="16.734" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="3.367" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="3.104" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="7.350" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="2.466" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.469" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="2.405" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="7.042" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="3.232" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.086" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.721" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetByComponentId" executed="True" result="Success" success="True" time="5.777" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetByComponentId(SqlServer2008)" executed="True" result="Success" success="True" time="1.579" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetByComponentId(Sqlite)" executed="True" result="Success" success="True" time="2.251" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetByComponentId(SqliteInMemory)" executed="True" result="Success" success="True" time="1.945" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="5.760" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="2.009" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="1.728" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="2.019" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateExchanger" executed="True" result="Success" success="True" time="6.683" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateExchanger(SqlServer2008)" executed="True" result="Success" success="True" time="2.079" asserts="5" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateExchanger(Sqlite)" executed="True" result="Success" success="True" time="2.255" asserts="5" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateExchanger(SqliteInMemory)" executed="True" result="Success" success="True" time="2.346" asserts="5" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="5.508" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.776" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.075" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.654" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Doesnt_Update_When_Version_Is_Older_Than_Current" executed="True" result="Success" success="True" time="5.950" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqlServer2008)" executed="True" result="Success" success="True" time="1.977" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(Sqlite)" executed="True" result="Success" success="True" time="2.350" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqliteInMemory)" executed="True" result="Success" success="True" time="1.619" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="5.951" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.844" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.280" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.822" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="5.422" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="1.917" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.158" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.345" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="5.960" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="2.024" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.206" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.725" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ChunkedServiceRequestMessageDataSourceTester" executed="True" result="Success" success="True" time="63.803" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="9.805" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="3.641" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="3.131" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="3.028" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="8.962" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="2.890" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="4.003" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="2.064" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="5.960" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.481" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.245" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="2.230" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="6.485" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="2.204" asserts="7" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="2.387" asserts="7" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.892" asserts="7" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="7.094" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="2.462" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.468" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="2.160" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="5.435" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.661" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.031" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.740" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="6.727" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="2.337" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.033" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="2.350" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="5.912" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.617" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="1.948" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="2.344" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ConnectivityDetailsDataSourceTester" executed="True" result="Success" success="True" time="69.686" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="10.628" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="4.800" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="3.818" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="2.007" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="8.432" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.976" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="3.911" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="2.542" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="9.177" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="2.203" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="4.930" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="2.037" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="5.586" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.905" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="1.941" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.738" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="6.677" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.702" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="3.010" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.962" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Doesnt_Update_When_Version_Is_Older_Than_Current" executed="True" result="Success" success="True" time="6.086" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqlServer2008)" executed="True" result="Success" success="True" time="1.734" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(Sqlite)" executed="True" result="Success" success="True" time="2.455" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqliteInMemory)" executed="True" result="Success" success="True" time="1.894" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="5.817" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.669" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.203" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.943" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="5.984" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="1.851" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.451" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.678" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="6.046" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.859" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.711" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.471" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="IncomingMessageDataSourceTester" executed="True" result="Success" success="True" time="57.360" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="9.209" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="4.312" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.879" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="2.009" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="5.942" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.694" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.545" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.700" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="5.064" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.644" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.125" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.293" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="6.514" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="2.254" asserts="8" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="2.389" asserts="8" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.867" asserts="8" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="6.275" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.870" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.155" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="2.246" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="6.749" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="2.373" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.935" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.439" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="6.741" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="2.205" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.570" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.963" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="6.056" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.737" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.435" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.880" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="IncomingMessageSuscriptionsSourceTester" executed="True" result="Success" success="True" time="56.562" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="8.093" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="3.420" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.932" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.736" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="6.798" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="2.325" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.713" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.756" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="5.129" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.281" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.010" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.833" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="6.213" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="2.255" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="2.385" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.570" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="6.359" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.785" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.822" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.742" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="5.527" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.734" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.135" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.656" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="7.046" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="2.514" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.482" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="2.045" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="6.314" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.671" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.710" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.930" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="OutgoingMessageDataSourceTester" executed="True" result="Success" success="True" time="56.178" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="8.327" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="3.720" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.341" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="2.262" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="6.173" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.692" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.843" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.633" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="5.469" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.389" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.481" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.593" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="6.055" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="2.076" asserts="7" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="2.068" asserts="7" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.907" asserts="7" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="6.440" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="2.242" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.481" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.714" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="6.142" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.592" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.350" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="2.196" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="5.815" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="2.109" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.168" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.535" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="6.718" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.817" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="3.065" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.834" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="OutgoingMessageSuscriptionsSourceTester" executed="True" result="Success" success="True" time="63.301" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="9.109" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="4.647" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.913" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.545" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="6.481" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.813" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.693" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.969" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="6.293" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.991" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="1.999" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="2.300" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="5.799" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.563" asserts="5" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="1.906" asserts="5" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="2.327" asserts="5" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="5.986" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.809" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.675" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.498" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Doesnt_Update_When_Version_Is_Older_Than_Current" executed="True" result="Success" success="True" time="6.054" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqlServer2008)" executed="True" result="Success" success="True" time="1.573" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(Sqlite)" executed="True" result="Success" success="True" time="2.634" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqliteInMemory)" executed="True" result="Success" success="True" time="1.845" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="6.164" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="2.232" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.141" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.786" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="6.477" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="2.375" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.096" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="2.003" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="5.888" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.725" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.267" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.894" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ServiceDetailsSourceTester" executed="True" result="Success" success="True" time="52.252" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="8.322" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="3.715" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.658" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.947" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="5.799" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.929" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="1.832" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="2.034" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="5.511" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.900" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.240" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.367" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="4.788" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.485" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="1.147" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="2.152" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetByOperationId" executed="True" result="Success" success="True" time="4.268" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetByOperationId(SqlServer2008)" executed="True" result="Success" success="True" time="1.314" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetByOperationId(Sqlite)" executed="True" result="Success" success="True" time="1.484" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetByOperationId(SqliteInMemory)" executed="True" result="Success" success="True" time="1.465" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CantInsertRepeatedOperations" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[Decide if this test is still useful as it needs to be modified]]></message>
                                    </reason>
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CantInsertRepeatedOperations(SqlServer2008)" executed="False" result="Ignored">
                                        <reason>
                                          <message><![CDATA[Decide if this test is still useful as it needs to be modified]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CantInsertRepeatedOperations(Sqlite)" executed="False" result="Ignored">
                                        <reason>
                                          <message><![CDATA[Decide if this test is still useful as it needs to be modified]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CantInsertRepeatedOperations(SqliteInMemory)" executed="False" result="Ignored">
                                        <reason>
                                          <message><![CDATA[Decide if this test is still useful as it needs to be modified]]></message>
                                        </reason>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="5.187" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.160" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.216" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.807" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Doesnt_Update_When_Version_Is_Older_Than_Current" executed="True" result="Success" success="True" time="4.608" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqlServer2008)" executed="True" result="Success" success="True" time="1.829" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(Sqlite)" executed="True" result="Success" success="True" time="1.628" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqliteInMemory)" executed="True" result="Success" success="True" time="1.150" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="3.705" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.268" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="1.560" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="0.872" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="3.370" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="1.430" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="0.957" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="0.979" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="4.330" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.955" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="1.525" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="0.848" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x64\v1.0\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x64\Release\ermeX.Tests.dll" executed="True" result="Success" success="True" time="934.702" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="934.604" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="934.563" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Acceptance" executed="True" result="Success" success="True" time="777.585" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="HandshakeTester" executed="True" result="Success" success="True" time="62.886" asserts="0">
                        <results>
                          <test-suite type="ParameterizedTest" name="SeveralComponents_Using_SameFriend_CanStart_AtSameTime" executed="True" result="Success" success="True" time="62.541" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.HandshakeTester.SeveralComponents_Using_SameFriend_CanStart_AtSameTime(SqliteInMemory)" executed="True" result="Success" success="True" time="62.531" asserts="852" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="MessagingAcceptanceTester" executed="True" result="Success" success="True" time="509.812" asserts="0">
                        <results>
                          <test-suite type="ParameterizedTest" name="CanSubscribeBeforeStartUp" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.CanSubscribeBeforeStartUp(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Components_CanPublish_Any_Message" executed="True" result="Success" success="True" time="10.411" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.Components_CanPublish_Any_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="10.411" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="FiveComponentsCanReceiveMessagesAfterBeingOffLine" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.FiveComponentsCanReceiveMessagesAfterBeingOffLine(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="MessagesAreDeliveredFIFO" executed="True" result="Success" success="True" time="31.136" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.MessagesAreDeliveredFIFO(SqliteInMemory)" executed="True" result="Success" success="True" time="31.135" asserts="11" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="MessagesAreDeliveredFIFO_SeveralComponents" executed="True" result="Success" success="True" time="42.751" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.MessagesAreDeliveredFIFO_SeveralComponents(SqliteInMemory)" executed="True" result="Success" success="True" time="42.750" asserts="27" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="OneComponentCanSubscribeToItsOwnMessages" executed="True" result="Success" success="True" time="11.962" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.OneComponentCanSubscribeToItsOwnMessages(SqliteInMemory)" executed="True" result="Success" success="True" time="11.961" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SendMessageAndReception" executed="True" result="Success" success="True" time="28.241" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SendMessageAndReception(SqliteInMemory)" executed="True" result="Success" success="True" time="28.240" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Several_Components_SuscriptorsOnlyReceives_Its_Own_Suscriptions" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.Several_Components_SuscriptorsOnlyReceives_Its_Own_Suscriptions(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SeveralComponentsCanExchangeMessages" executed="True" result="Success" success="True" time="44.475" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SeveralComponentsCanExchangeMessages(SqliteInMemory)" executed="True" result="Success" success="True" time="44.461" asserts="9" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SeveralReceiversSendMessageAndReception" executed="True" result="Success" success="True" time="74.777" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SeveralReceiversSendMessageAndReception(SqliteInMemory)" executed="True" result="Success" success="True" time="74.777" asserts="17" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SuscriptorCanReceiveMessagesAfterBeing_Disconnected" executed="True" result="Success" success="True" time="41.760" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SuscriptorCanReceiveMessagesAfterBeing_Disconnected(SqliteInMemory)" executed="True" result="Success" success="True" time="41.759" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SuscriptorCanReceiveMessagesAfterBeing_Disconnected_And_Add_Subscriptions" executed="True" result="Success" success="True" time="86.158" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SuscriptorCanReceiveMessagesAfterBeing_Disconnected_And_Add_Subscriptions(SqliteInMemory)" executed="True" result="Success" success="True" time="86.157" asserts="9" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SuscriptorCanReceiveMessagesAfterBeingOffline" executed="True" result="Success" success="True" time="28.402" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SuscriptorCanReceiveMessagesAfterBeingOffline(SqliteInMemory)" executed="True" result="Success" success="True" time="28.402" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoComponentsCanExchangeMessages" executed="True" result="Success" success="True" time="29.191" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.TwoComponentsCanExchangeMessages(SqliteInMemory)" executed="True" result="Success" success="True" time="29.191" asserts="9" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoComponentsCanReceiveMessagesAfterBeingOffLine" executed="True" result="Success" success="True" time="50.788" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.TwoComponentsCanReceiveMessagesAfterBeingOffLine(SqliteInMemory)" executed="True" result="Success" success="True" time="50.788" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoSuscriptions_Of_The_SameHandler_Are_HandledBy_TheSame_ObjectHandler" executed="True" result="Success" success="True" time="29.678" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.TwoSuscriptions_Of_The_SameHandler_Are_HandledBy_TheSame_ObjectHandler(SqliteInMemory)" executed="True" result="Success" success="True" time="29.676" asserts="5" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ServicesAcceptanceTester" executed="True" result="Success" success="True" time="204.874" asserts="0">
                        <results>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_ArrayParamsMethod_Returns" executed="True" result="Success" success="True" time="11.892" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_ArrayParamsMethod_Returns(SqliteInMemory)" executed="True" result="Success" success="True" time="11.891" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_EmptyMethod" executed="True" result="Success" success="True" time="0.914" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_EmptyMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.913" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_EmptyMethod_ReturnValue" executed="True" result="Success" success="True" time="0.832" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_EmptyMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="0.831" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_OneParamMethod" executed="True" result="Success" success="True" time="0.924" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_OneParamMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.924" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_OneParamMethod_ReturnValue" executed="True" result="Success" success="True" time="1.020" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_OneParamMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="1.020" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_ReturnsArray" executed="True" result="Success" success="True" time="0.862" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_ReturnsArray(SqliteInMemory)" executed="True" result="Success" success="True" time="0.861" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_SeveralParamsMethod" executed="True" result="Success" success="True" time="0.808" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_SeveralParamsMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.808" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_SeveralParamsMethod_ReturnValue" executed="True" result="Success" success="True" time="0.887" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_SeveralParamsMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="0.886" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_ArrayParamsMethod_Returns" executed="True" result="Success" success="True" time="14.363" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_ArrayParamsMethod_Returns(SqliteInMemory)" executed="True" result="Success" success="True" time="14.362" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_EmptyMethod" executed="True" result="Success" success="True" time="14.667" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_EmptyMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="14.666" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_EmptyMethod_ReturnValue" executed="True" result="Success" success="True" time="15.370" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_EmptyMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="15.369" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_OneParamMethod" executed="True" result="Success" success="True" time="15.028" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_OneParamMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="15.027" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_OneParamMethod_ReturnValue" executed="True" result="Success" success="True" time="13.869" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_OneParamMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="13.869" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_ReturnsArray" executed="True" result="Success" success="True" time="13.703" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_ReturnsArray(SqliteInMemory)" executed="True" result="Success" success="True" time="13.702" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_SeveralParamsMethod" executed="True" result="Success" success="True" time="12.961" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_SeveralParamsMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="12.960" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_SeveralParamsMethod_ReturnValue" executed="True" result="Success" success="True" time="13.380" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_SeveralParamsMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="13.380" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Components_CanPublish_Several_Services" executed="True" result="Success" success="True" time="23.706" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.Components_CanPublish_Several_Services(SqliteInMemory)" executed="True" result="Success" success="True" time="23.705" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SeveralComponents_Can_Serve_Same_Service_NoReturnValues" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[FIX]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.SeveralComponents_Can_Serve_Same_Service_NoReturnValues(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[FIX]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoComponents_CannotRegister_TheSameService_IfReturnValues" executed="True" result="Success" success="True" time="13.262" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.TwoComponents_CannotRegister_TheSameService_IfReturnValues(SqliteInMemory)" executed="True" result="Success" success="True" time="13.261" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoComponents_CanRegister_TheSameService_If_Dont_ReturnValues" executed="True" result="Success" success="True" time="14.356" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.TwoComponents_CanRegister_TheSameService_If_Dont_ReturnValues(SqliteInMemory)" executed="True" result="Success" success="True" time="14.355" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="When_CannotInvoke_ThrowsException" executed="True" result="Success" success="True" time="20.421" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.When_CannotInvoke_ThrowsException(SqliteInMemory)" executed="True" result="Success" success="True" time="20.419" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="When_Service_NotDefined_Returns_Null" executed="True" result="Success" success="True" time="1.546" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.When_Service_NotDefined_Returns_Null(SqliteInMemory)" executed="True" result="Success" success="True" time="1.530" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Common" executed="True" result="Success" success="True" time="45.952" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Serialization" executed="True" result="Success" success="True" time="45.942" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="JsonSerializerTests" executed="True" result="Success" success="True" time="9.302" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Common.Serialization.JsonSerializerTests.CanSerializeAndDeserialize_ClassWithInnerClass_Json" executed="True" result="Success" success="True" time="0.113" asserts="2" />
                              <test-case name="ermeX.Tests.Common.Serialization.JsonSerializerTests.CanSerializeAndDeserialize_Json" executed="True" result="Success" success="True" time="9.149" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="ObjectSerializerTests" executed="True" result="Success" success="True" time="32.791" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Common.Serialization.ObjectSerializerTests.CanSerializeAndDeserialize_ByteArray" executed="True" result="Success" success="True" time="0.215" asserts="1" />
                              <test-case name="ermeX.Tests.Common.Serialization.ObjectSerializerTests.CanSerializeAndDeserialize_ToFile" executed="True" result="Success" success="True" time="0.779" asserts="1" />
                              <test-case name="ermeX.Tests.Common.Serialization.ObjectSerializerTests.FromMarcGravell_Serialize_Deserialize_1M" executed="True" result="Success" success="True" time="31.777" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="TestApplicationSerializableMessages" executed="True" result="Success" success="True" time="3.814" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_BizMessage_and_Modify_TheProtobufContract" executed="True" result="Success" success="True" time="0.081" asserts="0" />
                              <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ChunckedServiceRequest_ToFile" executed="True" result="Success" success="True" time="0.070" asserts="1" />
                              <test-suite type="ParameterizedTest" name="CanSerializeAndDeserialize_LayerMessage_ToFile" executed="True" result="Success" success="True" time="0.536" asserts="0">
                                <results>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_LayerMessage_ToFile(Biz)" executed="True" result="Success" success="True" time="0.271" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_LayerMessage_ToFile(Bus)" executed="True" result="Success" success="True" time="0.176" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_LayerMessage_ToFile(Transport)" executed="True" result="Success" success="True" time="0.085" asserts="2" />
                                </results>
                              </test-suite>
                              <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_ToFile" executed="True" result="Success" success="True" time="0.088" asserts="2" />
                              <test-suite type="ParameterizedTest" name="CanSerializeAndDeserialize_ServiceRequest_WithCollection" executed="True" result="Success" success="True" time="2.786" asserts="0">
                                <results>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(1)" executed="True" result="Success" success="True" time="0.022" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(2)" executed="True" result="Success" success="True" time="0.015" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(40)" executed="True" result="Success" success="True" time="0.326" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(100)" executed="True" result="Success" success="True" time="0.700" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(200)" executed="True" result="Success" success="True" time="1.520" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(500)" executed="True" result="Inconclusive" success="False" time="0.180" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(1000)" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(5000)" executed="True" result="Inconclusive" success="False" time="0.001" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(10000)" executed="True" result="Inconclusive" success="False" time="0.001" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(50000)" executed="True" result="Inconclusive" success="False" time="0.001" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(500000)" executed="True" result="Inconclusive" success="False" time="0.001" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceResult_ToFile" executed="True" result="Success" success="True" time="0.240" asserts="3" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Dialogs" executed="True" result="Success" success="True" time="18.787" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="HandshakingTester" executed="True" result="Success" success="True" time="18.756" asserts="0">
                        <results>
                          <test-case name="ermeX.Tests.Dialogs.HandshakingTester.Caller_Waits_MyComponents_Message_response_With_TimeOut" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.HandshakingTester.Component_Wont_Handle_Events_Raised_Before_StartUp_Is_Finished" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-suite type="ParameterizedTest" name="Sends_JoinRequestMessage_OnStartUp" executed="True" result="Success" success="True" time="4.670" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.Sends_JoinRequestMessage_OnStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="4.670" asserts="5" />
                            </results>
                          </test-suite>
                          <test-case name="ermeX.Tests.Dialogs.HandshakingTester.When_Joined_Updates_Local_Message_Definitions" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.HandshakingTester.When_Joined_Updates_Local_NonSystem_Service_Definitions" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-suite type="ParameterizedTest" name="WhenReceived_JoinRequestMessage_Sends_MyComponentsMessage_To_The_Caller" executed="True" result="Success" success="True" time="1.922" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.WhenReceived_JoinRequestMessage_Sends_MyComponentsMessage_To_The_Caller(SqliteInMemory)" executed="True" result="Success" success="True" time="1.921" asserts="10" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="WhenRequest_JoinRequestMessage_Does_Not_SendJoinRequestMesage_Twice_To_SameComponent" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.WhenRequest_JoinRequestMessage_Does_Not_SendJoinRequestMesage_Twice_To_SameComponent(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="WhenRequest_JoinRequestMessage_SendsJoinRequestMesage_To_ReceivedComponents" executed="True" result="Success" success="True" time="7.448" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.WhenRequest_JoinRequestMessage_SendsJoinRequestMesage_To_ReceivedComponents(SqliteInMemory)" executed="True" result="Success" success="True" time="7.447" asserts="18" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="WhenRequest_JoinRequestMessage_UpdatesRequesterComponents" executed="True" result="Success" success="True" time="4.681" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.WhenRequest_JoinRequestMessage_UpdatesRequesterComponents(SqliteInMemory)" executed="True" result="Success" success="True" time="4.681" asserts="6" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="MessageSuscriptionsDialogTester" executed="True" result="Inconclusive" success="False" time="0.007" asserts="0">
                        <results>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.Doesnt_Suscribe_To_Its_Own_System_Messages" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.Sends_UpdateSuscription_When_A_LocalSuscriptionHasChanged" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.Sends_UpdateSuscription_When_A_LocalSuscriptionIsCreated" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.When_Received_MySubscriptions_UpdatesRemovesOrAddLocalDefinitions_And_Updates_Subscribed_MessagesInOutgoingQueues" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.When_Received_UpdateSuscription_UpdatesLocalDefinition" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="MyComponentsDialogTester" executed="False" result="Ignored">
                        <reason>
                          <message><![CDATA[It might not be necessary]]></message>
                        </reason>
                        <results>
                          <test-case name="ermeX.Tests.Dialogs.MyComponentsDialogTester.When_Received_MyComponents_Updates_LocalDefinitions" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[It might not be necessary]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MyComponentsDialogTester.When_Requested_MyComponents_SendsResponse_With_All_Components" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[It might not be necessary]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="PublishedServiceDialogTester" executed="True" result="Inconclusive" success="False" time="0.005" asserts="0">
                        <results>
                          <test-case name="ermeX.Tests.Dialogs.PublishedServiceDialogTester.Sends_UpdateService_When_A_LocalServicePublished_HasChanged" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.PublishedServiceDialogTester.Sends_UpdateService_When_A_LocalServicePublished_IsCreated" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.PublishedServiceDialogTester.When_Received_MyServices_UpdatesRemovesOrAddLocalDefinitions_And_UpdatesMessagesInOutgoingQueues" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.PublishedServiceDialogTester.When_Received_UpdateService_UpdatesLocalDefinition" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Services" executed="True" result="Success" success="True" time="34.429" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Builtin" executed="True" result="Success" success="True" time="34.244" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="SuperSockets" executed="True" result="Success" success="True" time="34.240" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="SuperSocketClientTester" executed="True" result="Success" success="True" time="6.374" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="Can_Send_Chunked_Message" description="Tests to send a big file" executed="True" result="Success" success="True" time="1.641" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Chunked_Message(5)" executed="True" result="Success" success="True" time="1.640" asserts="7" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Can_Send_Huge_Not_Chunked_Message" description="Tests to send a big file" executed="True" result="Success" success="True" time="2.344" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Huge_Not_Chunked_Message(1)" executed="True" result="Success" success="True" time="0.427" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Huge_Not_Chunked_Message(5)" executed="True" result="Success" success="True" time="0.796" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Huge_Not_Chunked_Message(10)" executed="True" result="Success" success="True" time="1.114" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Huge_Not_Chunked_Message(15)" executed="True" result="Inconclusive" success="False" time="0.001" asserts="0">
                                        <reason>
                                          <message><![CDATA[TODO]]></message>
                                        </reason>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanSendMessageWithLongResponse" executed="True" result="Success" success="True" time="1.014" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.CanSendMessageWithLongResponse(10)" executed="True" result="Success" success="True" time="0.213" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.CanSendMessageWithLongResponse(50)" executed="True" result="Success" success="True" time="0.313" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.CanSendMessageWithLongResponse(100)" executed="True" result="Success" success="True" time="0.486" asserts="7" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="ClientChoosesMostSuitableIpForSendingMessage" executed="True" result="Success" success="True" time="0.535" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ClientChoosesMostSuitableIpForSendingMessage(True)" executed="True" result="Success" success="True" time="0.296" asserts="6" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ClientChoosesMostSuitableIpForSendingMessage(False)" executed="True" result="Success" success="True" time="0.237" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.CanSendMessage" executed="True" result="Success" success="True" time="0.225" asserts="7" />
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.CanSendMessageToLocalMachine" executed="True" result="Success" success="True" time="0.275" asserts="7" />
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.CantSendToWrongIp" executed="True" result="Success" success="True" time="0.322" asserts="1" />
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.Client_Reports_When_Server_Failed_Handling" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.Client_Reports_When_Server_Handle_Success" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.Client_Reports_WhenServerCannotBeReached" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.Client_Reports_WhenTimeout" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="SuperSocketServerTester" executed="True" result="Success" success="True" time="27.858" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanReceiveChunkedMessage" executed="True" result="Success" success="True" time="0.270" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.CanReceiveChunkedMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="0.270" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanReceiveMessage" executed="True" result="Success" success="True" time="0.315" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.CanReceiveMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="0.314" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanReceiveMessageCollection" executed="True" result="Success" success="True" time="0.495" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.CanReceiveMessageCollection(SqliteInMemory)" executed="True" result="Success" success="True" time="0.494" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanReceiveSeveralMessages" executed="True" result="Success" success="True" time="3.955" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.CanReceiveSeveralMessages(SqliteInMemory)" executed="True" result="Success" success="True" time="3.954" asserts="1165" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenService_DoesntExistsInDb_ReturnsError" executed="True" result="Success" success="True" time="21.539" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.WhenService_DoesntExistsInDb_ReturnsError(SqliteInMemory,True)" executed="True" result="Success" success="True" time="10.509" asserts="2" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.WhenService_DoesntExistsInDb_ReturnsError(SqliteInMemory,False)" executed="True" result="Success" success="True" time="11.030" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenService_Is_RegisteredCallsHandler_Obj" executed="True" result="Success" success="True" time="1.253" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.WhenService_Is_RegisteredCallsHandler_Obj(SqliteInMemory,True)" executed="True" result="Success" success="True" time="0.733" asserts="5" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.WhenService_Is_RegisteredCallsHandler_Obj(SqliteInMemory,False)" executed="True" result="Success" success="True" time="0.518" asserts="5" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Sending" executed="True" result="Success" success="True" time="0.148" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Client" executed="True" result="Success" success="True" time="0.144" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="ServiceProxyTester" executed="True" result="Success" success="True" time="0.143" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanInvokeSend" executed="True" result="Success" success="True" time="0.032" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.CanInvokeSend(SqliteInMemory)" executed="True" result="Success" success="True" time="0.032" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenAllEndPointsFailed__ServiceResultError" executed="True" result="Success" success="True" time="0.011" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenAllEndPointsFailed__ServiceResultError(SqliteInMemory)" executed="True" result="Success" success="True" time="0.010" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenAllEndPointsFailed_CanBeReInvoked" executed="True" result="Success" success="True" time="0.008" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenAllEndPointsFailed_CanBeReInvoked(SqliteInMemory)" executed="True" result="Success" success="True" time="0.008" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenEndpointFailedTry_WithAllTheRestOfEndpoints" executed="True" result="Success" success="True" time="0.008" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenEndpointFailedTry_WithAllTheRestOfEndpoints(SqliteInMemory)" executed="True" result="Success" success="True" time="0.008" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenEndpointRaisesExceptionTry_WithAllTheRestOfEndpoints" executed="True" result="Success" success="True" time="0.009" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenEndpointRaisesExceptionTry_WithAllTheRestOfEndpoints(SqliteInMemory)" executed="True" result="Success" success="True" time="0.009" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenThereAreNotEndpointsItReturns_ServiceResultError" executed="True" result="Success" success="True" time="0.027" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenThereAreNotEndpointsItReturns_ServiceResultError(SqliteInMemory)" executed="True" result="Success" success="True" time="0.026" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="VersionUpgrade" executed="True" result="Success" success="True" time="11.523" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="VersionUpgradeHelperTests" executed="True" result="Success" success="True" time="11.522" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_RunUpgrades" executed="True" result="Success" success="True" time="8.942" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.Can_RunUpgrades(SqlServer2008)" executed="True" result="Success" success="True" time="4.984" asserts="1" />
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.Can_RunUpgrades(Sqlite)" executed="True" result="Success" success="True" time="2.906" asserts="1" />
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.Can_RunUpgrades(SqliteInMemory)" executed="True" result="Success" success="True" time="1.047" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="RunUpgrades_On_StartUp" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.RunUpgrades_On_StartUp(SqlServer2008)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.RunUpgrades_On_StartUp(Sqlite)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.RunUpgrades_On_StartUp(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="WorldGateTests" executed="True" result="Success" success="True" time="46.179" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="DiscoveringMessagesTests" executed="True" result="Success" success="True" time="5.308" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_Late_Subscribe_To_Messages_When_Handler_In_Other_Assemblies" executed="True" result="Success" success="True" time="0.943" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Late_Subscribe_To_Messages_When_Handler_In_Other_Assemblies(SqliteInMemory)" executed="True" result="Success" success="True" time="0.942" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Subscribe_To_Messages_In_Assembly" executed="True" result="Success" success="True" time="0.974" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Subscribe_To_Messages_In_Assembly(SqliteInMemory)" executed="True" result="Success" success="True" time="0.974" asserts="7" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Subscribe_To_Messages_In_Assembly_When_HandlerHasNonHandlerInterfaces" executed="True" result="Success" success="True" time="0.944" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Subscribe_To_Messages_In_Assembly_When_HandlerHasNonHandlerInterfaces(SqliteInMemory)" executed="True" result="Success" success="True" time="0.943" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Subscribe_To_Messages_In_Assembly_When_HandlerHasSeveralInterfaces" executed="True" result="Success" success="True" time="1.214" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Subscribe_To_Messages_In_Assembly_When_HandlerHasSeveralInterfaces(SqliteInMemory)" executed="True" result="Success" success="True" time="1.214" asserts="6" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Subscribe_To_Messages_In_Assembly_WithoutExcludingTypes" executed="True" result="Success" success="True" time="1.172" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Subscribe_To_Messages_In_Assembly_WithoutExcludingTypes(SqliteInMemory)" executed="True" result="Success" success="True" time="1.171" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="DiscoveringServicesTests" executed="True" result="Success" success="True" time="1.845" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_Late_Register_Services_In_Other_Assemblies" executed="True" result="Success" success="True" time="0.991" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringServicesTests.Can_Late_Register_Services_In_Other_Assemblies(SqliteInMemory)" executed="True" result="Success" success="True" time="0.990" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Services_In_Assemblies" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringServicesTests.Can_Register_Services_In_Assemblies(SqlServer2008)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Services_In_Assembly" executed="True" result="Success" success="True" time="0.829" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringServicesTests.Can_Register_Services_In_Assembly(SqliteInMemory)" executed="True" result="Success" success="True" time="0.828" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Doesnt_Register_Services_In_Other_Assemblies" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringServicesTests.Doesnt_Register_Services_In_Other_Assemblies(SqlServer2008)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RegisteringMessagesTests" executed="True" result="Success" success="True" time="5.590" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_Register_Message_Suscription_To_Object" executed="True" result="Success" success="True" time="0.823" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_Register_Message_Suscription_To_Object(SqliteInMemory)" executed="True" result="Success" success="True" time="0.823" asserts="8" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Message_Suscription_To_SeveralTypes" executed="True" result="Success" success="True" time="0.719" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_Register_Message_Suscription_To_SeveralTypes(SqliteInMemory)" executed="True" result="Success" success="True" time="0.718" asserts="17" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Message_Suscription_To_Type" executed="True" result="Success" success="True" time="0.836" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_Register_Message_Suscription_To_Type(SqliteInMemory)" executed="True" result="Success" success="True" time="0.836" asserts="8" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Several_Message_Suscriptions_To_SameType" executed="True" result="Success" success="True" time="0.868" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_Register_Several_Message_Suscriptions_To_SameType(SqliteInMemory)" executed="True" result="Success" success="True" time="0.868" asserts="21" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_RegisterSuscription" executed="True" result="Success" success="True" time="0.916" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_RegisterSuscription(SqliteInMemory)" executed="True" result="Success" success="True" time="0.915" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Cant_Register_Message_Suscription_To_WrongType" executed="True" result="Success" success="True" time="1.373" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Cant_Register_Message_Suscription_To_WrongType(SqliteInMemory)" executed="True" result="Success" success="True" time="1.373" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RegisteringServicesTests" executed="True" result="Success" success="True" time="7.712" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_Register_Biz_Service_When_Published_ByAnother_Component_and_Dont_ReturnValues" executed="True" result="Success" success="True" time="1.097" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Can_Register_Biz_Service_When_Published_ByAnother_Component_and_Dont_ReturnValues(SqliteInMemory)" executed="True" result="Success" success="True" time="1.096" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Service" executed="True" result="Success" success="True" time="1.144" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Can_Register_Service(SqliteInMemory)" executed="True" result="Success" success="True" time="1.143" asserts="31" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_System_Service_When_Published_ByAnother_Component" executed="True" result="Success" success="True" time="1.360" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Can_Register_System_Service_When_Published_ByAnother_Component(SqliteInMemory)" executed="True" result="Success" success="True" time="1.360" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Update_Service_Registration_When_Published_ByLocal_Component" executed="True" result="Success" success="True" time="3.019" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Can_Update_Service_Registration_When_Published_ByLocal_Component(SqliteInMemory)" executed="True" result="Success" success="True" time="3.018" asserts="62" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Cant_Register_Biz_Service_When_Published_ByAnother_Component_and_ReturnValues" executed="True" result="Success" success="True" time="1.027" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Cant_Register_Biz_Service_When_Published_ByAnother_Component_and_ReturnValues(SqliteInMemory)" executed="True" result="Success" success="True" time="1.027" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="SystemDialogInfrastructureTests" executed="True" result="Success" success="True" time="1.133" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="RegistersSystemSuscriptionsStartUp" executed="True" result="Success" success="True" time="1.121" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.SystemDialogInfrastructureTests.RegistersSystemSuscriptionsStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="1.119" asserts="9" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="UsingMessagesClientTests" executed="True" result="Success" success="True" time="12.317" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="BaseTypeHandler_And_ConcreteHandlerType_Receives_Inherited_Message" executed="True" result="Success" success="True" time="4.368" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.BaseTypeHandler_And_ConcreteHandlerType_Receives_Inherited_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="4.368" asserts="6" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="BaseTypeHandler_Receives_Inherited_Message" executed="True" result="Success" success="True" time="2.067" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.BaseTypeHandler_Receives_Inherited_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="2.065" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Receive_PublishedMessage" executed="True" result="Success" success="True" time="1.725" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.Can_Receive_PublishedMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="1.724" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Receive_Several_Messages" executed="True" result="Success" success="True" time="1.961" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.Can_Receive_Several_Messages(SqliteInMemory)" executed="True" result="Success" success="True" time="1.961" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="InterfaceTypeHandler_And_ConcreteHandlerType_Receives_Inherited_Message" executed="True" result="Success" success="True" time="2.183" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.InterfaceTypeHandler_And_ConcreteHandlerType_Receives_Inherited_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="2.183" asserts="6" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="UsingServicesClientTests" executed="True" result="Success" success="True" time="12.257" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_GetServiceProxy" executed="True" result="Success" success="True" time="1.342" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_GetServiceProxy(SqliteInMemory)" executed="True" result="Success" success="True" time="1.342" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_CustomValueType_ParameterMethod" executed="True" result="Success" success="True" time="1.571" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_CustomValueType_ParameterMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="1.571" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_EnumType_ParameterMethod" executed="True" result="Success" success="True" time="1.907" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_EnumType_ParameterMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="1.906" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_OneParameterMethod" executed="True" result="Success" success="True" time="0.965" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_OneParameterMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.964" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_ReturnMethodOneParam" executed="True" result="Success" success="True" time="1.168" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_ReturnMethodOneParam(SqliteInMemory)" executed="True" result="Success" success="True" time="1.167" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_Several_ValueTypes_ParametersMethod" executed="True" result="Success" success="True" time="1.705" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_Several_ValueTypes_ParametersMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="1.703" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_SeveralParametersMethod" executed="True" result="Success" success="True" time="1.120" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_SeveralParametersMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="1.120" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxyEmptyMethod" executed="True" result="Success" success="True" time="1.302" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxyEmptyMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="1.302" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxyReturnMethod" executed="True" result="Success" success="True" time="1.144" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxyReturnMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="1.143" asserts="3" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x64\v1.0\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x64\Release\ermeX.Tests.NonMerged.dll" executed="True" result="Success" success="True" time="1.987" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="1.969" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="1.966" asserts="0">
                <results>
                  <test-suite type="Namespace" name="NonMerged" executed="True" result="Success" success="True" time="1.965" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="ResolveUnmergedTests" executed="True" result="Success" success="True" time="1.962" asserts="0">
                        <results>
                          <test-suite type="ParameterizedTest" name="CanResolveAssembly" executed="True" result="Success" success="True" time="0.952" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.NonMerged.ResolveUnmergedTests.CanResolveAssembly(&quot;Ninject&quot;)" executed="True" result="Success" success="True" time="0.630" asserts="1" />
                              <test-case name="ermeX.Tests.NonMerged.ResolveUnmergedTests.CanResolveAssembly(&quot;System.Data.SQLite&quot;)" executed="True" result="Success" success="True" time="0.293" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x64\v1.0\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x64\Release\ermeX.Tests.SupportTypes.dll" executed="False" result="NotRunnable">
        <reason>
          <message><![CDATA[Has no TestFixtures]]></message>
        </reason>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.0\workspace\FrameworkVersion\4.0\Platform\x64\v1.0\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x64\Release\ermeX.Tests.Threading.dll" executed="True" result="Success" success="True" time="98.298" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="98.277" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="98.263" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Threading" executed="True" result="Success" success="True" time="98.258" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Queues" executed="True" result="Success" success="True" time="23.856" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="TestProducerParallelConsumerPriorityQueue" executed="True" result="Success" success="True" time="8.394" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerParallelConsumerPriorityQueue.SortsByPriority" executed="True" result="Success" success="True" time="6.286" asserts="5" />
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerParallelConsumerPriorityQueue.TestProducerConsumerQueueBase.CanEnqueueDequeue" executed="True" result="Success" success="True" time="2.057" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="TestProducerParallelConsumerQueue" executed="True" result="Success" success="True" time="7.903" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerParallelConsumerQueue.Create_Threads_on_Demand" executed="True" result="Success" success="True" time="5.899" asserts="4" />
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerParallelConsumerQueue.TestProducerConsumerQueueBase.CanEnqueueDequeue" executed="True" result="Success" success="True" time="2.001" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="TestProducerSequentialConsumerQueue" executed="True" result="Success" success="True" time="7.541" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerSequentialConsumerQueue.Dont_Create_Threads_on_Demand" executed="True" result="Success" success="True" time="5.274" asserts="4" />
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerSequentialConsumerQueue.TestProducerConsumerQueueBase.CanEnqueueDequeue" executed="True" result="Success" success="True" time="2.001" asserts="2" />
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerSequentialConsumerQueue.When_Handling_Fails_Item_Is_Pushed_Back_To_Queue" executed="True" result="Success" success="True" time="0.263" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Scheduler" executed="True" result="Success" success="True" time="74.390" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="JobSchedulerTests" executed="True" result="Success" success="True" time="74.388" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_Dispose_When_ScheduledJobs_Pending" executed="True" result="Success" success="True" time="5.018" asserts="1" />
                              <test-suite type="ParameterizedTest" name="Can_ScheduleJob" executed="True" result="Success" success="True" time="35.062" asserts="0">
                                <results>
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(1)" executed="True" result="Success" success="True" time="1.015" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(2)" executed="True" result="Success" success="True" time="2.010" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(3)" executed="True" result="Success" success="True" time="3.008" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(4)" executed="True" result="Success" success="True" time="4.000" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(5)" executed="True" result="Success" success="True" time="5.006" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(20)" executed="True" result="Success" success="True" time="20.000" asserts="3" />
                                </results>
                              </test-suite>
                              <test-suite type="ParameterizedTest" name="Can_UnScheduleJob" executed="True" result="Success" success="True" time="24.019" asserts="0">
                                <results>
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_UnScheduleJob(1)" executed="True" result="Success" success="True" time="6.012" asserts="2" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_UnScheduleJob(3)" executed="True" result="Success" success="True" time="6.000" asserts="2" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_UnScheduleJob(5)" executed="True" result="Success" success="True" time="6.000" asserts="2" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_UnScheduleJob(15)" executed="True" result="Success" success="True" time="6.000" asserts="2" />
                                </results>
                              </test-suite>
                              <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.CanInvoke_Past_Actions" executed="True" result="Success" success="True" time="0.002" asserts="2" />
                              <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.When_Dispose_Invoked_Non_Running_Actions_Are_Never_Started" executed="True" result="Success" success="True" time="5.252" asserts="1" />
                              <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.When_Dispose_Invoked_Waits_Running_ActionsToFinish" executed="True" result="Success" success="True" time="5.010" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>