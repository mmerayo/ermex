<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="D:\JENKINS\jobs\ermeXv1.1\workspace\FrameworkVersion\4.0\Platform\x86\v1.1\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x86\Release\ermeX.Tests.Bus.Listening.dll" total="381" errors="0" failures="0" not-run="36" inconclusive="7" ignored="36" skipped="0" invalid="0" date="2013-01-22" time="10:23:00">
  <environment nunit-version="2.5.6.10205" clr-version="2.0.50727.5466" os-version="Microsoft Windows NT 6.1.7601 Service Pack 1" platform="Win32NT" cwd="D:\JENKINS\jobs\ermeXv1.1\workspace\FrameworkVersion\4.0\Platform\x86\v1.1\Build\ScriptsBuild" machine-name="MIGUEL-PC" user="SYSTEM" user-domain="WORKGROUP" />
  <culture-info current-culture="es-ES" current-uiculture="es-ES" />
  <test-suite type="Test Project" name="" executed="True" result="Success" success="True" time="1187.264" asserts="0">
    <results>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.1\workspace\FrameworkVersion\4.0\Platform\x86\v1.1\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x86\Release\ermeX.Tests.Bus.Listening.dll" executed="True" result="Success" success="True" time="8.040" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="8.027" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="8.019" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Bus" executed="True" result="Success" success="True" time="8.010" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Listening" executed="True" result="Success" success="True" time="7.981" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Handlers" executed="True" result="Success" success="True" time="7.973" asserts="0">
                            <results>
                              <test-suite type="Namespace" name="InternalMessageHandling" executed="True" result="Success" success="True" time="7.966" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="ReceptionMessageHandlerTester" executed="True" result="Success" success="True" time="6.928" asserts="0">
                                    <results>
                                      <test-suite type="ParameterizedTest" name="Can_Handle_Message" executed="True" result="Success" success="True" time="6.692" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.ReceptionMessageHandlerTester.Can_Handle_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="6.690" asserts="4" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="Enqueues_NonDistributedMessages_OnStartUp" executed="True" result="Success" success="True" time="0.013" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.ReceptionMessageHandlerTester.Enqueues_NonDistributedMessages_OnStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="0.012" asserts="2" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite type="Namespace" name="WorkflowHandlers" executed="True" result="Success" success="True" time="1.029" asserts="0">
                                    <results>
                                      <test-suite type="TestFixture" name="QueueDispatcherManagerTester" executed="True" result="Success" success="True" time="0.796" asserts="0">
                                        <results>
                                          <test-suite type="ParameterizedTest" name="Can_DeliverMany_Messages_OrderedByGeneration" executed="True" result="Success" success="True" time="0.700" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Can_DeliverMany_Messages_OrderedByGeneration(SqliteInMemory)" executed="True" result="Success" success="True" time="0.700" asserts="52" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Can_DeliverRespecting_Latency" executed="False" result="Ignored">
                                            <reason>
                                              <message><![CDATA[This class will be upgraded ASAP. Its not worth to test more with the current resources]]></message>
                                            </reason>
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Can_DeliverRespecting_Latency(SqliteInMemory)" executed="False" result="Ignored">
                                                <reason>
                                                  <message><![CDATA[This class will be upgraded ASAP. Its not worth to test more with the current resources]]></message>
                                                </reason>
                                              </test-case>
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Can_Dispatch_Messages" executed="True" result="Success" success="True" time="0.021" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Can_Dispatch_Messages(SqliteInMemory)" executed="True" result="Success" success="True" time="0.020" asserts="4" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Removes_Dispatched_Messages" executed="False" result="Ignored">
                                            <reason>
                                              <message><![CDATA[Its covered implicitly in other test cases]]></message>
                                            </reason>
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Removes_Dispatched_Messages(SqliteInMemory)" executed="False" result="Ignored">
                                                <reason>
                                                  <message><![CDATA[Its covered implicitly in other test cases]]></message>
                                                </reason>
                                              </test-case>
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Retries_Failed_Messages" executed="True" result="Success" success="True" time="0.048" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.Retries_Failed_Messages(SqliteInMemory)" executed="True" result="Success" success="True" time="0.048" asserts="5" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="When_Disposed_Removes_ScheduledJobs" executed="False" result="Ignored">
                                            <reason>
                                              <message><![CDATA[This class will be upgraded ASAP. Its not worth to test more with the current resources]]></message>
                                            </reason>
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.QueueDispatcherManagerTester.When_Disposed_Removes_ScheduledJobs(SqliteInMemory)" executed="False" result="Ignored">
                                                <reason>
                                                  <message><![CDATA[This class will be upgraded ASAP. Its not worth to test more with the current resources]]></message>
                                                </reason>
                                              </test-case>
                                            </results>
                                          </test-suite>
                                        </results>
                                      </test-suite>
                                      <test-suite type="TestFixture" name="ReceptionMessageDistributorTester" executed="True" result="Success" success="True" time="0.228" asserts="0">
                                        <results>
                                          <test-suite type="ParameterizedTest" name="Can_Distribute_Messages" executed="True" result="Success" success="True" time="0.127" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.Can_Distribute_Messages(SqliteInMemory)" executed="True" result="Success" success="True" time="0.127" asserts="5" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Enqueues_NonDeliveredMessages_OnStartUp" executed="True" result="Success" success="True" time="0.019" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.Enqueues_NonDeliveredMessages_OnStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="0.019" asserts="5" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="Removes_Source_Message_Once_Distributed" executed="False" result="Ignored">
                                            <reason>
                                              <message><![CDATA[Tehre are assertions in the other tests to probe this]]></message>
                                            </reason>
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.Removes_Source_Message_Once_Distributed(SqliteInMemory)" executed="False" result="Ignored">
                                                <reason>
                                                  <message><![CDATA[Tehre are assertions in the other tests to probe this]]></message>
                                                </reason>
                                              </test-case>
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="When_Subscribed_ToBase_Type_Will_DistributeIt_Correctly" executed="True" result="Success" success="True" time="0.034" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.When_Subscribed_ToBase_Type_Will_DistributeIt_Correctly(SqliteInMemory)" executed="True" result="Success" success="True" time="0.034" asserts="5" />
                                            </results>
                                          </test-suite>
                                          <test-suite type="ParameterizedTest" name="When_Subscribed_ToConcrete_Type_Will_DistributeIt_Correctly" executed="True" result="Success" success="True" time="0.025" asserts="0">
                                            <results>
                                              <test-case name="ermeX.Tests.Bus.Listening.Handlers.InternalMessageHandling.WorkflowHandlers.ReceptionMessageDistributorTester.When_Subscribed_ToConcrete_Type_Will_DistributeIt_Correctly(SqliteInMemory)" executed="True" result="Success" success="True" time="0.024" asserts="5" />
                                            </results>
                                          </test-suite>
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.1\workspace\FrameworkVersion\4.0\Platform\x86\v1.1\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x86\Release\ermeX.Tests.Bus.Publishing.dll" executed="True" result="Success" success="True" time="39.432" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="39.422" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="39.414" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Bus" executed="True" result="Success" success="True" time="39.404" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Publishing" executed="True" result="Success" success="True" time="39.397" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Dispatching" executed="True" result="Success" success="True" time="39.391" asserts="0">
                            <results>
                              <test-suite type="Namespace" name="Messages" executed="True" result="Success" success="True" time="39.388" asserts="0">
                                <results>
                                  <test-suite type="TestFixture" name="MessageCollectorTester" executed="True" result="Success" success="True" time="4.792" asserts="0">
                                    <results>
                                      <test-suite type="ParameterizedTest" name="CanDispatchMessage" executed="True" result="Success" success="True" time="4.257" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageCollectorTester.CanDispatchMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="4.253" asserts="5" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="ComponentStopsOnDisposal" executed="True" result="Success" success="True" time="0.011" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageCollectorTester.ComponentStopsOnDisposal(SqliteInMemory)" executed="True" result="Success" success="True" time="0.011" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="RemovesExpiredItems" executed="True" result="Success" success="True" time="0.290" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageCollectorTester.RemovesExpiredItems(SqliteInMemory)" executed="True" result="Success" success="True" time="0.289" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="SendsExistingItemsOnStart" executed="True" result="Success" success="True" time="0.013" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageCollectorTester.SendsExistingItemsOnStart(SqliteInMemory)" executed="True" result="Success" success="True" time="0.013" asserts="3" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="MessageDistributorTester" executed="True" result="Success" success="True" time="12.307" asserts="0">
                                    <results>
                                      <test-suite type="ParameterizedTest" name="CanDispatch_NotSentMessage" executed="True" result="Success" success="True" time="0.321" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageDistributorTester.CanDispatch_NotSentMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="0.321" asserts="12" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="DontDispatchSentMessage" executed="True" result="Success" success="True" time="11.969" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageDistributorTester.DontDispatchSentMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="11.968" asserts="4" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                  <test-suite type="TestFixture" name="MessageSubscriberDispatcherTester" executed="True" result="Success" success="True" time="22.285" asserts="0">
                                    <results>
                                      <test-suite type="ParameterizedTest" name="AfterSend_Items_MarksThemAsSent" executed="True" result="Success" success="True" time="0.177" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.AfterSend_Items_MarksThemAsSent(SqliteInMemory)" executed="True" result="Success" success="True" time="0.177" asserts="1" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="DontSend_Expired_Items" executed="True" result="Success" success="True" time="5.018" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.DontSend_Expired_Items(SqliteInMemory)" executed="True" result="Success" success="True" time="5.017" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="RestoresPending_MessagesFrom_PreviousSessions_OnStartUp" executed="True" result="Success" success="True" time="0.029" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.RestoresPending_MessagesFrom_PreviousSessions_OnStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="0.029" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="SendsEnqueued_Items" executed="True" result="Success" success="True" time="0.014" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.SendsEnqueued_Items(SqliteInMemory)" executed="True" result="Success" success="True" time="0.014" asserts="2" />
                                        </results>
                                      </test-suite>
                                      <test-suite type="ParameterizedTest" name="WhenSend_Fails_Increases_Tries_And_ReEnqueuesItem" executed="True" result="Success" success="True" time="17.017" asserts="0">
                                        <results>
                                          <test-case name="ermeX.Tests.Bus.Publishing.Dispatching.Messages.MessageSubscriberDispatcherTester.WhenSend_Fails_Increases_Tries_And_ReEnqueuesItem(SqliteInMemory)" executed="True" result="Success" success="True" time="17.017" asserts="3" />
                                        </results>
                                      </test-suite>
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.1\workspace\FrameworkVersion\4.0\Platform\x86\v1.1\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x86\Release\ermeX.Tests.Common.dll" executed="False" result="NotRunnable">
        <reason>
          <message><![CDATA[Has no TestFixtures]]></message>
        </reason>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.1\workspace\FrameworkVersion\4.0\Platform\x86\v1.1\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x86\Release\ermeX.Tests.DAL.Integration.dll" executed="True" result="Success" success="True" time="455.740" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="455.675" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="455.613" asserts="0">
                <results>
                  <test-suite type="Namespace" name="DAL" executed="True" result="Success" success="True" time="455.553" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Integration" executed="True" result="Success" success="True" time="455.488" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="DataSources" executed="True" result="Success" success="True" time="455.477" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="AppComponentDataSourceTester" executed="True" result="Success" success="True" time="58.290" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="7.479" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="5.152" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="1.503" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="0.819" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="2.661" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="0.786" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="0.840" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.032" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="5.999" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.759" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.356" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.880" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetByComponentId" executed="True" result="Success" success="True" time="4.763" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetByComponentId(SqlServer2008)" executed="True" result="Success" success="True" time="1.799" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetByComponentId(Sqlite)" executed="True" result="Success" success="True" time="1.393" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetByComponentId(SqliteInMemory)" executed="True" result="Success" success="True" time="1.566" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="3.544" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.791" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="1.043" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="0.708" asserts="3" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateExchanger" executed="True" result="Success" success="True" time="2.960" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateExchanger(SqlServer2008)" executed="True" result="Success" success="True" time="0.859" asserts="5" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateExchanger(Sqlite)" executed="True" result="Success" success="True" time="1.235" asserts="5" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateExchanger(SqliteInMemory)" executed="True" result="Success" success="True" time="0.863" asserts="5" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="4.833" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.166" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.087" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.577" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Doesnt_Update_When_Version_Is_Older_Than_Current" executed="True" result="Success" success="True" time="5.823" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqlServer2008)" executed="True" result="Success" success="True" time="1.560" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(Sqlite)" executed="True" result="Success" success="True" time="2.769" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqliteInMemory)" executed="True" result="Success" success="True" time="1.492" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="4.316" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.413" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="1.487" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.413" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="5.505" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="1.718" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="1.973" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.809" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="5.313" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.737" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="1.714" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.AppComponentDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.859" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ChunkedServiceRequestMessageDataSourceTester" executed="True" result="Success" success="True" time="50.017" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="8.035" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="3.749" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.779" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.504" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="5.682" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.567" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.111" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="2.001" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="5.160" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.618" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="1.741" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.799" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="5.227" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.786" asserts="7" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="1.928" asserts="7" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.511" asserts="7" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="5.481" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.437" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.052" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.989" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="5.229" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="2.073" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="1.751" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.403" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="4.929" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="1.810" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="1.486" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.630" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="5.721" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="2.346" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="1.836" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ChunkedServiceRequestMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.536" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ConnectivityDetailsDataSourceTester" executed="True" result="Success" success="True" time="58.743" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="8.206" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="3.961" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.402" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.839" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="6.298" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="2.051" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.576" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.667" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="5.680" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.641" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.051" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.986" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="5.234" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.865" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="1.653" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.714" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="5.864" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="2.014" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.194" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.654" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Doesnt_Update_When_Version_Is_Older_Than_Current" executed="True" result="Success" success="True" time="5.998" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqlServer2008)" executed="True" result="Success" success="True" time="1.602" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(Sqlite)" executed="True" result="Success" success="True" time="2.122" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqliteInMemory)" executed="True" result="Success" success="True" time="2.272" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="5.073" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.360" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.081" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.630" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="5.782" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="1.725" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.135" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.919" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="5.772" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.989" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.243" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ConnectivityDetailsDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.537" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="IncomingMessageDataSourceTester" executed="True" result="Success" success="True" time="53.878" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="8.991" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="4.660" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.513" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.815" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="5.733" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.723" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.443" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.565" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="6.047" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="2.003" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.471" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.571" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="5.505" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.737" asserts="8" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="2.120" asserts="8" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.646" asserts="8" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="5.756" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.478" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.141" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="2.134" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="6.748" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="2.326" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.464" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.955" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="5.284" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="1.661" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="1.959" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.661" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="5.630" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.882" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.163" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.583" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="IncomingMessageSuscriptionsSourceTester" executed="True" result="Success" success="True" time="57.459" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="8.487" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="4.457" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.488" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.539" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="5.973" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.898" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.697" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.376" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="8.695" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="2.172" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="3.019" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="3.501" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="6.303" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="2.126" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="2.587" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.586" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="6.376" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.913" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.387" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="2.073" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="5.951" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.896" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.084" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.969" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="5.238" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="2.010" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="1.547" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.678" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="5.682" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.737" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.086" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.IncomingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.856" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="OutgoingMessageDataSourceTester" executed="True" result="Success" success="True" time="52.809" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="8.231" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="4.516" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.230" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.482" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="6.401" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.881" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.536" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.981" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="5.665" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.782" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.046" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.834" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="5.115" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.611" asserts="7" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="1.877" asserts="7" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.625" asserts="7" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="5.213" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.911" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="1.618" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.680" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="5.569" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.789" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.213" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.564" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="5.576" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="2.489" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="1.745" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.338" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="5.961" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="1.918" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.236" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageDataSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.804" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="OutgoingMessageSuscriptionsSourceTester" executed="True" result="Success" success="True" time="61.906" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="8.314" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="3.978" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="2.694" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.640" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="6.597" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.627" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="3.101" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.862" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="5.961" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.616" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="2.327" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="2.015" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="5.791" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.761" asserts="5" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="2.063" asserts="5" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.965" asserts="5" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="6.276" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="1.756" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.741" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.777" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Doesnt_Update_When_Version_Is_Older_Than_Current" executed="True" result="Success" success="True" time="6.245" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqlServer2008)" executed="True" result="Success" success="True" time="1.842" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(Sqlite)" executed="True" result="Success" success="True" time="2.509" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqliteInMemory)" executed="True" result="Success" success="True" time="1.892" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="5.568" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.823" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.182" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.560" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="5.301" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="1.580" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.253" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.465" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="7.244" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="2.539" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.784" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.OutgoingMessageSuscriptionsSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.917" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="ServiceDetailsSourceTester" executed="True" result="Success" success="True" time="62.313" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanAddRecord" executed="True" result="Success" success="True" time="8.782" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanAddRecord(SqlServer2008)" executed="True" result="Success" success="True" time="3.903" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanAddRecord(Sqlite)" executed="True" result="Success" success="True" time="3.188" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanAddRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.685" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDelete" executed="True" result="Success" success="True" time="5.638" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDelete(SqlServer2008)" executed="True" result="Success" success="True" time="1.730" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDelete(Sqlite)" executed="True" result="Success" success="True" time="2.073" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDelete(SqliteInMemory)" executed="True" result="Success" success="True" time="1.829" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanDeleteByProperty" executed="True" result="Success" success="True" time="5.023" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDeleteByProperty(SqlServer2008)" executed="True" result="Success" success="True" time="1.766" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDeleteByProperty(Sqlite)" executed="True" result="Success" success="True" time="1.875" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanDeleteByProperty(SqliteInMemory)" executed="True" result="Success" success="True" time="1.379" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetById" executed="True" result="Success" success="True" time="4.842" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetById(SqlServer2008)" executed="True" result="Success" success="True" time="1.471" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetById(Sqlite)" executed="True" result="Success" success="True" time="1.993" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetById(SqliteInMemory)" executed="True" result="Success" success="True" time="1.375" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanGetByOperationId" executed="True" result="Success" success="True" time="5.253" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetByOperationId(SqlServer2008)" executed="True" result="Success" success="True" time="1.868" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetByOperationId(Sqlite)" executed="True" result="Success" success="True" time="1.634" asserts="6" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanGetByOperationId(SqliteInMemory)" executed="True" result="Success" success="True" time="1.748" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CantInsertRepeatedOperations" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[Decide if this test is still useful as it needs to be modified]]></message>
                                    </reason>
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CantInsertRepeatedOperations(SqlServer2008)" executed="False" result="Ignored">
                                        <reason>
                                          <message><![CDATA[Decide if this test is still useful as it needs to be modified]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CantInsertRepeatedOperations(Sqlite)" executed="False" result="Ignored">
                                        <reason>
                                          <message><![CDATA[Decide if this test is still useful as it needs to be modified]]></message>
                                        </reason>
                                      </test-case>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CantInsertRepeatedOperations(SqliteInMemory)" executed="False" result="Ignored">
                                        <reason>
                                          <message><![CDATA[Decide if this test is still useful as it needs to be modified]]></message>
                                        </reason>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanUpdateRecord" executed="True" result="Success" success="True" time="6.075" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanUpdateRecord(SqlServer2008)" executed="True" result="Success" success="True" time="2.019" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanUpdateRecord(Sqlite)" executed="True" result="Success" success="True" time="2.480" asserts="1" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.CanUpdateRecord(SqliteInMemory)" executed="True" result="Success" success="True" time="1.574" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Doesnt_Update_When_Version_Is_Older_Than_Current" executed="True" result="Success" success="True" time="5.155" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqlServer2008)" executed="True" result="Success" success="True" time="1.603" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(Sqlite)" executed="True" result="Success" success="True" time="2.037" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Doesnt_Update_When_Version_Is_Older_Than_Current(SqliteInMemory)" executed="True" result="Success" success="True" time="1.512" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="DontChange_Version_When_IsFromOtherComponent" executed="True" result="Success" success="True" time="5.709" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqlServer2008)" executed="True" result="Success" success="True" time="1.936" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.DontChange_Version_When_IsFromOtherComponent(Sqlite)" executed="True" result="Success" success="True" time="2.091" asserts="2" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.DontChange_Version_When_IsFromOtherComponent(SqliteInMemory)" executed="True" result="Success" success="True" time="1.679" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="SetsVersion_When_New" executed="True" result="Success" success="True" time="5.295" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.SetsVersion_When_New(SqlServer2008)" executed="True" result="Success" success="True" time="1.461" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.SetsVersion_When_New(Sqlite)" executed="True" result="Success" success="True" time="2.019" asserts="4" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.SetsVersion_When_New(SqliteInMemory)" executed="True" result="Success" success="True" time="1.812" asserts="4" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Updates_Version_When_Existing_With_Local" executed="True" result="Success" success="True" time="5.667" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Updates_Version_When_Existing_With_Local(SqlServer2008)" executed="True" result="Success" success="True" time="2.049" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Updates_Version_When_Existing_With_Local(Sqlite)" executed="True" result="Success" success="True" time="2.049" asserts="3" />
                                      <test-case name="ermeX.Tests.DAL.Integration.DataSources.ServiceDetailsSourceTester.Updates_Version_When_Existing_With_Local(SqliteInMemory)" executed="True" result="Success" success="True" time="1.566" asserts="3" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.1\workspace\FrameworkVersion\4.0\Platform\x86\v1.1\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x86\Release\ermeX.Tests.dll" executed="True" result="Success" success="True" time="583.555" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="583.416" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="583.397" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Acceptance" executed="True" result="Success" success="True" time="471.345" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="HandshakeTester" executed="True" result="Success" success="True" time="47.122" asserts="0">
                        <results>
                          <test-suite type="ParameterizedTest" name="SeveralComponents_Using_SameFriend_CanStart_AtSameTime" executed="True" result="Success" success="True" time="46.355" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.HandshakeTester.SeveralComponents_Using_SameFriend_CanStart_AtSameTime(SqliteInMemory)" executed="True" result="Success" success="True" time="46.352" asserts="852" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="MessagingAcceptanceTester" executed="True" result="Success" success="True" time="309.790" asserts="0">
                        <results>
                          <test-suite type="ParameterizedTest" name="CanSubscribeBeforeStartUp" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.CanSubscribeBeforeStartUp(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Components_CanPublish_Any_Message" executed="True" result="Success" success="True" time="7.679" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.Components_CanPublish_Any_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="7.678" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="FiveComponentsCanReceiveMessagesAfterBeingOffLine" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.FiveComponentsCanReceiveMessagesAfterBeingOffLine(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="MessagesAreDeliveredFIFO" executed="True" result="Success" success="True" time="18.634" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.MessagesAreDeliveredFIFO(SqliteInMemory)" executed="True" result="Success" success="True" time="18.632" asserts="11" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="MessagesAreDeliveredFIFO_SeveralComponents" executed="True" result="Success" success="True" time="25.455" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.MessagesAreDeliveredFIFO_SeveralComponents(SqliteInMemory)" executed="True" result="Success" success="True" time="25.454" asserts="27" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="OneComponentCanSubscribeToItsOwnMessages" executed="True" result="Success" success="True" time="7.538" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.OneComponentCanSubscribeToItsOwnMessages(SqliteInMemory)" executed="True" result="Success" success="True" time="7.537" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SendMessageAndReception" executed="True" result="Success" success="True" time="17.267" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SendMessageAndReception(SqliteInMemory)" executed="True" result="Success" success="True" time="17.266" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Several_Components_SuscriptorsOnlyReceives_Its_Own_Suscriptions" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.Several_Components_SuscriptorsOnlyReceives_Its_Own_Suscriptions(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO: FIX OR DEVELOP]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SeveralComponentsCanExchangeMessages" executed="True" result="Success" success="True" time="25.621" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SeveralComponentsCanExchangeMessages(SqliteInMemory)" executed="True" result="Success" success="True" time="25.621" asserts="9" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SeveralReceiversSendMessageAndReception" executed="True" result="Success" success="True" time="47.721" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SeveralReceiversSendMessageAndReception(SqliteInMemory)" executed="True" result="Success" success="True" time="47.721" asserts="17" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SuscriptorCanReceiveMessagesAfterBeing_Disconnected" executed="True" result="Success" success="True" time="18.542" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SuscriptorCanReceiveMessagesAfterBeing_Disconnected(SqliteInMemory)" executed="True" result="Success" success="True" time="18.541" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SuscriptorCanReceiveMessagesAfterBeing_Disconnected_And_Add_Subscriptions" executed="True" result="Success" success="True" time="53.455" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SuscriptorCanReceiveMessagesAfterBeing_Disconnected_And_Add_Subscriptions(SqliteInMemory)" executed="True" result="Success" success="True" time="53.455" asserts="9" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SuscriptorCanReceiveMessagesAfterBeingOffline" executed="True" result="Success" success="True" time="17.360" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.SuscriptorCanReceiveMessagesAfterBeingOffline(SqliteInMemory)" executed="True" result="Success" success="True" time="17.359" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoComponentsCanExchangeMessages" executed="True" result="Success" success="True" time="18.001" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.TwoComponentsCanExchangeMessages(SqliteInMemory)" executed="True" result="Success" success="True" time="18.001" asserts="9" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoComponentsCanReceiveMessagesAfterBeingOffLine" executed="True" result="Success" success="True" time="34.911" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.TwoComponentsCanReceiveMessagesAfterBeingOffLine(SqliteInMemory)" executed="True" result="Success" success="True" time="34.910" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoSuscriptions_Of_The_SameHandler_Are_HandledBy_TheSame_ObjectHandler" executed="True" result="Success" success="True" time="17.515" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.MessagingAcceptanceTester.TwoSuscriptions_Of_The_SameHandler_Are_HandledBy_TheSame_ObjectHandler(SqliteInMemory)" executed="True" result="Success" success="True" time="17.514" asserts="5" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="ServicesAcceptanceTester" executed="True" result="Success" success="True" time="114.396" asserts="0">
                        <results>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_ArrayParamsMethod_Returns" executed="True" result="Success" success="True" time="4.706" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_ArrayParamsMethod_Returns(SqliteInMemory)" executed="True" result="Success" success="True" time="4.705" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_EmptyMethod" executed="True" result="Success" success="True" time="0.468" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_EmptyMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.468" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_EmptyMethod_ReturnValue" executed="True" result="Success" success="True" time="0.492" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_EmptyMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="0.491" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_OneParamMethod" executed="True" result="Success" success="True" time="0.728" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_OneParamMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.728" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_OneParamMethod_ReturnValue" executed="True" result="Success" success="True" time="0.651" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_OneParamMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="0.650" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_ReturnsArray" executed="True" result="Success" success="True" time="0.598" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_ReturnsArray(SqliteInMemory)" executed="True" result="Success" success="True" time="0.597" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_SeveralParamsMethod" executed="True" result="Success" success="True" time="0.586" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_SeveralParamsMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.585" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_LocalCustomService_SeveralParamsMethod_ReturnValue" executed="True" result="Success" success="True" time="0.581" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_LocalCustomService_SeveralParamsMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="0.580" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_ArrayParamsMethod_Returns" executed="True" result="Success" success="True" time="8.031" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_ArrayParamsMethod_Returns(SqliteInMemory)" executed="True" result="Success" success="True" time="8.030" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_EmptyMethod" executed="True" result="Success" success="True" time="8.015" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_EmptyMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="8.014" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_EmptyMethod_ReturnValue" executed="True" result="Success" success="True" time="8.106" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_EmptyMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="8.106" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_OneParamMethod" executed="True" result="Success" success="True" time="8.204" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_OneParamMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="8.204" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_OneParamMethod_ReturnValue" executed="True" result="Success" success="True" time="8.058" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_OneParamMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="8.058" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_ReturnsArray" executed="True" result="Success" success="True" time="7.393" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_ReturnsArray(SqliteInMemory)" executed="True" result="Success" success="True" time="7.393" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_SeveralParamsMethod" executed="True" result="Success" success="True" time="7.288" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_SeveralParamsMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="7.288" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="CanInvoke_RemoteCustomService_SeveralParamsMethod_ReturnValue" executed="True" result="Success" success="True" time="7.317" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.CanInvoke_RemoteCustomService_SeveralParamsMethod_ReturnValue(SqliteInMemory)" executed="True" result="Success" success="True" time="7.316" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Components_CanPublish_Several_Services" executed="True" result="Success" success="True" time="17.887" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.Components_CanPublish_Several_Services(SqliteInMemory)" executed="True" result="Success" success="True" time="17.887" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="SeveralComponents_Can_Serve_Same_Service_NoReturnValues" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[FIX]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.SeveralComponents_Can_Serve_Same_Service_NoReturnValues(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[FIX]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoComponents_CannotRegister_TheSameService_IfReturnValues" executed="True" result="Success" success="True" time="7.546" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.TwoComponents_CannotRegister_TheSameService_IfReturnValues(SqliteInMemory)" executed="True" result="Success" success="True" time="7.545" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="TwoComponents_CanRegister_TheSameService_If_Dont_ReturnValues" executed="True" result="Success" success="True" time="7.924" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.TwoComponents_CanRegister_TheSameService_If_Dont_ReturnValues(SqliteInMemory)" executed="True" result="Success" success="True" time="7.924" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="When_CannotInvoke_ThrowsException" executed="True" result="Success" success="True" time="8.925" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.When_CannotInvoke_ThrowsException(SqliteInMemory)" executed="True" result="Success" success="True" time="8.924" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="When_Service_NotDefined_Returns_Null" executed="True" result="Success" success="True" time="0.834" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Acceptance.ServicesAcceptanceTester.When_Service_NotDefined_Returns_Null(SqliteInMemory)" executed="True" result="Success" success="True" time="0.833" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Common" executed="True" result="Success" success="True" time="23.247" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Serialization" executed="True" result="Success" success="True" time="23.242" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="JsonSerializerTests" executed="True" result="Success" success="True" time="2.063" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Common.Serialization.JsonSerializerTests.CanSerializeAndDeserialize_ClassWithInnerClass_Json" executed="True" result="Success" success="True" time="0.023" asserts="2" />
                              <test-case name="ermeX.Tests.Common.Serialization.JsonSerializerTests.CanSerializeAndDeserialize_Json" executed="True" result="Success" success="True" time="2.039" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="ObjectSerializerTests" executed="True" result="Success" success="True" time="17.154" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Common.Serialization.ObjectSerializerTests.CanSerializeAndDeserialize_ByteArray" executed="True" result="Success" success="True" time="0.077" asserts="1" />
                              <test-case name="ermeX.Tests.Common.Serialization.ObjectSerializerTests.CanSerializeAndDeserialize_ToFile" executed="True" result="Success" success="True" time="0.184" asserts="1" />
                              <test-case name="ermeX.Tests.Common.Serialization.ObjectSerializerTests.FromMarcGravell_Serialize_Deserialize_1M" executed="True" result="Success" success="True" time="16.890" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="TestApplicationSerializableMessages" executed="True" result="Success" success="True" time="4.018" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_BizMessage_and_Modify_TheProtobufContract" executed="True" result="Success" success="True" time="0.109" asserts="0" />
                              <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ChunckedServiceRequest_ToFile" executed="True" result="Success" success="True" time="0.021" asserts="1" />
                              <test-suite type="ParameterizedTest" name="CanSerializeAndDeserialize_LayerMessage_ToFile" executed="True" result="Success" success="True" time="0.722" asserts="0">
                                <results>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_LayerMessage_ToFile(Biz)" executed="True" result="Success" success="True" time="0.196" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_LayerMessage_ToFile(Bus)" executed="True" result="Success" success="True" time="0.316" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_LayerMessage_ToFile(Transport)" executed="True" result="Success" success="True" time="0.208" asserts="2" />
                                </results>
                              </test-suite>
                              <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_ToFile" executed="True" result="Success" success="True" time="0.152" asserts="2" />
                              <test-suite type="ParameterizedTest" name="CanSerializeAndDeserialize_ServiceRequest_WithCollection" executed="True" result="Success" success="True" time="2.784" asserts="0">
                                <results>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(1)" executed="True" result="Success" success="True" time="0.011" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(2)" executed="True" result="Success" success="True" time="0.016" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(40)" executed="True" result="Success" success="True" time="0.270" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(100)" executed="True" result="Success" success="True" time="0.729" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(200)" executed="True" result="Success" success="True" time="1.711" asserts="2" />
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(500)" executed="True" result="Inconclusive" success="False" time="0.030" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(1000)" executed="True" result="Inconclusive" success="False" time="0.001" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(5000)" executed="True" result="Inconclusive" success="False" time="0.001" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(10000)" executed="True" result="Inconclusive" success="False" time="0.001" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(50000)" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceRequest_WithCollection(500000)" executed="True" result="Inconclusive" success="False" time="0.001" asserts="0">
                                    <reason>
                                      <message><![CDATA[protobuf to support this or workaround boxing valuetypes]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-case name="ermeX.Tests.Common.Serialization.TestApplicationSerializableMessages.CanSerializeAndDeserialize_ServiceResult_ToFile" executed="True" result="Success" success="True" time="0.218" asserts="3" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Dialogs" executed="True" result="Success" success="True" time="17.468" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="HandshakingTester" executed="True" result="Success" success="True" time="17.441" asserts="0">
                        <results>
                          <test-case name="ermeX.Tests.Dialogs.HandshakingTester.Caller_Waits_MyComponents_Message_response_With_TimeOut" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.HandshakingTester.Component_Wont_Handle_Events_Raised_Before_StartUp_Is_Finished" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-suite type="ParameterizedTest" name="Sends_JoinRequestMessage_OnStartUp" executed="True" result="Success" success="True" time="4.200" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.Sends_JoinRequestMessage_OnStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="4.200" asserts="5" />
                            </results>
                          </test-suite>
                          <test-case name="ermeX.Tests.Dialogs.HandshakingTester.When_Joined_Updates_Local_Message_Definitions" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.HandshakingTester.When_Joined_Updates_Local_NonSystem_Service_Definitions" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-suite type="ParameterizedTest" name="WhenReceived_JoinRequestMessage_Sends_MyComponentsMessage_To_The_Caller" executed="True" result="Success" success="True" time="1.779" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.WhenReceived_JoinRequestMessage_Sends_MyComponentsMessage_To_The_Caller(SqliteInMemory)" executed="True" result="Success" success="True" time="1.779" asserts="10" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="WhenRequest_JoinRequestMessage_Does_Not_SendJoinRequestMesage_Twice_To_SameComponent" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.WhenRequest_JoinRequestMessage_Does_Not_SendJoinRequestMesage_Twice_To_SameComponent(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="WhenRequest_JoinRequestMessage_SendsJoinRequestMesage_To_ReceivedComponents" executed="True" result="Success" success="True" time="7.372" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.WhenRequest_JoinRequestMessage_SendsJoinRequestMesage_To_ReceivedComponents(SqliteInMemory)" executed="True" result="Success" success="True" time="7.371" asserts="18" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="WhenRequest_JoinRequestMessage_UpdatesRequesterComponents" executed="True" result="Success" success="True" time="4.060" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Dialogs.HandshakingTester.WhenRequest_JoinRequestMessage_UpdatesRequesterComponents(SqliteInMemory)" executed="True" result="Success" success="True" time="4.059" asserts="6" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="MessageSuscriptionsDialogTester" executed="True" result="Inconclusive" success="False" time="0.007" asserts="0">
                        <results>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.Doesnt_Suscribe_To_Its_Own_System_Messages" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.Sends_UpdateSuscription_When_A_LocalSuscriptionHasChanged" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.Sends_UpdateSuscription_When_A_LocalSuscriptionIsCreated" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.When_Received_MySubscriptions_UpdatesRemovesOrAddLocalDefinitions_And_Updates_Subscribed_MessagesInOutgoingQueues" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MessageSuscriptionsDialogTester.When_Received_UpdateSuscription_UpdatesLocalDefinition" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="MyComponentsDialogTester" executed="False" result="Ignored">
                        <reason>
                          <message><![CDATA[It might not be necessary]]></message>
                        </reason>
                        <results>
                          <test-case name="ermeX.Tests.Dialogs.MyComponentsDialogTester.When_Received_MyComponents_Updates_LocalDefinitions" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[It might not be necessary]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.MyComponentsDialogTester.When_Requested_MyComponents_SendsResponse_With_All_Components" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[It might not be necessary]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="PublishedServiceDialogTester" executed="True" result="Inconclusive" success="False" time="0.006" asserts="0">
                        <results>
                          <test-case name="ermeX.Tests.Dialogs.PublishedServiceDialogTester.Sends_UpdateService_When_A_LocalServicePublished_HasChanged" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.PublishedServiceDialogTester.Sends_UpdateService_When_A_LocalServicePublished_IsCreated" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.PublishedServiceDialogTester.When_Received_MyServices_UpdatesRemovesOrAddLocalDefinitions_And_UpdatesMessagesInOutgoingQueues" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                          <test-case name="ermeX.Tests.Dialogs.PublishedServiceDialogTester.When_Received_UpdateService_UpdatesLocalDefinition" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Services" executed="True" result="Success" success="True" time="35.239" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Builtin" executed="True" result="Success" success="True" time="35.131" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="SuperSockets" executed="True" result="Success" success="True" time="35.127" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="SuperSocketClientTester" executed="True" result="Success" success="True" time="7.692" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="Can_Send_Chunked_Message" description="Tests to send a big file" executed="True" result="Success" success="True" time="1.697" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Chunked_Message(5)" executed="True" result="Success" success="True" time="1.697" asserts="7" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="Can_Send_Huge_Not_Chunked_Message" description="Tests to send a big file" executed="True" result="Success" success="True" time="3.101" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Huge_Not_Chunked_Message(1)" executed="True" result="Success" success="True" time="0.422" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Huge_Not_Chunked_Message(5)" executed="True" result="Success" success="True" time="1.113" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Huge_Not_Chunked_Message(10)" executed="True" result="Success" success="True" time="1.562" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.Can_Send_Huge_Not_Chunked_Message(15)" executed="True" result="Inconclusive" success="False" time="0.001" asserts="0">
                                        <reason>
                                          <message><![CDATA[TODO]]></message>
                                        </reason>
                                      </test-case>
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanSendMessageWithLongResponse" executed="True" result="Success" success="True" time="1.037" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.CanSendMessageWithLongResponse(10)" executed="True" result="Success" success="True" time="0.362" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.CanSendMessageWithLongResponse(50)" executed="True" result="Success" success="True" time="0.335" asserts="7" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.CanSendMessageWithLongResponse(100)" executed="True" result="Success" success="True" time="0.337" asserts="7" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="ClientChoosesMostSuitableIpForSendingMessage" executed="True" result="Success" success="True" time="0.706" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ClientChoosesMostSuitableIpForSendingMessage(True)" executed="True" result="Success" success="True" time="0.355" asserts="6" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ClientChoosesMostSuitableIpForSendingMessage(False)" executed="True" result="Success" success="True" time="0.349" asserts="6" />
                                    </results>
                                  </test-suite>
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.CanSendMessage" executed="True" result="Success" success="True" time="0.332" asserts="7" />
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.CanSendMessageToLocalMachine" executed="True" result="Success" success="True" time="0.479" asserts="7" />
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.CantSendToWrongIp" executed="True" result="Success" success="True" time="0.322" asserts="1" />
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.Client_Reports_When_Server_Failed_Handling" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.Client_Reports_When_Server_Handle_Success" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.Client_Reports_WhenServerCannotBeReached" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketClientTester.ServiceClientTesterBase.Client_Reports_WhenTimeout" executed="False" result="Ignored">
                                    <reason>
                                      <message><![CDATA[]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-suite type="TestFixture" name="SuperSocketServerTester" executed="True" result="Success" success="True" time="27.427" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanReceiveChunkedMessage" executed="True" result="Success" success="True" time="0.416" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.CanReceiveChunkedMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="0.415" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanReceiveMessage" executed="True" result="Success" success="True" time="0.343" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.CanReceiveMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="0.342" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanReceiveMessageCollection" executed="True" result="Success" success="True" time="0.346" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.CanReceiveMessageCollection(SqliteInMemory)" executed="True" result="Success" success="True" time="0.346" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="CanReceiveSeveralMessages" executed="True" result="Success" success="True" time="3.035" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.CanReceiveSeveralMessages(SqliteInMemory)" executed="True" result="Success" success="True" time="3.034" asserts="1167" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenService_DoesntExistsInDb_ReturnsError" executed="True" result="Success" success="True" time="21.694" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.WhenService_DoesntExistsInDb_ReturnsError(SqliteInMemory,True)" executed="True" result="Success" success="True" time="10.866" asserts="2" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.WhenService_DoesntExistsInDb_ReturnsError(SqliteInMemory,False)" executed="True" result="Success" success="True" time="10.828" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenService_Is_RegisteredCallsHandler_Obj" executed="True" result="Success" success="True" time="1.549" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.WhenService_Is_RegisteredCallsHandler_Obj(SqliteInMemory,True)" executed="True" result="Success" success="True" time="0.746" asserts="5" />
                                      <test-case name="ermeX.Tests.Services.Builtin.SuperSockets.SuperSocketServerTester.WhenService_Is_RegisteredCallsHandler_Obj(SqliteInMemory,False)" executed="True" result="Success" success="True" time="0.802" asserts="5" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Sending" executed="True" result="Success" success="True" time="0.085" asserts="0">
                        <results>
                          <test-suite type="Namespace" name="Client" executed="True" result="Success" success="True" time="0.081" asserts="0">
                            <results>
                              <test-suite type="TestFixture" name="ServiceProxyTester" executed="True" result="Success" success="True" time="0.081" asserts="0">
                                <results>
                                  <test-suite type="ParameterizedTest" name="CanInvokeSend" executed="True" result="Success" success="True" time="0.017" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.CanInvokeSend(SqliteInMemory)" executed="True" result="Success" success="True" time="0.017" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenAllEndPointsFailed__ServiceResultError" executed="True" result="Success" success="True" time="0.005" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenAllEndPointsFailed__ServiceResultError(SqliteInMemory)" executed="True" result="Success" success="True" time="0.005" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenAllEndPointsFailed_CanBeReInvoked" executed="True" result="Success" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenAllEndPointsFailed_CanBeReInvoked(SqliteInMemory)" executed="True" result="Success" success="True" time="0.015" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenEndpointFailedTry_WithAllTheRestOfEndpoints" executed="True" result="Success" success="True" time="0.007" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenEndpointFailedTry_WithAllTheRestOfEndpoints(SqliteInMemory)" executed="True" result="Success" success="True" time="0.007" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenEndpointRaisesExceptionTry_WithAllTheRestOfEndpoints" executed="True" result="Success" success="True" time="0.006" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenEndpointRaisesExceptionTry_WithAllTheRestOfEndpoints(SqliteInMemory)" executed="True" result="Success" success="True" time="0.006" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite type="ParameterizedTest" name="WhenThereAreNotEndpointsItReturns_ServiceResultError" executed="True" result="Success" success="True" time="0.007" asserts="0">
                                    <results>
                                      <test-case name="ermeX.Tests.Services.Sending.Client.ServiceProxyTester.WhenThereAreNotEndpointsItReturns_ServiceResultError(SqliteInMemory)" executed="True" result="Success" success="True" time="0.007" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="VersionUpgrade" executed="True" result="Success" success="True" time="6.601" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="VersionUpgradeHelperTests" executed="True" result="Success" success="True" time="6.601" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_RunUpgrades" executed="True" result="Success" success="True" time="4.277" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.Can_RunUpgrades(SqlServer2008)" executed="True" result="Success" success="True" time="0.955" asserts="1" />
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.Can_RunUpgrades(Sqlite)" executed="True" result="Success" success="True" time="2.392" asserts="1" />
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.Can_RunUpgrades(SqliteInMemory)" executed="True" result="Success" success="True" time="0.927" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="RunUpgrades_On_StartUp" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.RunUpgrades_On_StartUp(SqlServer2008)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.RunUpgrades_On_StartUp(Sqlite)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                              <test-case name="ermeX.Tests.VersionUpgrade.VersionUpgradeHelperTests.RunUpgrades_On_StartUp(SqliteInMemory)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="WorldGateTests" executed="True" result="Success" success="True" time="29.402" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="DiscoveringMessagesTests" executed="True" result="Success" success="True" time="2.942" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_Late_Subscribe_To_Messages_When_Handler_In_Other_Assemblies" executed="True" result="Success" success="True" time="0.619" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Late_Subscribe_To_Messages_When_Handler_In_Other_Assemblies(SqliteInMemory)" executed="True" result="Success" success="True" time="0.619" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Subscribe_To_Messages_In_Assembly" executed="True" result="Success" success="True" time="0.557" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Subscribe_To_Messages_In_Assembly(SqliteInMemory)" executed="True" result="Success" success="True" time="0.557" asserts="7" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Subscribe_To_Messages_In_Assembly_When_HandlerHasNonHandlerInterfaces" executed="True" result="Success" success="True" time="0.558" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Subscribe_To_Messages_In_Assembly_When_HandlerHasNonHandlerInterfaces(SqliteInMemory)" executed="True" result="Success" success="True" time="0.558" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Subscribe_To_Messages_In_Assembly_When_HandlerHasSeveralInterfaces" executed="True" result="Success" success="True" time="0.577" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Subscribe_To_Messages_In_Assembly_When_HandlerHasSeveralInterfaces(SqliteInMemory)" executed="True" result="Success" success="True" time="0.577" asserts="6" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Subscribe_To_Messages_In_Assembly_WithoutExcludingTypes" executed="True" result="Success" success="True" time="0.607" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringMessagesTests.Can_Subscribe_To_Messages_In_Assembly_WithoutExcludingTypes(SqliteInMemory)" executed="True" result="Success" success="True" time="0.607" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="DiscoveringServicesTests" executed="True" result="Success" success="True" time="1.191" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_Late_Register_Services_In_Other_Assemblies" executed="True" result="Success" success="True" time="0.621" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringServicesTests.Can_Late_Register_Services_In_Other_Assemblies(SqliteInMemory)" executed="True" result="Success" success="True" time="0.620" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Services_In_Assemblies" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringServicesTests.Can_Register_Services_In_Assemblies(SqlServer2008)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Services_In_Assembly" executed="True" result="Success" success="True" time="0.546" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringServicesTests.Can_Register_Services_In_Assembly(SqliteInMemory)" executed="True" result="Success" success="True" time="0.546" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Doesnt_Register_Services_In_Other_Assemblies" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[TODO]]></message>
                            </reason>
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.DiscoveringServicesTests.Doesnt_Register_Services_In_Other_Assemblies(SqlServer2008)" executed="False" result="Ignored">
                                <reason>
                                  <message><![CDATA[TODO]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RegisteringMessagesTests" executed="True" result="Success" success="True" time="4.123" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_Register_Message_Suscription_To_Object" executed="True" result="Success" success="True" time="0.642" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_Register_Message_Suscription_To_Object(SqliteInMemory)" executed="True" result="Success" success="True" time="0.642" asserts="8" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Message_Suscription_To_SeveralTypes" executed="True" result="Success" success="True" time="0.677" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_Register_Message_Suscription_To_SeveralTypes(SqliteInMemory)" executed="True" result="Success" success="True" time="0.677" asserts="17" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Message_Suscription_To_Type" executed="True" result="Success" success="True" time="0.621" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_Register_Message_Suscription_To_Type(SqliteInMemory)" executed="True" result="Success" success="True" time="0.621" asserts="8" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Several_Message_Suscriptions_To_SameType" executed="True" result="Success" success="True" time="0.699" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_Register_Several_Message_Suscriptions_To_SameType(SqliteInMemory)" executed="True" result="Success" success="True" time="0.698" asserts="21" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_RegisterSuscription" executed="True" result="Success" success="True" time="0.713" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Can_RegisterSuscription(SqliteInMemory)" executed="True" result="Success" success="True" time="0.713" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Cant_Register_Message_Suscription_To_WrongType" executed="True" result="Success" success="True" time="0.749" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringMessagesTests.Cant_Register_Message_Suscription_To_WrongType(SqliteInMemory)" executed="True" result="Success" success="True" time="0.748" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="RegisteringServicesTests" executed="True" result="Success" success="True" time="3.605" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_Register_Biz_Service_When_Published_ByAnother_Component_and_Dont_ReturnValues" executed="True" result="Success" success="True" time="0.800" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Can_Register_Biz_Service_When_Published_ByAnother_Component_and_Dont_ReturnValues(SqliteInMemory)" executed="True" result="Success" success="True" time="0.799" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_Service" executed="True" result="Success" success="True" time="0.624" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Can_Register_Service(SqliteInMemory)" executed="True" result="Success" success="True" time="0.623" asserts="31" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Register_System_Service_When_Published_ByAnother_Component" executed="True" result="Success" success="True" time="0.482" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Can_Register_System_Service_When_Published_ByAnother_Component(SqliteInMemory)" executed="True" result="Success" success="True" time="0.480" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Update_Service_Registration_When_Published_ByLocal_Component" executed="True" result="Success" success="True" time="1.167" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Can_Update_Service_Registration_When_Published_ByLocal_Component(SqliteInMemory)" executed="True" result="Success" success="True" time="1.167" asserts="62" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Cant_Register_Biz_Service_When_Published_ByAnother_Component_and_ReturnValues" executed="True" result="Success" success="True" time="0.508" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.RegisteringServicesTests.Cant_Register_Biz_Service_When_Published_ByAnother_Component_and_ReturnValues(SqliteInMemory)" executed="True" result="Success" success="True" time="0.507" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="SystemDialogInfrastructureTests" executed="True" result="Success" success="True" time="0.610" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="RegistersSystemSuscriptionsStartUp" executed="True" result="Success" success="True" time="0.593" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.SystemDialogInfrastructureTests.RegistersSystemSuscriptionsStartUp(SqliteInMemory)" executed="True" result="Success" success="True" time="0.592" asserts="9" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="UsingMessagesClientTests" executed="True" result="Success" success="True" time="9.838" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="BaseTypeHandler_And_ConcreteHandlerType_Receives_Inherited_Message" executed="True" result="Success" success="True" time="3.651" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.BaseTypeHandler_And_ConcreteHandlerType_Receives_Inherited_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="3.650" asserts="6" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="BaseTypeHandler_Receives_Inherited_Message" executed="True" result="Success" success="True" time="1.672" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.BaseTypeHandler_Receives_Inherited_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="1.672" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Receive_PublishedMessage" executed="True" result="Success" success="True" time="1.294" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.Can_Receive_PublishedMessage(SqliteInMemory)" executed="True" result="Success" success="True" time="1.294" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_Receive_Several_Messages" executed="True" result="Success" success="True" time="1.548" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.Can_Receive_Several_Messages(SqliteInMemory)" executed="True" result="Success" success="True" time="1.547" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="InterfaceTypeHandler_And_ConcreteHandlerType_Receives_Inherited_Message" executed="True" result="Success" success="True" time="1.663" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingMessagesClientTests.InterfaceTypeHandler_And_ConcreteHandlerType_Receives_Inherited_Message(SqliteInMemory)" executed="True" result="Success" success="True" time="1.662" asserts="6" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="UsingServicesClientTests" executed="True" result="Success" success="True" time="7.070" asserts="0">
                        <categories>
                          <category name="Core:FunctionalTest" />
                        </categories>
                        <results>
                          <test-suite type="ParameterizedTest" name="Can_GetServiceProxy" executed="True" result="Success" success="True" time="0.680" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_GetServiceProxy(SqliteInMemory)" executed="True" result="Success" success="True" time="0.680" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_CustomValueType_ParameterMethod" executed="True" result="Success" success="True" time="0.808" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_CustomValueType_ParameterMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.807" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_EnumType_ParameterMethod" executed="True" result="Success" success="True" time="0.736" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_EnumType_ParameterMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.735" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_OneParameterMethod" executed="True" result="Success" success="True" time="0.790" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_OneParameterMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.789" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_ReturnMethodOneParam" executed="True" result="Success" success="True" time="0.840" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_ReturnMethodOneParam(SqliteInMemory)" executed="True" result="Success" success="True" time="0.839" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_Several_ValueTypes_ParametersMethod" executed="True" result="Success" success="True" time="0.661" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_Several_ValueTypes_ParametersMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.660" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxy_SeveralParametersMethod" executed="True" result="Success" success="True" time="0.820" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxy_SeveralParametersMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.820" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxyEmptyMethod" executed="True" result="Success" success="True" time="0.862" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxyEmptyMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.861" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Can_InvokeProxyReturnMethod" executed="True" result="Success" success="True" time="0.832" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.WorldGateTests.UsingServicesClientTests.Can_InvokeProxyReturnMethod(SqliteInMemory)" executed="True" result="Success" success="True" time="0.830" asserts="3" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.1\workspace\FrameworkVersion\4.0\Platform\x86\v1.1\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x86\Release\ermeX.Tests.NonMerged.dll" executed="True" result="Success" success="True" time="0.246" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="0.242" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="0.239" asserts="0">
                <results>
                  <test-suite type="Namespace" name="NonMerged" executed="True" result="Success" success="True" time="0.237" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="ResolveUnmergedTests" executed="True" result="Success" success="True" time="0.235" asserts="0">
                        <results>
                          <test-suite type="ParameterizedTest" name="CanResolveAssembly" executed="True" result="Success" success="True" time="0.134" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.NonMerged.ResolveUnmergedTests.CanResolveAssembly(&quot;Ninject&quot;)" executed="True" result="Success" success="True" time="0.058" asserts="1" />
                              <test-case name="ermeX.Tests.NonMerged.ResolveUnmergedTests.CanResolveAssembly(&quot;System.Data.SQLite&quot;)" executed="True" result="Success" success="True" time="0.070" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.1\workspace\FrameworkVersion\4.0\Platform\x86\v1.1\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x86\Release\ermeX.Tests.SupportTypes.dll" executed="False" result="NotRunnable">
        <reason>
          <message><![CDATA[Has no TestFixtures]]></message>
        </reason>
      </test-suite>
      <test-suite type="Assembly" name="D:\JENKINS\jobs\ermeXv1.1\workspace\FrameworkVersion\4.0\Platform\x86\v1.1\Build\ScriptsBuild\..\BuildArtifacts\Binaries\4.0\x86\Release\ermeX.Tests.Threading.dll" executed="True" result="Success" success="True" time="98.521" asserts="0">
        <results>
          <test-suite type="Namespace" name="ermeX" executed="True" result="Success" success="True" time="98.518" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="98.517" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Threading" executed="True" result="Success" success="True" time="98.512" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Queues" executed="True" result="Success" success="True" time="24.052" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="TestProducerParallelConsumerPriorityQueue" executed="True" result="Success" success="True" time="8.271" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerParallelConsumerPriorityQueue.SortsByPriority" executed="True" result="Success" success="True" time="6.100" asserts="5" />
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerParallelConsumerPriorityQueue.TestProducerConsumerQueueBase.CanEnqueueDequeue" executed="True" result="Success" success="True" time="2.030" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="TestProducerParallelConsumerQueue" executed="True" result="Success" success="True" time="8.203" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerParallelConsumerQueue.Create_Threads_on_Demand" executed="True" result="Success" success="True" time="6.202" asserts="4" />
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerParallelConsumerQueue.TestProducerConsumerQueueBase.CanEnqueueDequeue" executed="True" result="Success" success="True" time="2.000" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="TestProducerSequentialConsumerQueue" executed="True" result="Success" success="True" time="7.535" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerSequentialConsumerQueue.Dont_Create_Threads_on_Demand" executed="True" result="Success" success="True" time="5.273" asserts="4" />
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerSequentialConsumerQueue.TestProducerConsumerQueueBase.CanEnqueueDequeue" executed="True" result="Success" success="True" time="2.001" asserts="2" />
                              <test-case name="ermeX.Tests.Threading.Queues.TestProducerSequentialConsumerQueue.When_Handling_Fails_Item_Is_Pushed_Back_To_Queue" executed="True" result="Success" success="True" time="0.259" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Scheduler" executed="True" result="Success" success="True" time="74.449" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="JobSchedulerTests" executed="True" result="Success" success="True" time="74.448" asserts="0">
                            <results>
                              <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_Dispose_When_ScheduledJobs_Pending" executed="True" result="Success" success="True" time="5.010" asserts="1" />
                              <test-suite type="ParameterizedTest" name="Can_ScheduleJob" executed="True" result="Success" success="True" time="35.108" asserts="0">
                                <results>
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(1)" executed="True" result="Success" success="True" time="1.013" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(2)" executed="True" result="Success" success="True" time="2.011" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(3)" executed="True" result="Success" success="True" time="3.011" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(4)" executed="True" result="Success" success="True" time="4.010" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(5)" executed="True" result="Success" success="True" time="5.008" asserts="3" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_ScheduleJob(20)" executed="True" result="Success" success="True" time="20.000" asserts="3" />
                                </results>
                              </test-suite>
                              <test-suite type="ParameterizedTest" name="Can_UnScheduleJob" executed="True" result="Success" success="True" time="24.009" asserts="0">
                                <results>
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_UnScheduleJob(1)" executed="True" result="Success" success="True" time="6.004" asserts="2" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_UnScheduleJob(3)" executed="True" result="Success" success="True" time="6.000" asserts="2" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_UnScheduleJob(5)" executed="True" result="Success" success="True" time="6.000" asserts="2" />
                                  <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.Can_UnScheduleJob(15)" executed="True" result="Success" success="True" time="6.000" asserts="2" />
                                </results>
                              </test-suite>
                              <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.CanInvoke_Past_Actions" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                              <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.When_Dispose_Invoked_Non_Running_Actions_Are_Never_Started" executed="True" result="Success" success="True" time="5.250" asserts="1" />
                              <test-case name="ermeX.Tests.Threading.Scheduler.JobSchedulerTests.When_Dispose_Invoked_Waits_Running_ActionsToFinish" executed="True" result="Success" success="True" time="5.002" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>